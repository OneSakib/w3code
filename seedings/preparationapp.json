[{"model": "PreparationApp.aptitudeparent", "pk": 52, "fields": {}}, {"model": "PreparationApp.reasoningparent", "pk": 55, "fields": {}}, {"model": "PreparationApp.verbalabilityparent", "pk": 56, "fields": {}}, {"model": "PreparationApp.interviewquestionparent", "pk": 54, "fields": {}}, {"model": "PreparationApp.companyquestionparent", "pk": 53, "fields": {}}, {"model": "PreparationApp.aptitude", "pk": 1, "fields": {"author": 1, "title": "Quantitative Aptitude Questions and Answers", "slug": "quantitative-aptitude-questions-and-answers", "timestamp": "2022-08-25T14:34:09.074", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 33, "parent": 52}}, {"model": "PreparationApp.reasoning", "pk": 1, "fields": {"author": 1, "title": "Logical Reasoning", "slug": "logical-reasoning", "timestamp": "2022-08-27T02:54:56.817", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 30, "parent": 55}}, {"model": "PreparationApp.verbalability", "pk": 1, "fields": {"author": 1, "title": "Verbal Ability", "slug": "verbal-ability", "timestamp": "2022-08-25T22:33:39.535", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 22, "parent": 56}}, {"model": "PreparationApp.interviewquestion", "pk": 1, "fields": {"author": 1, "title": "Python Interview 1 to 70", "slug": "python-interview-questions-and-answers", "timestamp": "2022-08-21T12:10:00.979", "content": "<p>&nbsp;</p>\r\n<p class=\"MsoNormal\" style=\"line-height: normal; background: white; text-align: center;\"><span style=\"font-size: 24pt; color: #e03e2d;\"><strong><span style=\"font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt;\">Python 150 Interview Question and Anwer</span></strong></span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">1) Introduction to Python:</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python&nbsp;was developed by Guido van Rossum and was released first on February 20, 1991. It is one of the most widely-used and loved programming languages and is interpreted in nature thereby providing flexibility of incorporating dynamic semantics. It is also a free and open-source language with very simple and clean syntax. This makes it easy for developers to&nbsp;<strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">learn python</span></strong>. Python also supports object-oriented programming and is most commonly used to perform general-purpose programming.&nbsp;</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Due to its simplistic nature and the ability to achieve multiple functionalities in fewer lines of code, python&rsquo;s popularity is growing tremendously. Python is also used in Machine Learning, Artificial Intelligence, Web Development, Web Scraping, and various other domains due to its ability to support powerful computations using powerful libraries. Due to this, there is a huge demand for python developers in India and across the world. Companies are willing to offer amazing perks and benefits to these developers.&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">2) What is Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; background: white;\">Python is a high-level, interpreted, general-purpose programming language. Being a general-purpose language, it can be used to build almost any type of application with the right tools/libraries. Additionally, python supports objects, modules, threads, exception-handling, and automatic memory management which help in modelling real-world problems and building applications to solve these problems.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">3) What are the benefits of using Python</span></h3>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Benefits of using Python:</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt; mso-fareast-language: EN-AU;\"><span style=\"mso-list: Ignore;\">&middot;<span style=\"font: 7.0pt 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Python is a general-purpose programming language that has a simple, easy-to-learn syntax that emphasizes readability and therefore reduces the cost of program maintenance. Moreover, the language is capable of scripting, is completely open-source, and supports third-party packages encouraging modularity and code reuse.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt; mso-fareast-language: EN-AU;\"><span style=\"mso-list: Ignore;\">&middot;<span style=\"font: 7.0pt 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Its high-level data structures, combined with dynamic typing and dynamic binding, attract a huge community of&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\"><a href=\"https://www.interviewbit.com/blog/python-developer-salary-in-india/\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; color: windowtext; letter-spacing: .1pt; mso-fareast-language: EN-AU; text-decoration: none; text-underline: none;\">developers</span></a></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">&nbsp;for Rapid Application Development and deployment</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">4) What is a dynamically typed language?</span></h3>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Before we understand a dynamically typed language, we should learn about what typing is.&nbsp;<strong>Typing</strong>&nbsp;refers to type-checking in programming languages. In a&nbsp;<strong>strongly-typed</strong>&nbsp;language, such as Python,&nbsp;<strong>\"1\" + 2</strong>&nbsp;will result in a type error since these languages don't allow for \"type-coercion\" (implicit conversion of data types). On the other hand, a&nbsp;<strong>weakly-typed</strong>&nbsp;language, such as JavaScript, will simply output&nbsp;<strong>\"12\"</strong>&nbsp;as result.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Type-checking can be done at two stages -</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt; mso-fareast-language: EN-AU;\"><span style=\"mso-list: Ignore;\">&middot;<span style=\"font: 7.0pt 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Static</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">&nbsp;- Data Types are checked before execution.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt; mso-fareast-language: EN-AU;\"><span style=\"mso-list: Ignore;\">&middot;<span style=\"font: 7.0pt 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Dynamic</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">&nbsp;- Data Types are checked during execution.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">Python is an interpreted language, executes each statement line by line and thus type-checking is done on the fly, during execution. Hence, Python is a Dynamically Typed Language.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; mso-fareast-language: EN-AU;\">&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">5) What is an Interpreted language?</span></h3>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt; background: white;\">An Interpreted language executes its statements line by line. Languages such as Python, JavaScript, R, PHP, and Ruby are prime examples of Interpreted languages. Programs written in an interpreted language runs directly from the source code, with no intermediary compilation step.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">6) What is PEP 8 and why is it important?</span></h3>\r\n<p><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">PEP stands for&nbsp;<strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Python Enhancement Proposal</span></strong>. PEP is an official design document providing information to the Python community, or describing a new feature for Python or its processes.&nbsp;<strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">PEP 8</span></strong>&nbsp;is especially important since it documents the style guidelines for Python Code. Apparently contributing to the Python open-source community requires you to follow these style guidelines sincerely and strictly.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">7)&nbsp;What is the difference between list and tuples in Python?</span></strong></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr style=\"mso-yfti-irow: 0; mso-yfti-firstrow: yes; height: 3.25pt;\">\r\n<td style=\"border: none; background: #008DD9; padding: .75pt .75pt .75pt 3.75pt; height: 3.25pt;\" colspan=\"2\">&nbsp;</td>\r\n</tr>\r\n<tr style=\"mso-yfti-irow: 1; height: 27.6pt;\">\r\n<td style=\"background: #008DD9; padding: .75pt .75pt .75pt 3.75pt; height: 27.6pt;\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">LIST</span></strong></p>\r\n</td>\r\n<td style=\"background: #008DD9; padding: .75pt .75pt .75pt 3.75pt; height: 27.6pt;\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">TUPLES</span></strong></p>\r\n</td>\r\n</tr>\r\n<tr style=\"mso-yfti-irow: 2; height: 35.25pt;\">\r\n<td style=\"width: 195.25pt; padding: .75pt .75pt .75pt 3.75pt; height: 35.25pt;\" width=\"260\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists are mutable i.e. they can be edited.</span></p>\r\n</td>\r\n<td style=\"width: 260.55pt; padding: .75pt .75pt .75pt 3.75pt; height: 35.25pt;\" width=\"347\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Tuples are&nbsp;<a name=\"WhatarethekeyfeaturesofPython?\"></a>immutable (tuples are lists which can&rsquo;t be edited).</span></p>\r\n</td>\r\n</tr>\r\n<tr style=\"mso-yfti-irow: 3; height: 26.25pt;\">\r\n<td style=\"width: 195.25pt; padding: .75pt .75pt .75pt 3.75pt; height: 26.25pt;\" width=\"260\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists are slower than tuples.</span></p>\r\n</td>\r\n<td style=\"width: 260.55pt; padding: .75pt .75pt .75pt 3.75pt; height: 26.25pt;\" width=\"347\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Tuples are faster than list.</span></p>\r\n</td>\r\n</tr>\r\n<tr style=\"mso-yfti-irow: 4; mso-yfti-lastrow: yes; height: 33.75pt;\">\r\n<td style=\"width: 195.25pt; padding: .75pt .75pt .75pt 3.75pt; height: 33.75pt;\" width=\"260\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Syntax: list_1 = [10, &lsquo;Chelsea&rsquo;, 20]</span></p>\r\n</td>\r\n<td style=\"width: 260.55pt; padding: .75pt .75pt .75pt 3.75pt; height: 33.75pt;\" width=\"347\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Syntax: tup_1 = (10, &lsquo;Chelsea&rsquo; , 20)</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">8)</span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\"> </span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">&nbsp;</span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">What</span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\"> type of language is python? </span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;</span></strong><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">Programming or scripting?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;</span></em></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python is capable of scripting, but in general sense, it is considered as a general-purpose programming language.&nbsp;<a name=\"HowisPythonaninterpretedlanguage?\"></a>To know more about Scripting, you can refer to the&nbsp;Python Scripting Tutorial.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">9) Python an interpreted language. Explain.</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;</span></em></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">An interpreted language is any programming language which is not in machine-level code before runtime.&nbsp;<a name=\"Whatispep8?\"></a>Therefore, Python is an interpreted language.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">10) What are the common built-in data types in Python?</span></strong></p>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The common built-in data types in python are-</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Numbers</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; They includes integers, floating-point numbers, and complex numbers. e.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">1,\r\n7.9,3+4i</span></code></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">List</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; An ordered sequence of items is called a list. The elements of a list may belong to different data types. E.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">[5,&rsquo;market&rsquo;,2.4]</span></code></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Tuple</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; It is also an ordered sequence of elements. Unlike lists , tuples are immutable, which means they can&rsquo;t be changed. E.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">(3,&rsquo;tool&rsquo;,1)</span></code></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">String</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; A sequence of characters is called a string. They are declared within single or double-quotes. E.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">&ldquo;Sana&rdquo;</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">,&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">&lsquo;She\r\nis going to the market&rsquo;</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">, etc.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Set</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; Sets are a collection of unique items that are not in order. E.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">{7,6,8}</span></code></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Dictionary</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; A dictionary stores values in key and value pairs where each value can be accessed through its key. The order of items is not important. E.g.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">{1:&rsquo;apple&rsquo;,2:&rsquo;mango}</span></code></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Boolean</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&ndash; There are 2 Boolean values-&nbsp;<strong>True</strong>&nbsp;and&nbsp;<strong>False</strong>.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">11) What is slicing in Python?</span></strong></p>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Slicing is used to access parts of sequences like lists, tuples, and strings. The syntax of slicing is-</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">[start:end:step]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">. The step can be omitted as well. When we write&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">[start:end]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;this returns all the elements of the sequence from the start (inclusive) till the end-1 element. If the start or end element is negative, it means the ith element from the end. The step indicates the jump or how many elements have to be skipped. E.g.. if there is a list-&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">[1,2,3,4,5,6,7,8]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">. Then</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">&nbsp;[-1:2:2]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;will return elements starting from the last element till the third element by printing every second element i.e.&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">[8,6,4]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">12) What are Keywords in Python?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Keywords in python are reserved words that have special meaning. They are generally used to define type of variables. Keywords cannot be used for variable or function names. There are following 33 keywords in python-</span></p>\r\n<ul type=\"disc\">\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">and</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">or</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">not</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">if</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">elif</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">else</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">for</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">while</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">break</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&nbsp;as</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">def</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">lambda</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">pass</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">return</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">true</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">false</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">try</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">with</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">assert</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">class</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">continue</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">del</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">except</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">finally</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">from</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">global</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">import</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">in</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">is</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">none</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">nonlocal</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">raise</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l2 level1 lfo1; tab-stops: list 36.0pt;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">yield</span></li>\r\n</ul>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">13) What are Literals in Python and explain about different Literals</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">A literal in python source code represents a fixed value for primitive data types. There are 5 types of literals in python-</span></p>\r\n<ol start=\"1\" type=\"1\">\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">String literals</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&ndash; A string literal is created by assigning some text enclosed in single or double quotes to a variable. To create multiline literals, assign the multiline text enclosed in triple quotes. E.g..</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\"> Name=&rdquo;Tanya&rdquo;</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">A character literal</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&ndash; It is created by assigning a single character enclosed in double quotes. E.g..&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">a=&rsquo;t&rsquo;</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Numeric literals</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&nbsp;include numeric values that can be either inte.g.er, floating point value, or a complex number. E.g..&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">a=50</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Boolean literals</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&ndash; These can be 2 values- either True or False.</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Literal Collections</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&ndash; These are of 4 types-</span></li>\r\n</ol>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">a) List collections-E.g..&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">a=[1,2,3,&rsquo;Amit&rsquo;]</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;b) Tuple literals- E.g..</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">&nbsp;a=(5,6,7,8)</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">c) Dictionary literals- E.g..</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">&nbsp;dict={1: &rsquo;apple&rsquo;, 2: &rsquo;mango, 3: &rsquo;banana`&rsquo;}</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">d) Set literals- E.g..&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Courier New'; mso-fareast-language: EN-AU;\">{&ldquo;Tanya&rdquo;, &ldquo;Rohit&rdquo;, &ldquo;Mohan&rdquo;}</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">6. Special literal- Python has 1 special literal None which is used to return a null variable.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">14) &nbsp;How is memory managed in Python?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Memory is managed in Python in the following ways:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l4 level1 lfo3;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Memory management in python is managed by&nbsp;<em><strong>Python private heap space</strong></em>. All Python objects and data structures are located in a private heap. The programmer does not have access to this private heap. The python interpreter takes care of this instead.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l4 level1 lfo3;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The allocation of heap space for Python objects is done by Python&rsquo;s memory manager. The core API gives access to some tools for the programmer to code.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l4 level1 lfo3;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python also has an inbuilt garbage collector, which recycles all the unused memory and so that it can be made available to the heap space.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">15) What is type conversion in Python?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Type conversion refers to the conversion of one data type into another.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">int()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;&ndash; converts any data type into inte.g.er type</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">float()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;&ndash; converts any data type into float type</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">ord()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;&ndash; converts characters into inte.g.er</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">hex(</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">) &ndash; converts integers to hexadecimal</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">oct()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;&ndash; converts inte.g.er to octal</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">tuple() &ndash;&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function is used to&nbsp;convert to a tuple.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">set() &ndash;&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function returns the&nbsp;type after converting to set.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">list() &ndash;&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function is used to convert&nbsp;any data type to a list type.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">dict() &ndash;&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function is used to convert a tuple of order (key, value) into a dictionary.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">str() &ndash;&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Used to&nbsp;convert inte.g.er into a string.</span></p>\r\n<p style=\"margin-top: 0cm;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">complex(real,imag) &ndash;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;This function converts real numbers to complex(real,imag) number.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">16) &nbsp;Is indentation required in python?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Indentation is necessary for Python. It specifies a block of code. All code within loops, classes, functions, etc is specified within an indented block. It is usually done using four space characters. If your code is not indented necessarily, it will not execute accurately and will throw errors as well.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">17) What are functions in Python?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">A function is a block of code which is executed only when it is called. To define a&nbsp;<u>Python function</u>, the&nbsp;<strong>def</strong>&nbsp;keyword is used.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">18) What is self in Python?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Self is an instance or an object of a class. In Python, this is explicitly included as the first parameter. However, this is not the case in Java where it&rsquo;s optional.&nbsp; It helps to differentiate between the methods and attributes of a class with local variables.</span></p>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The self variable in the init method refers to the newly created object while in other methods; it refers to the object whose method was called.</span></p>\r\n<h3 style=\"margin-top: 0cm;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; font-weight: normal;\">19) &nbsp;How do you write comments in python?</span></strong></h3>\r\n<p style=\"margin-top: 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Comments in Python start with a # character. However, alternatively at times, commenting is done using docstrings (strings enclosed within triple quotes).</span></p>\r\n<h3><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">20) What is Scope in Python?</span></h3>\r\n<p><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Every object in Python functions within a scope. A scope is a block of code where an object in Python remains relevant. Namespaces uniquely identify all the objects inside a program. However, these namespaces also have a scope defined for them where you could use their objects without any prefix. A few examples of scope created during code execution in Python are as follows:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l3 level1 lfo4;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">A&nbsp;<strong>local scope</strong>&nbsp;refers to the local objects available in the current function.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l3 level1 lfo4;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">A&nbsp;<strong>global scope</strong>&nbsp;refers to the objects available throughout the code execution since their inception.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l3 level1 lfo4;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">A&nbsp;<strong>module-level scope</strong>&nbsp;refers to the global objects of the current module accessible in the program.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l3 level1 lfo4;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">An&nbsp;<strong>outermost scope</strong>&nbsp;refers to all the built-in names callable in the program. The objects in this scope are searched last to find the name referenced.</span></p>\r\n<p><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Note:</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;Local scope objects can be synced with global scope objects using keywords such as&nbsp;<strong>global</strong>.</span></p>\r\n<h3><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">21) what are lists and tuples? What is the key difference between the two?</span></h3>\r\n<p><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Lists&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">and&nbsp;<strong>Tuples</strong>&nbsp;are both s<strong>equence data types</strong>&nbsp;that can store a collection of objects in Python. The objects stored in both sequences can have&nbsp;<strong>different data types</strong>. Lists are represented with&nbsp;<strong>square brackets</strong>&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">['sara',\r\n6, 0.19]</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">, while tuples are represented with&nbsp;<strong>parentheses</strong>&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">('ansh',\r\n5, 0.97)</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">.<br />But what is the real difference between the two? The key difference between the two is that while&nbsp;<strong>lists are mutable</strong>,&nbsp;<strong>tuples</strong>&nbsp;on the other hand are&nbsp;<strong>immutable</strong>&nbsp;objects. This means that lists can be modified, appended or sliced on the go but tuples remain constant and cannot be modified in any manner. You can run the following example on Python IDLE to confirm the difference:</span></p>\r\n<pre class=\"language-python\"><code>my_tuple = ('sara', 6, 5, 0.97)\r\nmy_list = ['sara', 6, 5, 0.97]\r\nprint(my_tuple[0])     # output =&gt; 'sara'\r\nprint(my_list[0])     # output =&gt; 'sara'\r\nmy_tuple[0] = 'ansh'    # modifying tuple =&gt; throws an error\r\nmy_list[0] = 'ansh'    # modifying list =&gt; list modified\r\nprint(my_tuple[0])     # output =&gt; 'sara'\r\nprint(my_list[0])     # output =&gt; 'ansh'</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">22) &nbsp;What are the common built-in data types in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">There are several built-in data types in Python. Although, Python doesn't require data types to be defined explicitly during variable declarations type errors are likely to occur if the knowledge of data types and their compatibility with each other are ne.g.lected. Python provides&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">type()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">isinstance()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;functions to check the type of these variables. These data types can be grouped into the following cate.g.ories-</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo5; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">None Type:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br /></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">None</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;keyword represents the null values in Python. Boolean equality operation can be performed using these None Type objects.</span></p>\r\n<p>&nbsp;</p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr style=\"height: 54.3906px;\">\r\n<td style=\"background: #cdd5e4; padding: 0.75pt; width: 23.767%; height: 54.3906px;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Class Name</span></strong></p>\r\n</td>\r\n<td style=\"background: #cdd5e4; padding: 0.75pt; width: 75.03%; height: 54.3906px;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Description</span></strong></p>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr style=\"height: 76.7812px;\">\r\n<td style=\"background: #f2f6fd; padding: 0.75pt; width: 23.767%; height: 76.7812px;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">NoneType</span></p>\r\n</td>\r\n<td style=\"background: #f2f6fd; padding: 0.75pt; width: 75.03%; height: 76.7812px;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Represents the<strong>&nbsp;NULL</strong>&nbsp;values in Python.</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Numeric Types:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />There are three distinct numeric types -&nbsp;<strong>integers, floating-point numbers</strong>, and&nbsp;<strong>complex numbers</strong>. Additionally,&nbsp;<strong>Booleans</strong>&nbsp;are a sub-type of integers.</span></p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Class Name</span></strong></p>\r\n</td>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Description</span></strong></p>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">int</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Stores inte.g.er literals including hex, octal and binary numbers as integers</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">float</span></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Stores literals containing decimal values and/or exponent signs as floating-point numbers</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">complex</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Stores complex numbers in the form (A + Bj) and has attributes:&nbsp;</span><code><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin;\">real</span></code><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;and&nbsp;</span><code><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin;\">imag</span></code></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">bool</span></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Stores Boolean value (True or False).</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white;\"><strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:</span></em></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;The standard library also includes&nbsp;<strong>fractions</strong>&nbsp;to store rational numbers and&nbsp;<strong>decimal</strong>&nbsp;to store floating-point numbers with user-defined precision.</span></em></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Sequence Types:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />According to Python Docs, there are three basic Sequence Types -&nbsp;<strong>lists, tuples,</strong>&nbsp;and&nbsp;<strong>range</strong>&nbsp;objects. Sequence types have the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">in</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">not in</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;operators defined for their traversing their elements. These operators share the same priority as the comparison operations.</span></p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Class Name</span></strong></p>\r\n</td>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Description</span></strong></p>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">list</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Mutable sequence used to store collection of items.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">tuple</span></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Immutable sequence used to store collection of items.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">range</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Represents an immutable sequence of numbers generated during execution.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">str</span></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Immutable sequence of Unicode code points to store textual data.</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The standard library also includes additional types for processing:<br />1.<strong>&nbsp;Binary data&nbsp;</strong>such as&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">bytearray bytes</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">memoryview</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;, and<br />2.<strong>&nbsp;Text strings&nbsp;</strong>such as&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">str</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Mapping Types:</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A mapping object can map hashable values to random objects in Python. Mappings objects are mutable and there is currently only one standard mapping type, the&nbsp;<strong><em>dictionary</em></strong>.</span></p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Class Name&nbsp;</span></strong></p>\r\n</td>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Description</span></strong></p>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">dict</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Stores comma-separated list of&nbsp;<strong>key: value</strong>&nbsp;pairs</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Set Types:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />Currently, Python has two built-in set types -&nbsp;<strong>set</strong>&nbsp;and&nbsp;<strong>frozenset</strong>.&nbsp;<strong>set</strong>&nbsp;type is mutable and supports methods like&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">add()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">remove()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.&nbsp;<strong>frozenset</strong>&nbsp;type is immutable and can't be modified after creation.</span></p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Class Name</span></strong></p>\r\n</td>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" nowrap=\"nowrap\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Description</span></strong></p>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">set</span></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Mutable unordered collection of distinct hashable objects.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">frozenset</span></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Immutable collection of distinct hashable objects.</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white;\"><strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:</span></em></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></em><code><em><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">set</span></em></code><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is mutable and thus cannot be used as key for a dictionary. On the other hand,&nbsp;</span></em><code><em><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">frozenset</span></em></code><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is immutable and thus, hashable, and can be used as a dictionary key or as an element of another set.</span></em></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Modules:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />Module is an additional built-in type supported by the Python Interpreter. It supports one special operation, i.e.,&nbsp;<strong>attribute access</strong>:&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">mymod.myobj</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, where&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">mymod</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is a module and&nbsp;<strong>myobj</strong>&nbsp;references a name defined in m's symbol table. The module's symbol table resides in a very special attribute of the module&nbsp;<strong>__dict__</strong>, but direct assignment to this module is neither possible nor recommended.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Callable Types:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />Callable types are the types to which function call can be applied. They can be&nbsp;<strong>user-defined functions, instance methods, generator functions</strong>, and some other<strong>&nbsp;built-in functions, methods</strong>&nbsp;and&nbsp;<strong>classes</strong>.<br />Refer to the documentation at&nbsp;</span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\"><a href=\"https://docs.python.org/3/reference/datamodel.html\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: 'Segoe UI'; color: windowtext; letter-spacing: .1pt;\">docs.python.org</span></a></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;for a detailed view of the&nbsp;<strong>callable types</strong>.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">23) &nbsp;Does python support multiple inheritances?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Multiple inheritances mean that a class can be derived from more than one parent classes. Python does support multiple inheritances, unlike Java.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">24) &nbsp;What is Polymorphism in Python?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Polymorphism means the ability to take multiple forms. So, for instance, if the parent class has a method named ABC then the child class also can have a method with the same name ABC having its own parameters and variables. Python allows polymorphism.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">25) &nbsp;Define encapsulation in Python?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Encapsulation means binding the code and the data together. A Python class in an example of encapsulation.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">26) &nbsp;How do you do data abstraction in Python?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Data Abstraction is providing only the required details and hiding the implementation from the world. It can be achieved in Python by using interfaces and abstract classes.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-bottom-alt: auto; line-height: normal; mso-outline-level: 3; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">27) &nbsp;Does python make use of access specifiers?</span></strong></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Arial; mso-fareast-language: EN-AU;\">Python does not deprive access to an instance variable or function. Python lays down the concept of prefixing the name of the variable, function or method with a single or double underscore to imitate the behaviour&nbsp;of protected and private access specifiers.&nbsp;&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">28) What is pass in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">pass</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;keyword represents a null operation in Python. It is generally used for the purpose of filling up empty blocks of code which may execute during runtime but has yet to be written. Without the&nbsp;<strong>pass</strong>&nbsp;statement in the following code, we may run into some errors during code execution.</span></p>\r\n<pre class=\"language-python\"><code>def myEmptyFunc():\r\n   # do nothing\r\n   pass\r\nmyEmptyFunc()    # nothing happens\r\n## Without the pass keyword\r\n# File \"&lt;stdin&gt;\", line 3\r\n# IndentationError: expected an indented block</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">29) What are modules and packages in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python packages and Python modules are two mechanisms that allow for&nbsp;<strong>modular programming</strong>&nbsp;in Python. Modularizing has several advantages -</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Simplicity</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Working on a single module helps you focus on a relatively small portion of the problem at hand. This makes development easier and less error-prone.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Maintainability</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Modules are designed to enforce logical boundaries between different problem domains. If they are written in a manner that reduces interdependency, it is less likely that modifications in a module might impact other parts of the program.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Reusability</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Functions defined in a module can be easily reused by other parts of the application.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Scoping</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Modules typically define a separate namespace, which helps avoid confusion between identifiers from other parts of the program.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Modules</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, in general, are simply Python files with a .py extension and can have a set of functions, classes, or variables defined and implemented. They can be imported and initialized once using the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">import</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;statement. If partial functionality is needed, import the requisite classes or functions using&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">from foo\r\nimport bar</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Packages</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;allow for hierarchical structuring of the module namespace using&nbsp;<strong>dot notation</strong>. As,&nbsp;<strong>modules</strong>&nbsp;help avoid clashes between global variable names, in a similar manner,&nbsp;<strong>packages</strong>&nbsp;help avoid clashes between module names.<br />Creating a package is easy since it makes use of the system's inherent file structure. So just stuff the modules into a folder and there you have it, the folder name as the package name. Importing a module or its contents from this package requires the package name as prefix to the module name joined by a dot.</span></p>\r\n<p style=\"background: white;\"><strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:</span></em></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;You can technically import the package as well, but alas, it doesn't import the modules within the package to the local namespace, thus, it is practically useless.</span></em></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">30) What are global, protected and private attributes in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Global</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;variables are public variables that are defined in the global scope. To use the variable in the global scope inside a function, we use the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">global</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;keyword.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Protected</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;attributes are attributes defined with an underscore prefixed to their identifier e.g.. _Sara. They can still be accessed and modified from outside the class they are defined in but a responsible developer should refrain from doing so.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Private&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">attributes are attributes with double underscore prefixed to their identifier e.g. __ansh. They cannot be accessed or modified from the outside directly and will result in an Attribute Error if such an attempt is made.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">31) What is the use of self in Python?</span></h3>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Self&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">is used to represent the instance of the class. With this keyword, you can access the attributes and methods of the class in python. It binds the attributes with the given arguments. self is used in different places and often thought to be a keyword. But unlike in C++, self is not a keyword in Python.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">32) What is __init__?</span></h3>\r\n<p>&nbsp;</p>\r\n<p style=\"background: white;\"><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">__init__</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is a contractor method in Python and is automatically called to allocate memory when a new object/instance is created. All classes have a&nbsp;<strong>__init__</strong> method associated with them. It helps in distinguishing methods and attributes of a class from local variables.</span></p>\r\n<pre class=\"language-python\"><code># class definition\r\nclass Student:\r\n   def __init__(self, fname, lname, age, section):\r\n       self.firstname = fname\r\n       self.lastname = lname\r\n       self.age = age\r\n       self.section = section\r\n# creating a new object\r\nstu1 = Student(\"Sara\", \"Ansh\", 22, \"A2\")\r\n</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">33) What is break, continue and pass in Python?</span></h3>\r\n<p>&nbsp;</p>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%;\" border=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" valign=\"top\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Break</span></strong></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The break statement terminates the loop immediately and the control flows to the statement after the body of the loop.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" valign=\"top\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Continue</span></strong></p>\r\n</td>\r\n<td style=\"background: #E4EEFF; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The continue statement terminates the current iteration of the statement, skips the rest of the code in the current iteration and the control flows to the next iteration of the loop.</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"background: #CDD5E4; padding: .75pt .75pt .75pt .75pt;\" valign=\"top\">\r\n<p class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Pass</span></strong></p>\r\n</td>\r\n<td style=\"background: #F2F6FD; padding: .75pt .75pt .75pt .75pt;\">\r\n<p class=\"MsoNormal\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">As explained above, the pass keyword in Python is generally used to fill up empty blocks and is similar to an empty statement represented by a semi-colon in languages such as Java, C++, JavaScript, etc.</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<pre class=\"language-python\"><code>pat = [1, 3, 2, 1, 2, 3, 1, 0, 1, 3]\r\nfor p in pat:\r\n   pass\r\n   if (p == 0):\r\n       current = p\r\n       break\r\n   elif (p % 2 == 0):\r\n       continue\r\n   print(p)    # output =&gt; 1 3 1 3 1\r\nprint(current)    # output =&gt; 0\r\n</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">34) What are unit tests in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Unit test is a unit testing framework of Python.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Unit testing means testing different components of software separately. Can you think about why unit testing is important? Imagine a scenario; you are building software that uses three components namely A, B, and C. Now, suppose your software breaks at a point time. How will you find which component was responsible for breaking the software? Maybe it was component A that failed, which in turn failed component B, and this actually failed the software. There can be many such combinations.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This is why it is necessary to test each and every component properly so that we know which component might be highly responsible for the failure of the software.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">35) What is docstring in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Documentation string or docstring is a multiline string used to document a specific code segment.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The docstring should describe what the function or method does.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">36) What is slicing in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">As the name suggests, &lsquo;slicing&rsquo; is taking parts of.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Syntax for slicing is&nbsp;<strong>[start : stop : step]</strong></span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">start</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is the starting index from where to slice a list or tuple</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">stop</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is the ending index or where to sop.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">step</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is the number of steps to jump.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Default value for&nbsp;<strong>start</strong>&nbsp;is 0,&nbsp;<strong>stop</strong>&nbsp;is number of items,&nbsp;<strong>step</strong>&nbsp;is 1.</span></p>\r\n<p>&nbsp;</p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Slicing can be done on&nbsp;<strong>strings, arrays, lists</strong>, and&nbsp;<strong>tuples</strong>.</span></p>\r\n<pre class=\"language-python\"><code>numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nprint(numbers[1 : : 2])  #output : [2, 4, 6, 8, 10]\r\n</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">37) Explain how can you make a Python Script executable on UNIX?</span></h3>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Script file must be.g.in with&nbsp;<strong>#!/usr/bin/env python</strong></span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">38) What is the difference between Python Arrays and lists?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Arrays in python can only contain elements of same data types i.e., data type of array should be homogeneous. It is a thin wrapper around C language arrays and consumes far less memory than lists.</span></p>\r\n<p>&nbsp;</p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Lists in python can contain elements of different data types i.e., data type of lists can be heterogeneous. It has the disadvantage of consuming large memory.</span></p>\r\n<pre class=\"language-python\"><code>import array\r\na = array.array('i', [1, 2, 3])\r\nfor i in a:\r\n    print(i, end=' ')    #OUTPUT: 1 2 3\r\na = array.array('i', [1, 2, 'string'])    #OUTPUT: TypeError: an inte.g.er is required (got type str)\r\na = [1, 2, 'string']\r\nfor i in a:\r\n   print(i, end=' ')    #OUTPUT: 1 2 string\r\n</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">39) How is memory managed in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Memory management in Python is handled by the&nbsp;<strong>Python Memory Manager</strong>. The memory allocated by the manager is in form of a&nbsp;<strong>private heap space</strong>&nbsp;dedicated to Python. All Python objects are stored in this heap and being private, it is inaccessible to the programmer. Though, python does provide some core API functions to work upon the private heap space.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l1 level1 lfo1; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Additionally, Python has an in-built garbage collection to recycle the unused memory for the private heap space.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">40) What are Python namespaces? Why are they used?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A namespace in Python ensures that object names in a program are unique and can be used without any conflict. Python implements these namespaces as dictionaries with 'name as key' mapped to a corresponding 'object as value'. This allows for multiple namespaces using the same name and mapping it to a separate object. A few examples of namespaces are as follows:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Local Namespace</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;includes local names inside a function. the namespace is temporarily created for a function call and gets cleared when the function returns.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Global Namespace</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;includes names from various imported packages/ modules that are being used in the current project. This namespace is created when the package is imported in the script and lasts until the execution of the script.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo2; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Built-in Namespace&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">includes built-in functions of core Python and built-in names for various types of exceptions.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The&nbsp;<strong>lifecycle of a namespace</strong>&nbsp;depends upon the scope of objects they are mapped to. If the scope of an object ends, the lifecycle of that namespace comes to an end. Hence, it isn't possible to access inner namespace objects from an outer namespace.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">41) What is Scope Resolution in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Sometimes objects within the same scope have the same name but function differently. In such cases, scope resolution comes into play in Python automatically. A few examples of such behaviour are:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python modules namely 'math' and 'cmath' have a lot of functions that are common to both of them -&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">log10()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">,&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">acos()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">,&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">exp()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;etc. To resolve this ambiguity, it is necessary to prefix them with their respective module, like&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">math.exp()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">cmath.exp()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p>&nbsp;</p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l2 level1 lfo3; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Consider the code below, an object temp has been initialized to 10 globally and then to 20 on function call. However, the function call didn't change the value of the temp globally. Here, we can observe that Python draws a clear line between global and local variables, treating their namespaces as separate identities.</span></p>\r\n<pre class=\"language-python\"><code>temp = 10   # global-scope variable\r\ndef func():\r\n     temp = 20   # local-scope variable\r\n     print(temp)\r\nprint(temp)   # output =&gt; 10\r\nfunc()    # output =&gt; 20\r\nprint(temp)   # output =&gt; 10\r\n</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This behaviour can be overridden using the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">global</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"> keyword inside the function, as shown in the following example:</span></p>\r\n<pre class=\"language-python\"><code>temp = 10   # global-scope variable\r\ndef func():\r\n     global temp\r\n     temp = 20   # local-scope variable\r\n     print(temp)\r\nprint(temp)   # output =&gt; 10\r\nfunc()    # output =&gt; 20\r\nprint(temp)   # output =&gt; 20\r\n</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">42) What are decorators in Python?</span></h3>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Decorators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;in Python are essentially functions that add functionality to an existing function in Python without changing the structure of the function itself. They are represented the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">@decorator_name</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;in Python and are called in a bottom-up fashion. For example:</span></p>\r\n<pre class=\"language-python\"><code># decorator function to convert to lowercase\r\ndef lowercase_decorator(function):\r\n   def wrapper():\r\n       func = function()\r\n       string_lowercase = func.lower()\r\n       return string_lowercase\r\n   return wrapper\r\n# decorator function to split words\r\ndef splitter_decorator(function):\r\n   def wrapper():\r\n       func = function()\r\n       string_split = func.split()\r\n       return string_split\r\n   return wrapper\r\n@splitter_decorator # this is executed next\r\n@lowercase_decorator # this is executed first\r\ndef hello():\r\n   return 'Hello World'\r\nhello()   # output =&gt; [ 'hello' , 'world' ]</code></pre>\r\n<p>&nbsp;</p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The beauty of the decorators lies in the fact that besides adding functionality to the output of the method, they can even&nbsp;<strong>accept arguments</strong>&nbsp;for functions and can further modify those arguments before passing it to the function itself. The&nbsp;<strong>inner nested function</strong>, i.e. 'wrapper' function, plays a significant role here. It is implemented to enforce&nbsp;<strong>encapsulation</strong> and thus, keep itself hidden from the global scope.</span></p>\r\n<pre class=\"language-python\"><code># decorator function to capitalize names\r\ndef names_decorator(function):\r\n   def wrapper(arg1, arg2):\r\n       arg1 = arg1.capitalize()\r\n       arg2 = arg2.capitalize()\r\n       string_hello = function(arg1, arg2)\r\n       return string_hello\r\n   return wrapper\r\n@names_decorator\r\ndef say_hello(name1, name2):\r\n   return 'Hello ' + name1 + '! Hello ' + name2 + '!'\r\nsay_hello('sara', 'ansh')   # output =&gt; 'Hello Sara! Hello Ansh!'</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">43) What are Dict and List comprehensions?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python comprehensions, like decorators, are&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">syntactic sugar</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;constructs that help&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">build altered</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">filtered lists</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, dictionaries, or sets from a given list, dictionary, or set. Using comprehensions saves a lot of time and code that might be considerably more verbose (containing more lines of code). Let's check out some examples, where comprehensions can be truly beneficial:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Performing mathematical operations on the entire list</span></strong></p>\r\n<pre class=\"language-python\"><code>my_list = [2, 3, 5, 7, 11]\r\nsquared_list = [x**2 for x in my_list]    # list comprehension\r\n# output =&gt; [4 , 9 , 25 , 49 , 121]\r\nsquared_dict = {x:x**2 for x in my_list}    # dict comprehension\r\n# output =&gt; {11: 121, 2: 4 , 3: 9 , 5: 25 , 7: 49}</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><code></code></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Performing conditional filtering operations on the entire list</span></strong></p>\r\n<pre class=\"language-python\"><code>my_list = [2, 3, 5, 7, 11]\r\nsquared_list = [x**2 for x in my_list if x%2 != 0]    # list comprehension\r\n# output =&gt; [9 , 25 , 49 , 121]\r\nsquared_dict = {x:x**2 for x in my_list if x%2 != 0}    # dict comprehension\r\n# output =&gt; {11: 121, 3: 9 , 5: 25 , 7: 49}</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Combining multiple lists into one</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Comprehensions allow for multiple iterators and hence, can be used to combine multiple lists into one.&nbsp;</span></p>\r\n<pre class=\"language-python\"><code>a = [1, 2, 3]\r\nb = [7, 8, 9]\r\n[(x + y) for (x,y) in zip(a,b)]  # parallel iterators\r\n# output =&gt; [8, 10, 12]\r\n[(x,y) for x in a for y in b]    # nested iterators\r\n# output =&gt; [(1, 7), (1, 8), (1, 9), (2, 7), (2, 8), (2, 9), (3, 7), (3, 8), (3, 9)] </code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Flattening a multi-dimensional list</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A similar approach of nested iterators (as above) can be applied to flatten a multi-dimensional list or work upon its inner elements.&nbsp;</span></p>\r\n<pre class=\"language-python\"><code>my_list = [[10,20,30],[40,50,60],[70,80,90]]\r\nflattened = [x for temp in my_list for x in temp]\r\n# output =&gt; [10, 20, 30, 40, 50, 60, 70, 80, 90]</code></pre>\r\n<p style=\"background: white;\"><code></code></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;List comprehensions have the same effect as the map method in other languages. They follow the mathematical set builder notation rather than map and filter functions in Python.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">44) What is lambda in Python? Why is it used?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Lambda is an anonymous function in Python, that can accept any number of arguments, but can only have a single expression. It is generally used in situations requiring an anonymous function for a short time period. Lambda functions can be used in either of the two ways:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Assigning lambda functions to a variable:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><code></code></p>\r\n<pre class=\"language-python\"><code>mul = lambda a, b : a * b\r\nprint(mul(2, 5))    # output =&gt; 10</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><code></code></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><code></code><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Wrapping lambda functions inside another function:</span></p>\r\n<pre class=\"language-python\"><code>def myWrapper(n):\r\n return lambda a : a * n\r\nmulFive = myWrapper(5)\r\nprint(mulFive(2))    # output =&gt; 10</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">45) How do you copy an object in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">In Python, the assignment statement (</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">=</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;operator) does not copy objects. Instead, it creates a binding between the existing object and the target variable name. To create copies of an object in Python, we need to use the&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">copy</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;module. Moreover, there are two ways of creating copies for the given object using the&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">copy</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;module -</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Shallow Copy</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is a bit-wise copy of an object. The copied object created has an exact copy of the values in the original object. If either of the values is a reference to other objects, just the reference addresses for the same are copied.<br /></span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Deep Copy</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;copies all values recursively from source to target object, i.e. it even duplicates the objects referenced by the source object.</span></p>\r\n<pre class=\"language-python\"><code>from copy import copy, deepcopy\r\nlist_1 = [1, 2, [3, 5], 4]\r\n## shallow copy\r\nlist_2 = copy(list_1) \r\nlist_2[3] = 7\r\nlist_2[2].append(6)\r\nlist_2    # output =&gt; [1, 2, [3, 5, 6], 7]\r\nlist_1    # output =&gt; [1, 2, [3, 5, 6], 4]\r\n## deep copy\r\nlist_3 = deepcopy(list_1)\r\nlist_3[3] = 8\r\nlist_3[2].append(7)\r\nlist_3    # output =&gt; [1, 2, [3, 5, 6, 7], 8]\r\nlist_1    # output =&gt; [1, 2, [3, 5, 6], 4]</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">46) What is the difference between xrange and range in Python?</span></h3>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">xrange()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">range()&nbsp;</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">are quite similar in terms of functionality. They both generate a sequence of inte.g.ers, with the only difference that&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">range()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;returns a&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python list</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, whereas,&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">xrange()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;returns an&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">xrange object</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">So how does that make a difference?</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;It sure does, because unlike range(), xrange() doesn't generate a static list, it creates the value on the go. This technique is commonly used with an object-type&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">generator</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;and has been termed as \"</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">yielding</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">\".</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Yielding</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is crucial in applications where memory is a constraint. Creating a static list as in range() can lead to a&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">Memory Error</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;in such conditions, while, xrange() can handle it optimally by using just enough memory for the generator (significantly less in comparison).</span></p>\r\n<pre class=\"language-python\"><code>for i in xrange(10):    # numbers from o to 9\r\n   print i       # output =&gt; 0 1 2 3 4 5 6 7 8 9\r\nfor i in xrange(1,10):    # numbers from 1 to 9\r\n   print i       # output =&gt; 1 2 3 4 5 6 7 8 9\r\nfor i in xrange(1, 10, 2):    # skip by two for next\r\n   print i       # output =&gt; 1 3 5 7 9</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">:&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">xrange</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;has been&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">deprecated</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;as of&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python 3.x</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">. Now&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">range</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;does exactly the same as what&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">xrange</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;used to do in&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python 2.x</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, since it was way better to use xrange() than the original range() function in Python 2.x.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">47) What is pickling and unpickling?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python library offers a feature -&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">serialization</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;out of the box. Serializing an object refers to transforming it into a format that can be stored, so as to be able to deserialize it, later on, to obtain the original object. Here, the&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">pickle</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;module comes into play.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pickling:</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pickling is the name of the serialization process in Python. Any object in Python can be serialized into a byte stream and dumped as a file in the memory. The process of pickling is compact but pickle objects can be compressed further. Moreover, pickle keeps track of the objects it has serialized and the serialization is portable across versions.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l111 level1 lfo126; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The function used for the above process is&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">pickle.dump()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Unpickling:</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l112 level1 lfo127; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Unpickling is the complete inverse of pickling. It deserializes the byte stream to recreate the objects stored in the file and loads the object to memory.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l112 level1 lfo127; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The function used for the above process is&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">pickle.load()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Note:</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;<em>Python has another, more primitive, serialization module called&nbsp;</em></span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">marshall</span></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">, which exists primarily to&nbsp;</span></em><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">support .pyc files</span></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;in Python and&nbsp;</span></em><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">differs significantly from the pickle</span></strong><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.</span></em></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">48) What are generators in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Generators are functions that return an iterable collection of items, one at a time, in a set manner. Generators, in general, are used to create iterators with a different approach. They employ the use of&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">yield</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;keyword rather than&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">return</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;to return a&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">generator</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;object.<br />Let's try and build a generator for fibonacci numbers -</span></p>\r\n<pre class=\"language-python\"><code>## generate fibonacci numbers upto n\r\ndef fib(n):\r\n   p, q = 0, 1\r\n   while(p &lt; n):\r\n       yield p\r\n       p, q = q, p + q\r\nx = fib(10)    # create generator object \r\n \r\n## iterating using __next__(), for Python2, use next()\r\nx.__next__()    # output =&gt; 0\r\nx.__next__()    # output =&gt; 1\r\nx.__next__()    # output =&gt; 1\r\nx.__next__()    # output =&gt; 2\r\nx.__next__()    # output =&gt; 3\r\nx.__next__()    # output =&gt; 5\r\nx.__next__()    # output =&gt; 8\r\nx.__next__()    # error\r\n \r\n## iterating using loop\r\nfor i in fib(10):\r\n   print(i)    # output =&gt; 0 1 1 2 3 5 8</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">49) What is PYTHONPATH in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">PYTHONPATH is an environment variable which you can set to add additional directories where Python will look for modules and packages. This is especially useful in maintaining Python libraries that you do not wish to install in the global default location.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">50) What is the use of help() and dir() functions?</span></h3>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">help()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;function in Python is used to display the documentation of modules, classes, functions, keywords, etc. If no parameter is passed to the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">help()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;function, then an interactive&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">help utility</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;is launched on the console.<br /></span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">dir()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;function tries to return a valid list of attributes and methods of the object it is called upon. It behaves differently with different objects, as it aims to produce the most relevant data, rather than the complete information.</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l43 level1 lfo128; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For Modules/Library objects, it returns a list of all attributes, contained in that module.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l43 level1 lfo128; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For Class Objects, it returns a list of all valid attributes and base attributes.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l43 level1 lfo128; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">With no arguments passed, it returns a list of attributes in the current scope.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">51) What is the difference between .py and .pyc files?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l41 level1 lfo129; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.py files contain the source code of a program. Whereas, .pyc file contains the bytecode of your program. We get bytecode after compilation of .py file (source code). .pyc files are not created for all the files that you run. It is only created for the files that you import.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l41 level1 lfo129; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Before executing a python program python interpreter checks for the compiled files. If the file is present, the virtual machine executes it. If not found, it checks for .py file. If found, compiles it to .pyc file and then python virtual machine executes it.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l41 level1 lfo129; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Having .pyc file saves you the compilation time.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">52) How Python is interpreted?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l18 level1 lfo130; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python as a language is not interpreted or compiled. Interpreted or compiled is the property of the implementation. Python is a bytecode(set of interpreter readable instructions) interpreted generally.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l18 level1 lfo130; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Source code is a file with .py extension.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l18 level1 lfo130; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python compiles the source code to a set of instructions for a virtual machine. The Python interpreter is an implementation of that virtual machine. This intermediate format is called &ldquo;bytecode&rdquo;.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l18 level1 lfo130; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.py source code is first compiled to give .pyc which is bytecode. This bytecode can be then interpreted by the official CPython or JIT(Just in Time compiler) compiled by PyPy.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">53) How are arguments passed by value or by reference in python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l26 level1 lfo131; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pass by value</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Copy of the actual object is passed. Changing the value of the copy of the object will not change the value of the original object.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l26 level1 lfo131; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pass by reference</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Reference to the actual object is passed. Changing the value of the new object will change the value of the original object.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">In Python, arguments are passed by reference, i.e., reference to the actual object is passed.</span></p>\r\n<pre class=\"language-python\"><code>def appendNumber(arr):\r\n   arr.append(4)\r\narr = [1, 2, 3]\r\nprint(arr)  #Output: =&gt; [1, 2, 3]\r\nappendNumber(arr)\r\nprint(arr)  #Output: =&gt; [1, 2, 3, 4]</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">54) What are iterators in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">An iterator is an object.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">It remembers its state i.e., where it is during iteration (see code below to see how)</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">__iter__() method initializes an iterator.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">It has a __next__() method which returns the next item in iteration and points to the next element. Upon reaching the end of iterable object __next__() must return StopIteration exception.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">It is also self-iterable.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l58 level1 lfo132; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Iterators are objects with which we can iterate over iterable objects like lists, strings, etc.</span></p>\r\n<pre class=\"language-python\"><code>class ArrayList:\r\n   def __init__(self, number_list):\r\n       self.numbers = number_list\r\n   def __iter__(self):\r\n       self.pos = 0\r\n       return self\r\n   def __next__(self):\r\n       if(self.pos &lt; len(self.numbers)):\r\n           self.pos += 1\r\n           return self.numbers[self.pos - 1]\r\n       else:\r\n           raise StopIteration\r\narray_obj = ArrayList([1, 2, 3])\r\nit = iter(array_obj)\r\nprint(next(it)) #output: 2\r\nprint(next(it)) #output: 3\r\nprint(next(it))\r\n#Throws Exception\r\n#Traceback (most recent call last):\r\n#...\r\n#StopIteration</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">55) Explain how to delete a file in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Use command&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">os.remove(file_name)</span></strong></p>\r\n<pre class=\"language-python\"><code>import os\r\nos.remove(\"ChangedFile.csv\")\r\nprint(\"File Removed!\")</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">56) Explain split() and join() functions in Python?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l149 level1 lfo133; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">You can use&nbsp;<strong>split()</strong>&nbsp;function to split a string based on a delimiter to a list of strings.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l149 level1 lfo133; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">You can use&nbsp;<strong>join()</strong>&nbsp;function to join a list of strings based on a delimiter to give a single string.</span></p>\r\n<pre class=\"language-python\"><code>string = \"This is a string.\"\r\nstring_list = string.split(' ') #delimiter is &lsquo;space&rsquo; character or &lsquo; &lsquo;\r\nprint(string_list) #output: ['This', 'is', 'a', 'string.']\r\nprint(' '.join(string_list)) #output: This is a string.</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">57) What does *args and **kwargs mean?</span></h3>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">*args</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l135 level1 lfo134; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">*args is a special syntax used in the function definition to pass variable-length arguments.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l135 level1 lfo134; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&ldquo;*&rdquo; means variable length and &ldquo;args&rdquo; is the name used by convention. You can use any other.</span></p>\r\n<pre class=\"language-python\"><code>def multiply(a, b, *argv):\r\n   mul = a * b\r\n   for num in argv:\r\n       mul *= num\r\n   return mul\r\nprint(multiply(1, 2, 3, 4, 5)) #output: 120</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">**kwargs</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l126 level1 lfo135; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">**kwargs is a special syntax used in the function definition to pass variable-length key worded arguments.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l126 level1 lfo135; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Here, also, &ldquo;kwargs&rdquo; is used just by convention. You can use any other name.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l126 level1 lfo135; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Keyworded argument means a variable that has a name when passed to a function.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l126 level1 lfo135; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">It is actually a dictionary of the variable names and its value.</span></p>\r\n<pre class=\"language-python\"><code>def tellArguments(**kwargs):\r\n   for key, value in kwargs.items():\r\n       print(key + \": \" + value)\r\ntellArguments(arg1 = \"argument 1\", arg2 = \"argument 2\", arg3 = \"argument 3\")\r\n#output:\r\n# arg1: argument 1\r\n# arg2: argument 2\r\n# arg3: argument 3</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">58) What are negative indexes and why are they used?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l122 level1 lfo136; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Negative indexes are the indexes from the end of the list or tuple or string.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l122 level1 lfo136; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Arr[-1]</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;means the last element of array&nbsp;<strong>Arr[]</strong></span></p>\r\n<pre class=\"language-python\"><code>arr = [1, 2, 3, 4, 5, 6]\r\n#get the last element\r\nprint(arr[-1]) #output 6\r\n#get the second last element\r\nprint(arr[-2]) #output 5</code></pre>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l122 level1 lfo136; background: white;\"><code></code></p>\r\n<h2 style=\"background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; color: windowtext; letter-spacing: .1pt;\">Python OOPS Interview Questions</span></h2>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">59) How do you create a class in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To create a class in python, we use the keyword &ldquo;class&rdquo; as shown in the example below:</span></p>\r\n<pre class=\"language-python\"><code>class W3codeEmployee:\r\n   def __init__(self, emp_name):\r\n       self.emp_name = emp_name</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To instantiate or create an object from the class created above, we do the following:</span></p>\r\n<pre class=\"language-python\"><code>emp_1=W3codeEmployee(\"Mr. Employee\")</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To access the name attribute, we just call the attribute using the dot operator as shown below:</span></p>\r\n<pre class=\"language-python\"><code>print(emp_1.emp_name)\r\n# Prints Mr. Employee</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To create methods inside the class, we include the methods under the scope of the class as shown below:</span></p>\r\n<pre class=\"language-python\"><code>class W3codeEmployee:\r\n   def __init__(self, emp_name):\r\n       self.emp_name = emp_name\r\n       \r\n   def introduce(self):\r\n       print(\"Hello I am \" + self.emp_name)</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The self parameter in the init and introduce functions represent the reference to the current class instance which is used for accessing attributes and methods of that class. The self parameter has to be the first parameter of any method defined inside the class. The method of the class W3codeEmployee can be accessed as shown below:</span></p>\r\n<pre class=\"language-python\"><code>emp_1.introduce()</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The overall program would look like this:</span></p>\r\n<pre class=\"language-python\"><code>class W3codeEmployee:\r\n   def __init__(self, emp_name):\r\n       self.emp_name = emp_name\r\n       \r\n   def introduce(self):\r\n       print(\"Hello I am \" + self.emp_name)\r\n       \r\n# create an object of W3codeEmployee class\r\nemp_1 = W3codeEmployee(\"Mr Employee\")\r\nprint(emp_1.emp_name)    #print employee name\r\nemp_1.introduce()        #introduce the employee</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">60) How does inheritance work in python? Explain it with an example.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Inheritance gives the power to a class to access all attributes and methods of another class. It aids in code reusability and helps the developer to maintain applications without redundant code. The class inheriting from another class is a child class or also called a derived class. The class from which a child class derives the members are called parent class or superclass.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python supports different kinds of inheritance, they are:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Single Inheritance</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: Child class derives members of one parent class.</span></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Multi-level Inheritance:&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The members of the parent class, A, are inherited by child class which is then inherited by another child class, B. The features of the base class and the derived class are further inherited into the new derived class, C. Here, A is the grandfather class of class C.</span></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<pre class=\"language-python\"><code># Parent class\r\nclass A:\r\n   def __init__(self, a_name):\r\n       self.a_name = a_name\r\n   \r\n# Intermediate class\r\nclass B(A):\r\n   def __init__(self, b_name, a_name):\r\n       self.b_name = b_name\r\n       # invoke constructor of class A\r\n       A.__init__(self, a_name)\r\n \r\n# Child class\r\nclass C(B):\r\n   def __init__(self,c_name, b_name, a_name):\r\n       self.c_name = c_name\r\n       # invoke constructor of class B\r\n       B.__init__(self, b_name, a_name)\r\n       \r\n   def display_names(self):\r\n       print(\"A name : \", self.a_name)\r\n       print(\"B name : \", self.b_name)\r\n       print(\"C name : \", self.c_name)\r\n \r\n#  Driver code\r\nobj1 = C('child', 'intermediate', 'parent')\r\nprint(obj1.a_name)\r\nobj1.display_names()</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Multiple Inheritance:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;This is achieved when one child class derives members from more than one parent class. All features of parent classes are inherited in the child class.</span></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<pre class=\"language-python\"><code># Parent class1\r\nclass Parent1:\r\n   def parent1_func(self):\r\n       print(\"Hi I am first Parent\")\r\n \r\n# Parent class2\r\nclass Parent2:\r\n   def parent2_func(self):\r\n       print(\"Hi I am second Parent\")\r\n \r\n# Child class\r\nclass Child(Parent1, Parent2):\r\n   def child_func(self):\r\n       self.parent1_func()\r\n       self.parent2_func()\r\n \r\n# Driver's code\r\nobj1 = Child()\r\nobj1.child_func()</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Hierarchical Inheritance:&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">When a parent class is derived by more than one child class, it is called hierarchical inheritance.</span></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<pre class=\"language-python\"><code># Base class\r\nclass A:\r\n     def a_func(self):\r\n         print(\"I am from the parent class.\")\r\n \r\n# 1st Derived class\r\nclass B(A):\r\n     def b_func(self):\r\n         print(\"I am from the first child.\")\r\n \r\n# 2nd Derived class\r\nclass C(A):\r\n     def c_func(self):\r\n         print(\"I am from the second child.\")\r\n \r\n# Driver's code\r\nobj1 = B()\r\nobj2 = C()\r\nobj1.a_func()\r\nobj1.b_func()    #child 1 method\r\nobj2.a_func()\r\nobj2.c_func()    #child 2 method</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">61) How do you access parent members in the child class?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Following are the ways using which you can access parent class members within a child class:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">By using Parent class name:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;You can use the name of the parent class to access the attributes as shown in the example below:</span></p>\r\n<pre class=\"language-python\"><code>class Parent(object):  \r\n   # Constructor\r\n   def __init__(self, name):\r\n       self.name = name    \r\n \r\nclass Child(Parent): \r\n   # Constructor\r\n   def __init__(self, name, age):\r\n       Parent.name = name\r\n       self.age = age\r\n \r\n   def display(self):\r\n       print(Parent.name, self.age)\r\n \r\n# Driver Code\r\nobj = Child(\"W3code\", 6)\r\nobj.display()</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">By using super():</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;The parent class members can be accessed in child class using the super keyword.</span></p>\r\n<pre class=\"language-python\"><code>class Parent(object):\r\n   # Constructor\r\n   def __init__(self, name):\r\n       self.name = name    \r\n \r\nclass Child(Parent):\r\n   # Constructor\r\n   def __init__(self, name, age):         \r\n       ''' \r\n       In Python 3.x, we can also use super().__init__(name)\r\n       ''' \r\n       super(Child, self).__init__(name)\r\n       self.age = age\r\n \r\n   def display(self):\r\n      # Note that Parent.name cant be used \r\n      # here since super() is used in the constructor\r\n      print(self.name, self.age)\r\n  \r\n# Driver Code\r\nobj = Child(\"W3code\", 6)\r\nobj.display()</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">62) Are access specifiers used in python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python does not make use of access specifiers specifically like private, public, protected, etc. However, it does not derive this from any variables. It has the concept of imitating the behaviour of variables by making use of a single (protected) or double underscore (private) as prefixed to the variable names. By default, the variables without prefixed underscores are public.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code># to demonstrate access specifiers\r\nclass W3codeEmployee:\r\n   \r\n    # protected members\r\n    _emp_name = None\r\n    _age = None\r\n    \r\n    # private members\r\n    __branch = None\r\n    \r\n    # constructor\r\n    def __init__(self, emp_name, age, branch): \r\n         self._emp_name = emp_name\r\n         self._age = age\r\n         self.__branch = branch\r\n    \r\n    #public member\r\n    def display():\r\n        print(self._emp_name +\" \"+self._age+\" \"+self.__branch)</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">63) Is it possible to call parent class without its instance creation?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Yes, it is possible if the base class is instantiated by other child classes or if the base class is a static method.</span></p>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; font-weight: normal;\">8) What is zip () function in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Python&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">zip()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;function returns a zip object, which maps a similar index of multiple containers. It takes an iterable, convert into iterator and aggregates the elements based on iterables passed. It returns an iterator of tuples.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Signature</span></strong></p>\r\n<pre class=\"language-python\"><code>zip(iterator1, iterator2, iterator3 ...)  </code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">64) How is an empty class created in python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">An empty class does not have any members defined in it. It is created by using the pass keyword (the pass command does nothing in python). We can create objects for this class outside the class.<br />For example-</span></p>\r\n<pre class=\"language-python\"><code>class EmptyClassDemo:\r\n   pass\r\nobj=EmptyClassDemo()\r\nobj.name=\"W3code\"\r\nprint(\"Name created= \",obj.name)\r\nOutput:\r\nName created = W3code</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">65) Differentiate between new and override modifiers.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The new modifier is used to instruct the compiler to use the new implementation and not the base class function. The Override modifier is useful for overriding a base class function inside the child class.</span></p>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">66) Explain Python Functions?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">A function is a section of the program or a block of code that is written once and can be executed whenever required in the program. A function is a block of self-contained statements which has a valid name, parameters list, and body. Functions make programming more functional and modular to perform modular tasks. Python provides several built-in functions to complete tasks and also allows a user to create new functions as well.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">There are three types of functions:</span></p>\r\n<ul style=\"margin-top: 0cm;\" type=\"circle\">\r\n<li class=\"MsoNormal\" style=\"margin-top: 3.0pt; mso-margin-bottom-alt: auto; line-height: 18.75pt; mso-list: l68 level1 lfo68; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Built-In Functions:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;copy(), len(), count() are the some built-in functions.</span></li>\r\n<li class=\"MsoNormal\" style=\"margin-top: 3.0pt; mso-margin-bottom-alt: auto; line-height: 18.75pt; mso-list: l68 level1 lfo68; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">User-defined Functions:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;Functions which are defined by a user known as user-defined functions.</span></li>\r\n<li class=\"MsoNormal\" style=\"margin-top: 3.0pt; mso-margin-bottom-alt: auto; line-height: 18.75pt; mso-list: l68 level1 lfo68; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Anonymous functions:</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;These functions are also known as lambda functions because they are not declared with the standard def keyword.</span></li>\r\n</ul>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; mso-fareast-language: EN-AU;\">Python's constructor: _init__ () is the first method of a class. Whenever we try to instantiate an object __init__() is automatically invoked by python to initialize members of an object. We can't overload constructors or methods in Python. It shows an error if we try to overload.</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; mso-fareast-language: EN-AU;\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code> class student:    \r\n\r\n        def __init__(self, name):    \r\n\r\n           self.name = name    \r\n\r\n          def __init__(self, name, email):    \r\n\r\n            self.name = name    \r\n\r\n               self.email = email    \r\n\r\n                \r\n\r\n       # This line will generate an error    \r\n\r\n     #st = student(\"rahul\")    \r\n\r\n      \r\n\r\n   # This line will call the second constructor    \r\n\r\n  st = student(\"rahul\", \"rahul@gmail.com\")    \r\n\r\n   print(\"Name: \", st.name)  \r\n\r\n   print(\"Email id: \", st.email)  \r\n\r\n</code></pre>\r\n<p class=\"MsoNormal\" style=\"margin: 0cm; margin-bottom: .0001pt; text-indent: -18.0pt; line-height: 18.75pt; mso-list: l78 level1 lfo69; tab-stops: list 36.0pt;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow'; mso-fareast-language: EN-AU;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp; &nbsp; &nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Segoe UI'; mso-fareast-language: EN-AU;\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>name:  rahul\r\n\r\nEmail id:  rahul@gmail.com</code></pre>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">67) What is swapcase() function in the Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">It is a string's function which converts all uppercase characters into lowercase and vice versa. It is used to alter the existing case of the string. This method creates a copy of the string which contains all the characters in the swap case. If the string is in lowercase, it generates a small case string and vice versa. It automatically ignores all the non-alphabetic characters. See an example below.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code>string = \"IT IS IN LOWERCASE.\"  \r\n\r\nprint(string.swapcase())  \r\n\r\n \r\n\r\nstring = \"it is in uppercase.\"  \r\n\r\nprint(string.swapcase())  </code></pre>\r\n<p style=\"margin-left: 36.0pt; text-indent: -18.0pt; mso-list: l8 level1 lfo70; tab-stops: list 36.0pt; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow';\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;</span></span><!--[endif]--><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code> it is in lowercase. \r\n IT IS IN UPPERCASE.</code></pre>\r\n<p style=\"margin-left: 36.0pt; text-indent: -18.0pt; mso-list: l8 level1 lfo70; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">68) How to remove whitespaces from a string in Python?</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">To remove the whitespaces and trailing spaces from the string, Python providies strip([str]) built-in function. This function returns a copy of the string after removing whitespaces if present. Otherwise returns original string.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code> string = \"  w3code \"  \r\n\r\nstring2 = \"    w3code        \"  \r\n\r\nstring3 = \"       w3code\"  \r\n\r\nprint(string)  \r\n\r\nprint(string2)  \r\n\r\nprint(string3)  \r\n\r\nprint(\"After stripping all have placed in a sequence:\")  \r\n\r\nprint(string.strip())  \r\n\r\nprint(string2.strip())  \r\n\r\nprint(string3.strip())  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>w3code \r\n    w3code        \r\n       w3code\r\nAfter stripping all have placed in a sequence:\r\nW3code\r\nw3code\r\nw3code</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">&nbsp;</span></p>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">69) Give an example of shuffle() method?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">This method shuffles the given string or an array. It randomizes the items in the array. This method is present in the random module. So, we need to import it and then we can call the function. It shuffles elements each time when the function calls and produces different output.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code>  # import the random module  \r\n\r\nimport random  \r\n\r\n# declare a list  \r\n\r\nsample_list1 = ['Z', 'Y', 'X', 'W', 'V', 'U']  \r\n\r\nprint(\"Original LIST1: \")  \r\n\r\nprint(sample_list1)  \r\n\r\n # first shuffle   \r\n\r\nrandom.shuffle(sample_list1)  \r\n\r\nprint(\"\\nAfter the first shuffle of LIST1: \")  \r\n\r\nprint(sample_list1)  \r\n\r\nsecond shuffle  \r\n\r\nrandom.shuffle(sample_list1)  \r\n\r\nprint(\"\\nAfter the second shuffle of LIST1: \")  \r\nprint(sample_list1)  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-cpp\"><code>Original LIST1: \r\n['Z', 'Y', 'X', 'W', 'V', 'U']\r\n \r\nAfter the first shuffle of LIST1: \r\n['V', 'U', 'W', 'X', 'Y', 'Z']\r\n \r\nAfter the second shuffle of LIST1: \r\n['Z', 'Y', 'X', 'U', 'V', 'W']</code></pre>\r\n<div class=\"MsoNormal\">&nbsp;</div>\r\n<div class=\"MsoNormal\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">70) What are the different types of operators in Python?</span></strong></div>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Python uses a rich set of operators to perform a variety of operations. Some individual operators like membership and identity operators are not so familiar but allow to perform operations.</span></p>\r\n<ul>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Arithmetic Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Relational Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Assignment Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Logical Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Membership Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Identity Operators</span></li>\r\n<li><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Bitwise Operators</span></li>\r\n</ul>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Arithmetic operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;perform basic arithmetic operations. For example \"+\" is used to add and \"?\" is used for subtraction.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code># Adding two values  \r\n\r\nprint(12+23)  \r\n\r\n# Subtracting two values  \r\n\r\nprint(12-23)  \r\n\r\n# Multiplying two values  \r\n\r\nprint(12*23)  \r\n\r\n# Dividing two values  \r\n\r\nprint(12/23)  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>35\r\n-11\r\n276\r\n0.5217391304347826</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Relational Operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;are used to comparing the values. These operators test the conditions and then returns a boolean value either True or False.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\"># Examples of Relational Operators</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code> a, b = 10, 12  \r\nprint(a==b) # False  \r\n\r\nprint(a&lt;b) # True  \r\n\r\nprint(a&lt;=b) # True  \r\n\r\nprint(a!=b) # True  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>False\r\nTrue\r\nTrue\r\nTrue</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Assignment operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;are used to assigning values to the variables. See the examples below.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-python\"><code>  # Examples of Assignment operators  \r\n\r\na=12  \r\n\r\nprint(a) # 12  \r\n\r\na += 2  \r\n\r\nprint(a) # 14  \r\n\r\na -= 2  \r\n\r\nprint(a) # 12  \r\n\r\na *=2  \r\n\r\nprint(a) # 24  \r\n\r\na **=2  \r\n\r\nprint(a) # 576  </code></pre>\r\n<p class=\"MsoNormal\" style=\"margin: 0cm; margin-bottom: .0001pt; text-indent: -18.0pt; line-height: 18.75pt; mso-list: l87 level1 lfo77; tab-stops: list 36.0pt;\"><!-- [if !supportLists]--><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow';\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp; &nbsp; &nbsp;</span></span><strong style=\"text-indent: -18pt;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>12\r\n14\r\n12\r\n24\r\n576</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Logical operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;are used to performing logical operations like And, Or, and Not. See the example below.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code># Logical operator examples  \r\n\r\na = True  \r\n\r\nb = False  \r\n\r\nprint(a and b) # False  \r\n\r\nprint(a or b) # True  \r\n\r\nprint(not b) # True  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-python\"><code>False\r\nTrue\r\nTrue</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Membership operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;are used to checking whether an element is a member of the sequence (list, dictionary, tuples) or not. Python uses two membership operators in and not in operators to check element presence. See an example.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code> # Membership operators examples  \r\n\r\nlist = [2,4,6,7,3,4]  \r\n\r\nprint(5 in list) # False  \r\n\r\ncities = (\"india\",\"delhi\")  \r\n\r\nprint(\"tokyo\" not in cities) #True  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-markup\"><code>False\r\nTrue</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Identity Operators (is and is not) both are used to check two values or variable which are located on the same part of the memory. Two variables that are equal does not imply that they are identical. See the following examples.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code>  # Identity operator example  \r\n\r\na = 10   \r\n\r\nb = 12  \r\n\r\nprint(a is b) # False  \r\n\r\nprint(a is not b) # True  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-markup\"><code>False\r\nTrue</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Bitwise Operators</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">&nbsp;are used to performing operations over the bits. The binary operators (&amp;, |, OR) work on bits. See the example below.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code> # Identity operator example  \r\n\r\na = 10   \r\n\r\nb = 12  \r\n\r\nprint(a &amp; b) # 8  \r\n\r\nprint(a | b) # 14  \r\n\r\nprint(a ^ b) # 6  \r\n\r\nprint(~a) # -11  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<div class=\"MsoNormal\">\r\n<pre class=\"language-markup\"><code>8\r\n14\r\n6\r\n-11</code></pre>\r\n</div>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif';\">69) How to create a Unicode string in Python?</span></strong></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">In Python 3, the old Unicode type has replaced by \"str\" type, and the string is treated as Unicode by default. We can make a string in Unicode by using art.title.encode(\"utf-8\") function.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code>  unicode_1 = (\"\\u0123\", \"\\u2665\", \"\\U0001f638\", \"\\u265E\", \"\\u265F\", \"\\u2168\")  \r\n\r\nprint (unicode_1)  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-markup\"><code>unicode_1: ('ģ', '&hearts;', '😸', '♞', '♟', 'Ⅸ')\r\n</code></pre>", "viewcounter": 51, "parent": 54}}, {"model": "PreparationApp.interviewquestion", "pk": 2, "fields": {"author": 1, "title": "Python Interview 71-160", "slug": "python-interview-71-160", "timestamp": "2022-08-26T19:09:45.816", "content": "<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">71) What are the differences between Python 2.x and Python 3.x?</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">Python 2.x is an older version of Python. Python 3.x is newer and latest version. Python 2.x is legacy now. Python 3.x is the present and future of this language.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The most visible difference between Python2 and Python3 is in print statement (function). In Python 2, it looks like print \"Hello\", and in Python 3, it is print (\"Hello\").</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">String in Python2 is ASCII implicitly, and in Python3 it is Unicode.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The xrange() method has removed from Python 3 version. A new keyword as is introduced in Error handling.</span></p>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">72) What is the shortest method to open a text file and display its content?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The shortest way to open a text file is by using \"with\" command in the following manner:</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code> with open(\"FILE NAME\", \"r\") as fp:  \r\n\r\n    fileData = fp.read()    \r\n\r\n    # To print the contents of the file     \r\n\r\n    print(fileData)  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-markup\"><code>\"The data of the file will be printed.\"</code></pre>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">73) What is the usage of enumerate () function in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">The enumerate() function is used to iterate through the sequence and retrieve the index position and its corresponding value at the same time.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code>  list_1 = [\"A\",\"B\",\"C\"]  \r\n\r\ns_1 = \"W3code\"   \r\n\r\n# creating enumerate objects  \r\n\r\nobject_1 = enumerate(list_1)  \r\n\r\nobject_2 = enumerate(s_1)  \r\n       \r\n\r\nprint (\"Return type:\",type(object_1))  \r\n\r\nprint (list(enumerate(list_1)))  \r\n\r\nprint (list(enumerate(s_1)))  </code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Output:</span></strong></p>\r\n<pre class=\"language-markup\"><code>Return type: \r\n[(0, 'A'), (1, 'B'), (2, 'C')]\r\n[(0, 'J'), (1, 'a'), (2, 'v'), (3, 'a'), (4, 't'), (5, 'p'), (6, 'o'), (7, 'i'), (8,&rsquo;n&rsquo;),(9,&rsquo;t&rsquo;)] </code></pre>\r\n<h3 style=\"line-height: 15.6pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">74) How to send an email in Python Language?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">To send an email, Python provides smtplib and email modules. Import these modules into the created mail script and send mail by authenticating a user.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">It has a method SMTP(smtp-server, port). It requires two parameters to establish SMTP connection.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI';\">A simple example to send an email is given below.</span></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI';\">Example:</span></strong></p>\r\n<pre class=\"language-markup\"><code>  import smtplib    \r\n\r\n# Calling SMTP    \r\n\r\ns = smtplib.SMTP('smtp.gmail.com', 587)    \r\n\r\n# TLS for network security    \r\n\r\ns.starttls()    \r\n\r\n# User email Authentication    \r\n\r\ns.login(\"sender@email_id\", \"sender_email_id_password\")    \r\n\r\n# Message to be sent    \r\n\r\nmessage = \"Message_sender_need_to_send\"    \r\n\r\n# Sending the mail    \r\n\r\n\r\n\r\ns.sendmail(\"sender@email_id \", \"receiver@email_id\", message)    \r\n\r\n</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">75) What Does the // Operator Do?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">In Python, the / operator performs division and returns the quotient in the float.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">For example: 5 / 2 returns 2.5</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The // operator, on the other hand, returns the quotient in inte.g.er.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">For example: 5 // 2 returns 2</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">76) What Does the &lsquo;is&rsquo; Operator Do?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The &lsquo;is&rsquo; operator compares the id of the two objects.&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>list1=[1,2,3]\r\n\r\nlist2=[1,2,3]\r\n\r\nlist3=list1\r\n\r\nlist1 == list2 🡪 True\r\n\r\nlist1 is list2 🡪 False\r\n\r\nlist1 is list3 🡪 True</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">77) What are the Difference between a Shallow Copy and Deep Copy?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Deepcopy creates a different object and populates it with the child objects of the original object. Therefore, changes in the original object are not reflected in the copy.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">copy.deepcopy() creates a Deep Copy.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Shallow copy creates a different object and populates it with the references of the child objects within the original object. Therefore, changes in the original object are reflected in the copy.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">copy.copy creates a Shallow Copy.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">78). How Is Multithreading Achieved in Python?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Multithreading usually implies that multiple threads are executed concurrently. The Python Global Interpreter Lock doesn't allow more than one thread to hold the Python interpreter at that particular point of time. So multithreading in python is achieved through context switching. It is quite different from multiprocessing which actually opens up multiple processes across multiple threads.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">79) Discuss Django Architecture.</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Here you can also find a&nbsp;</span><span style=\"font-family: 'Arial Narrow','sans-serif';\"><span style=\"color: windowtext; text-decoration-line: none;\">comprehensive guide on Python Django Tutorial</span></span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;that is very easy to understand.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django is a web service used to build your web pages. Its architecture is as shown:</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Template: the front end of the web page&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Model: the back end where the data is stored&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">View: It interacts with the model and template and maps it to the URL</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django: serves the page to the user&nbsp;</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">80). What Advantage Does the Numpy Array Have over a Nested List?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Numpy is written in C so that all its complexities are backed into a simple to use a module. Lists, on the other hand, are dynamically typed. Therefore, Python must check the data type of each element every time it uses it. This makes Numpy arrays much faster than lists.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Numpy has a lot of additional functionality that list doesn&rsquo;t offer; for instance, a lot of things can be automated in Numpy.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">81) What are Pickling and Unpickling?</span></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%; border-color: initial; border-style: none;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td style=\"border-width: 1pt; border-color: #e6ecef; border-image: initial; padding: 12pt 9pt;\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Pickling&nbsp;</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-top-color: #e6ecef; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-image: initial; border-left: none; padding: 12pt 9pt;\" width=\"258\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Unpickling&nbsp;</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-left-color: #e6ecef; border-image: initial; border-top: none; padding: 12pt 9pt;\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l1 level1 lfo2; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Converting a Python object hierarchy to a byte stream is called pickling</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l1 level1 lfo2; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Pickling is also referred to as serialization</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top: none; border-left: none; border-bottom-width: 1pt; border-bottom-color: #e6ecef; border-right-width: 1pt; border-right-color: #e6ecef; padding: 12pt 9pt;\" width=\"258\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Converting a byte stream to a Python object hierarchy is called unpickling</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l2 level1 lfo3; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Unpickling is also referred to as deserialization&nbsp;</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">If you just created a neural network model, you can save that model to your hard drive, pickle it, and then unpickle to bring it back into another software program or to use it at a later time.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">82) How is Memory managed in Python?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python has a private heap space that stores all the objects. The Python memory manager regulates various aspects of this heap, such as sharing, caching, segmentation, and allocation. The user has no control over the heap; only the Python interpreter has access.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">83) Are Arguments in Python Passed by Value or by Reference?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Arguments are passed in python by a reference. This means that any changes made within a function are reflected in the original object.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Consider two sets of code shown below:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">In the first example, we only assigned a value to one element of &lsquo;l&rsquo;, so the output is [3, 2, 3, 4].</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">In the second example, we have created a whole new object for &lsquo;l&rsquo;. But, the values [3, 2, 3, 4] doesn&rsquo;t show up in the output as it is outside the definition of the function.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">84) How Would You Generate Random Numbers in Python?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">To generate random numbers in Python, you must first import the random module.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The random() function generates a random float value between 0 &amp; 1.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&gt; random.random()</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The randrange() function generates a random number within a given range.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Syntax: randrange(be.g.inning, end, step)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;&gt; random.randrange(1,10,2)</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">85) What Does the &lsquo;is&rsquo; Operator Do?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The &lsquo;is&rsquo; operator compares the id of the two objects.&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>list1=[1,2,3]\r\n\r\nlist2=[1,2,3]\r\n\r\nlist3=list1\r\n\r\nlist1 == list2 🡪 True\r\n\r\nlist1 is list2 🡪 False\r\n\r\nlist1 is list3 🡪 True</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">86) What Is the Purpose of the Pass Statement?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The pass statement is used when there's a syntactic but not an operational requirement. For example - The program below prints a string ignoring the spaces.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\">&nbsp;</p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Here, the pass statement refers to &lsquo;no action required.&rsquo;</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">87) How Will You Check If All the Characters in a String Are Alphanumeric?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python has an inbuilt method isalnum() which returns true if all characters in the string are alphanumeric.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt; \"abcd123\".isalnum()\r\n\r\nOutput: True\r\n\r\n&gt;&gt;&rdquo;abcd@123#&rdquo;.isalnum()\r\n\r\nOutput: False\r\n\r\nAnother way is to use re.g.ex as shown.\r\n\r\n&gt;&gt;import re\r\n\r\n&gt;&gt;bool(re.match(&lsquo;[A-Za-z0-9]+$','abcd123&rsquo;))\r\n\r\nOutput: True\r\n\r\n&gt;&gt; bool(re.match(&lsquo;[A-Za-z0-9]+$','abcd@123&rsquo;))\r\n\r\nOutput: False</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">88). How Will You Merge Elements in a Sequence?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">There are three types of sequences in Python:</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l20 level1 lfo89; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l20 level1 lfo89; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Tuples&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l20 level1 lfo89; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Strings</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example of Lists -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;l1=[1,2,3]\r\n\r\n&gt;&gt;l2=[4,5,6]\r\n\r\n&gt;&gt;l1+l2\r\n\r\nOutput: [1,2,3,4,5,6]\r\n\r\nExample of Tuples - \r\n\r\n&gt;&gt;t1=(1,2,3)\r\n\r\n&gt;&gt;t2=(4,5,6)\r\n\r\n&gt;&gt;t1+t2\r\n\r\nOutput: (1,2,3,4,5,6)\r\n\r\nExample of String - \r\n\r\n&gt;&gt;s1=&ldquo;Simpli&rdquo;\r\n\r\n&gt;&gt;s2=&ldquo;learn&rdquo;\r\n\r\n&gt;&gt;s1+s2\r\n\r\nOutput: &lsquo;W3code&rsquo;\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">89). How Would You Remove All Leading Whitespace in a String?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python provides the inbuilt function lstrip() to remove all leading spaces from a string.</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;&ldquo;      Python&rdquo;.lstrip\r\n\r\nOutput: Python</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">90) How Would You Replace All Occurrences of a Substring with a New String?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The replace() function can be used with strings for replacing a substring with a given string. Syntax:&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">str.replace(old, new, count)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">replace() returns a new string without modifying the original string.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;\"Hey John. How are you, John?\".replace(&ldquo;john\",&ldquo;John\",1)\r\n\r\nOutput: &ldquo;Hey John. How are you, John?</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">91) What Is the Difference Between Del and Remove() on Lists?</span></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%; border-color: initial; border-style: none;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td style=\"border-width: 1pt; border-color: #e6ecef; border-image: initial; padding: 12pt 9pt;\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">del</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-top-color: #e6ecef; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-image: initial; border-left: none; padding: 12pt 9pt;\" width=\"258\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">remove()</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-left-color: #e6ecef; border-image: initial; border-top: none; padding: 12pt 9pt;\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l53 level1 lfo90; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">del removes all elements of a list within a given range&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l53 level1 lfo90; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Syntax: del list[start:end]</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top: none; border-left: none; border-bottom-width: 1pt; border-bottom-color: #e6ecef; border-right-width: 1pt; border-right-color: #e6ecef; padding: 12pt 9pt;\" width=\"258\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l50 level1 lfo91; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">remove() removes the first occurrence of a particular character&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l50 level1 lfo91; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Syntax: list.remove(element)</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Here is an example to understand the two statements -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;lis=[&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;c&rsquo;, &lsquo;d&rsquo;]\r\n\r\n&gt;&gt;del lis[1:3]\r\n\r\n&gt;&gt;lis\r\n\r\nOutput: [&ldquo;a&rdquo;,&rdquo;d&rdquo;]\r\n\r\n&gt;&gt;lis=[&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;b&rsquo;, &lsquo;d&rsquo;]\r\n\r\n&gt;&gt;lis.remove(&lsquo;b&rsquo;)\r\n\r\n&gt;&gt;lis\r\n\r\nOutput: [&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;d&rsquo;]\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">92) How Do You Display the Contents of a Text File in Reverse Order?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">You can display the contents of a text file in reverse order using the following steps:</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l143 level1 lfo92; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Open the file using the open() function&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l143 level1 lfo92; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Store the contents of the file into a list&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l143 level1 lfo92; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Reverse the contents of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l143 level1 lfo92; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Run a for loop to iterate through the list</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">93) Differentiate Between append() and extend().</span></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%; border-color: initial; border-style: none;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td style=\"border-width: 1pt; border-color: #e6ecef; border-image: initial; padding: 12pt 9pt;\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">append()</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-top-color: #e6ecef; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-image: initial; border-left: none; padding: 12pt 9pt;\" width=\"258\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">extend()</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-left-color: #e6ecef; border-image: initial; border-top: none; padding: 12pt 9pt;\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l28 level1 lfo93; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">append() adds an element to the end of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l28 level1 lfo93; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Example -&nbsp;</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst=[1,2,3]</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst.append(4)</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Output:[1,2,3,4]</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top: none; border-left: none; border-bottom-width: 1pt; border-bottom-color: #e6ecef; border-right-width: 1pt; border-right-color: #e6ecef; padding: 12pt 9pt;\" width=\"258\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l5 level1 lfo94; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">extend() adds elements from an iterable to the end of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l5 level1 lfo94; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Example -&nbsp;</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst=[1,2,3]</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst.extend([4,5,6])</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Output:[1,2,3,4,5,6]</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">94) What Is the Output of the below Code? Justify Your Answer.</span></h3>\r\n<pre class=\"language-markup\"><code>&gt;&gt;def addToList(val, list=[]):\r\n\r\n&gt;&gt; list.append(val)\r\n\r\n&gt;&gt; return list\r\n\r\n&gt;&gt;list1 = addToList(1)\r\n\r\n&gt;&gt;list2 = addToList(123,[])\r\n\r\n&gt;&gt;list3 = addToList('a&rsquo;)\r\n\r\n&gt;&gt;print (\"list1 = %s\" % list1)\r\n\r\n&gt;&gt;print (\"list2 = %s\" % list2)\r\n\r\n&gt;&gt;print (\"list3 = %s\" % list3)\r\n\r\nOutput: \r\n\r\nlist1 = [1,&rsquo;a&rsquo;]\r\n\r\nlist2 = [123]\r\n\r\nlilst3 = [1,&rsquo;a&rsquo;]\r\n\r\n</code></pre>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">Note that list1 and list3 are equal. When we passed the information to the addToList, we did it without a second value. If we don't have an empty list as the second value, it will start off with an empty list, which we then append. For list2, we appended the value to an empty list, so its value becomes [123].</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">For list3, we're adding &lsquo;a&rsquo; to the list. Because we didn't designate the list, it is a shared value. It means the list doesn&rsquo;t reset and we get its value as [1, &lsquo;a&rsquo;].</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Remember that a default list is created only once during the function and not during its call number.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">95). What Is the Difference between a List and a Tuple?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists are mutable while tuples are immutable.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">List&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;lst = [1,2,3]\r\n\r\n&gt;&gt;lst[2] = 4\r\n\r\n&gt;&gt;lst\r\n\r\nOutput:[1,2,4]\r\n\r\nTuple \r\n\r\n&gt;&gt;tpl = (1,2,3)\r\n\r\n&gt;&gt;tpl[2] = 4\r\n\r\n&gt;&gt;tpl\r\n\r\nOutput:TypeError: 'tuple'\r\n\r\nthe object does not support item\r\n\r\nassignment\r\n\r\nThere is an error because you can't change the tuple 1 2 3 into 1 2 4. You have to completely reassign tuple to a new value.\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">96) What Is Docstring in Python?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Docstrings are used in providing documentation to various Python modules, classes, functions, and methods.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>def add(a,b):\r\n\r\n\" \" \"This function adds two numbers.\" \" \"\r\n\r\nsum=a+b\r\n\r\nreturn sum\r\n\r\nsum=add(10,20)\r\n\r\nprint(\"Accessing doctstring method 1:\",add.__doc__)\r\n\r\nprint(\"Accessing doctstring method 2:\",end=\"\")\r\n\r\nhelp(add)\r\n\r\nOutput - \r\n\r\nAccessing docstring method 1: This function adds two numbers.\r\n\r\nAccessing docstring method 2: Help on function add-in module __main__:\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">add(a, b)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function adds two numbers.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">97) How Do You Use print() Without the Newline?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The solution to this depends on the Python version you are using.&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>Python v2\r\n\r\n&gt;&gt;print(&ldquo;Hi. &rdquo;),\r\n\r\n&gt;&gt;print(&ldquo;How are you?&rdquo;)\r\n\r\nOutput: Hi. How are you?\r\n\r\nPython v3\r\n\r\n&gt;&gt;print(&ldquo;Hi&rdquo;,end=&ldquo; &rdquo;)\r\n\r\n&gt;&gt;print(&ldquo;How are you?&rdquo;)\r\n\r\nOutput: Hi. How are you?\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">98) How Will You Merge Elements in a Sequence?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">There are three types of sequences in Python:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Tuples&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Strings</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example of Lists -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;l1=[1,2,3]\r\n\r\n&gt;&gt;l2=[4,5,6]\r\n\r\n&gt;&gt;l1+l2\r\n\r\nOutput: [1,2,3,4,5,6]\r\n\r\nExample of Tuples - \r\n\r\n&gt;&gt;t1=(1,2,3)\r\n\r\n&gt;&gt;t2=(4,5,6)\r\n\r\n&gt;&gt;t1+t2\r\n\r\nOutput: (1,2,3,4,5,6)\r\n\r\nExample of String - \r\n\r\n&gt;&gt;s1=&ldquo;Simpli&rdquo;\r\n\r\n&gt;&gt;s2=&ldquo;learn&rdquo;\r\n\r\n&gt;&gt;s1+s2\r\n\r\nOutput: &lsquo;W3code&rsquo;\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">99) How Would You Remove All Leading Whitespace in a String?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python provides the inbuilt function lstrip() to remove all leading spaces from a string.</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;&ldquo;      Python&rdquo;.lstrip\r\n\r\nOutput: Python\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">100) How Would You Replace All Occurrences of a Substring with a New String?</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The replace() function can be used with strings for replacing a substring with a given string. Syntax:&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">str.replace(old, new, count)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">replace() returns a new string without modifying the original string.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&gt;&gt;\"Hey John. How are you, John?\".replace(&ldquo;john\",&ldquo;John\",1)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Output: &ldquo;Hey John. How are you, John?</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">101) What Is the Difference Between Del and Remove() on Lists?</span></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%; border-color: initial; border-style: none;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr style=\"height: 74px;\">\r\n<td style=\"border-width: 1pt; border-color: #e6ecef; border-image: initial; padding: 12pt 9pt; height: 74px;\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">del</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-top-color: #e6ecef; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-image: initial; border-left: none; padding: 12pt 9pt; height: 74px;\" width=\"258\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">remove()</span></p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 120px;\">\r\n<td style=\"border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-left-color: #e6ecef; border-image: initial; border-top: none; padding: 12pt 9pt; height: 120px;\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l91 level1 lfo96; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">del removes all elements of a list within a given range&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l91 level1 lfo96; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Syntax: del list[start:end]</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top: none; border-left: none; border-bottom-width: 1pt; border-bottom-color: #e6ecef; border-right-width: 1pt; border-right-color: #e6ecef; padding: 12pt 9pt; height: 120px;\" width=\"258\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l47 level1 lfo97; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">remove() removes the first occurrence of a particular character&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l47 level1 lfo97; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Syntax: list.remove(element)</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Here is an example to understand the two statements -&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;lis=[&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;c&rsquo;, &lsquo;d&rsquo;]\r\n\r\n&gt;&gt;del lis[1:3]\r\n\r\n&gt;&gt;lis\r\n\r\nOutput: [&ldquo;a&rdquo;,&rdquo;d&rdquo;]\r\n\r\n&gt;&gt;lis=[&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;b&rsquo;, &lsquo;d&rsquo;]\r\n\r\n&gt;&gt;lis.remove(&lsquo;b&rsquo;)\r\n\r\n&gt;&gt;lis\r\n\r\nOutput: [&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;d&rsquo;]\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">Note that in the range 1:3, the elements are counted up to 2 and not 3.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">102). How Do You Display the Contents of a Text File in Reverse Order?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">You can display the contents of a text file in reverse order using the following steps:</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l142 level1 lfo98; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Open the file using the open() function&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l142 level1 lfo98; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Store the contents of the file into a list&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l142 level1 lfo98; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Reverse the contents of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: normal; mso-list: l142 level1 lfo98; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Run a for loop to iterate through the list</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">103) Differentiate Between append() and extend().</span></h3>\r\n<table class=\"MsoNormalTable\" style=\"border-collapse: collapse; width: 100%; height: 100%; border-color: initial; border-style: none;\" border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td style=\"border-width: 1pt; border-color: #e6ecef; border-image: initial; padding: 12pt 9pt;\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">append()</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-top-color: #e6ecef; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-image: initial; border-left: none; padding: 12pt 9pt;\" width=\"258\">\r\n<p style=\"line-height: 18.0pt; margin: 18.0pt 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">extend()</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-right-color: #e6ecef; border-bottom-color: #e6ecef; border-left-color: #e6ecef; border-image: initial; border-top: none; padding: 12pt 9pt;\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l140 level1 lfo99; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">append() adds an element to the end of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l140 level1 lfo99; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Example -&nbsp;</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst=[1,2,3]</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst.append(4)</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Output:[1,2,3,4]</span></p>\r\n</td>\r\n<td style=\"width: 193.5pt; border-top: none; border-left: none; border-bottom-width: 1pt; border-bottom-color: #e6ecef; border-right-width: 1pt; border-right-color: #e6ecef; padding: 12pt 9pt;\" width=\"258\">\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l139 level1 lfo100; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">extend() adds elements from an iterable to the end of the list</span></p>\r\n<p class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 15.0pt; text-indent: -18.0pt; line-height: 18.0pt; mso-list: l139 level1 lfo100; tab-stops: list 36.0pt;\"><span style=\"font-size: 10.0pt; mso-bidi-font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\">Example -&nbsp;</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst=[1,2,3]</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst.extend([4,5,6])</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">&gt;&gt;lst</span></p>\r\n<p style=\"line-height: 18.0pt; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif';\">Output:[1,2,3,4,5,6]</span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">104). What Is the Output of the below Code? Justify Your Answer.</span></h3>\r\n<pre class=\"language-markup\"><code>&gt;&gt;def addToList(val, list=[]):\r\n\r\n&gt;&gt; list.append(val)\r\n\r\n&gt;&gt; return list\r\n\r\n&gt;&gt;list1 = addToList(1)\r\n\r\n&gt;&gt;list2 = addToList(123,[])\r\n\r\n&gt;&gt;list3 = addToList('a&rsquo;)\r\n\r\n&gt;&gt;print (\"list1 = %s\" % list1)\r\n\r\n&gt;&gt;print (\"list2 = %s\" % list2)\r\n\r\n&gt;&gt;print (\"list3 = %s\" % list3)\r\n\r\nOutput: \r\n\r\nlist1 = [1,&rsquo;a&rsquo;]\r\n\r\nlist2 = [123]\r\n\r\nlilst3 = [1,&rsquo;a&rsquo;]\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">Note that list1 and list3 are equal. When we passed the information to the addToList, we did it without a second value. If we don't have an empty list as the second value, it will start off with an empty list, which we then append. For list2, we appended the value to an empty list, so its value becomes [123].</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">For list3, we're adding &lsquo;a&rsquo; to the list. Because we didn't designate the list, it is a shared value. It means the list doesn&rsquo;t reset and we get its value as [1, &lsquo;a&rsquo;].</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Remember that a default list is created only once during the function and not during its call number.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">105) What Is the Difference between a List and a Tuple?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Lists are mutable while tuples are immutable.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">List&nbsp;</span></p>\r\n<pre class=\"language-markup\"><code>&gt;&gt;lst = [1,2,3]\r\n\r\n&gt;&gt;lst[2] = 4\r\n\r\n&gt;&gt;lst\r\n\r\nOutput:[1,2,4]\r\n\r\nTuple \r\n\r\n&gt;&gt;tpl = (1,2,3)\r\n\r\n&gt;&gt;tpl[2] = 4\r\n\r\n&gt;&gt;tpl\r\n\r\nOutput:TypeError: 'tuple'\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">the object does not support item</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">assignment</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">There is an error because you can't change the tuple 1 2 3 into 1 2 4. You have to completely reassign tuple to a new value.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">106) What Is Docstring in Python?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Docstrings are used in providing documentation to various Python modules, classes, functions, and methods.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<pre class=\"language-python\"><code>def add(a,b):\r\n\r\n\" \" \"This function adds two numbers.\" \" \"\r\n\r\nsum=a+b\r\n\r\nreturn sum\r\n\r\nsum=add(10,20)\r\n\r\nprint(\"Accessing doctstring method 1:\",add.__doc__)\r\n\r\nprint(\"Accessing doctstring method 2:\",end=\"\")\r\n\r\nhelp(add)\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif';\">Output -&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Accessing docstring method 1: This function adds two numbers.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Accessing docstring method 2: Help on function add-in module __main__:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">add(a, b)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This function adds two numbers.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">107) How Do You Use Print() Without the Newline?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The solution to this depends on the Python version you are using.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python v2</span></p>\r\n<pre class=\"language-python\"><code>&gt;&gt;print(&ldquo;Hi. &rdquo;),\r\n\r\n&gt;&gt;print(&ldquo;How are you?&rdquo;)\r\n\r\nOutput: Hi. How are you?\r\n\r\nPython v3\r\n\r\n&gt;&gt;print(&ldquo;Hi&rdquo;,end=&ldquo; &rdquo;)\r\n\r\n&gt;&gt;print(&ldquo;How are you?&rdquo;)\r\n\r\nOutput: Hi. How are you?\r\n\r\n</code></pre>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><strong><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt;\">108) How Do You Use the split() Function in Python?</span></strong></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The split() function splits a string into a number of strings based on a specific delimiter.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Syntax -&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">string.split(delimiter, max)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Where:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The delimiter is the character based on which the string is split. By default it is space.&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">max is the maximum number of splits&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Example -&nbsp;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&gt;&gt;var=&ldquo;Red,Blue,Green,Orange&rdquo;</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&gt;&gt;lst=var.split(&ldquo;,&rdquo;,2)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&gt;&gt;print(lst)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Output:</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">[&lsquo;Red&rsquo;,&rsquo;Blue&rsquo;,&rsquo;Green, Orange&rsquo;]</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Here, we have a variable var whose values are to be split with commas. Note that &lsquo;2&rsquo; indicates that only the first two values will be split.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">109) Is Python Object-oriented or Functional Programming?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python is considered a multi-paradigm language.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python follows the object-oriented paradigm&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python allows the creation of objects and their manipulation through specific methods&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">It supports most of the features of OOPS such as inheritance and polymorphism</span></p>\r\n<p style=\"text-indent: -18.0pt; mso-list: l92 level1 lfo137; background: white; margin: 0cm 0cm 19.5pt 18.0pt;\"><span style=\"font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python follows the functional programming paradigm</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Functions may be used as the first-class object&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l92 level1 lfo137; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python supports Lambda functions which are characteristic of the functional paradigm&nbsp;</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">110) what Are *args and *kwargs?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">*args&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l90 level1 lfo150; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">It is used in a function prototype to accept a varying number of arguments.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l90 level1 lfo150; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">It's an iterable object.&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l90 level1 lfo150; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Usage - def fun(*args)</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">*kwargs&nbsp;</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo149; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">It is used in a function prototype to accept the varying number of keyworded arguments.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo149; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">It's an iterable object</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 33.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l0 level1 lfo149; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Usage - def fun(**kwargs):</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">fun(colour=&rdquo;red&rdquo;.units=2)</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">111). In Python, how do you utilize ternary operators?</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The Ternary operator is the operator for displaying conditional statements. This is made of true or false values and a statement that must be evaluated.</span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">112) Why is finalize used?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Finalize method is used for freeing up the unmanaged resources and clean up before the garbage collection method is invoked. This helps in performing memory management tasks.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">113). What is init method in python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">init</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method works similarly to the constructors in Java. The method is run as soon as an object is instantiated. It is useful for initializing any attributes or default behaviour of the object at the time of instantiation.<br />For example:</span></p>\r\n<pre class=\"language-python\"><code>class W3codeEmployee:\r\n \r\n   # init method / constructor\r\n   def __init__(self, emp_name):\r\n       self.emp_name = emp_name\r\n \r\n   # introduce method\r\n   def introduce(self):\r\n       print('Hello, I am ', self.emp_name)\r\n \r\nemp = W3codeEmployee('Mr Employee')    # __init__ method is called here and initializes the object name with \"Mr Employee\"\r\nemp.introduce()</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">114). How will you check if a class is a child of another class?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This is done by using a method called&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">issubclass()</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;provided by python. The method tells us if any class is a child of another class by returning true or false accordingly.<br /></span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For example:</span></strong></p>\r\n<pre class=\"language-python\"><code>class Parent(object):\r\n   pass   \r\n \r\nclass Child(Parent):\r\n   pass   \r\n \r\n# Driver Code\r\nprint(issubclass(Child, Parent))    #True\r\nprint(issubclass(Parent, Child))    #False\r\n&middot;         We can check if an object is an instance of a class by making use of isinstance() method:\r\n\r\nobj1 = Child()\r\nobj2 = Parent()\r\nprint(isinstance(obj2, Child))    #False \r\nprint(isinstance(obj2, Parent))   #True \r\n</code></pre>\r\n<p style=\"background: white;\"><span style=\"color: windowtext; font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\">Python Pandas Interview Questions</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">115) what do you know about pandas?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l55 level1 lfo147; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pandas is an open-source, python-based library used in data manipulation applications requiring high performance. The name is derived from &ldquo;Panel Data&rdquo; having multidimensional data. This was developed in 2008 by Wes McKinney and was developed for data analysis.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l55 level1 lfo147; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pandas are useful in performing 5 major steps of data analysis - Load the data, clean/manipulate it, prepare it, model it, and analyze the data.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">116) define pandas dataframe.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A dataframe is a 2D mutable and tabular structure for representing data labelled with axes - rows and columns.<br /></span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The syntax for creating dataframe:</span></strong></p>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-keyword\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">import</span></strong></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> pandas </span></code><span class=\"hljs-keyword\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">as</span></strong></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> pd</span></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">dataframe = pd.DataFrame( data, index, columns, dtype)</span></code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">where:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l146 level1 lfo146; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">data - Represents various forms like series, map, ndarray, lists, dict etc.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l146 level1 lfo146; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">index - Optional argument that represents an index to row labels.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l146 level1 lfo146; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">columns - Optional argument for column labels.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l146 level1 lfo146; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Dtype - the data type of each column. Again optional.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">117) how will you combine different pandas dataframes?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The dataframes can be combines using the below approaches:</span></p>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l19 level1 lfo151; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">append() method</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">: This is used to stack the dataframes horizontally. Syntax:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">df1.append(df2)</span></code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l19 level1 lfo151; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">concat() method:&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This is used to stack dataframes vertically. This is best used when the dataframes have the same columns and similar fields. Syntax:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">pd.concat([df1, df2]) </span></code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l19 level1 lfo151; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">join() method:&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This is used for extracting data from various dataframes having one or more common columns.</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">df1.join(df2)</span></code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">118). Can you create a series from the dictionary object in pandas?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">One dimensional array capable of storing different data types is called a series. We can create pandas series from a dictionary object as shown below:</span></p>\r\n<pre class=\"language-python\"><code>import pandas as pd    \r\ndict_info = {'key1' : 2.0, 'key2' : 3.1, 'key3' : 2.2}  \r\nseries_obj = pd.Series(dict_info)    \r\nprint (series_obj)    \r\nOutput:\r\nx     2.0\r\ny     3.1\r\nz     2.2\r\ndtype: float64\r\n</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-color: white;\">If an index is not specified in the input method, then the keys of the dictionaries are sorted in ascending order for constructing the index. In case the index is passed, then values of the index label will be extracted from the dictionary.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">119) how will you identify and deal with missing values in a dataframe?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can identify if a dataframe has missing values by using the isnull() and isna() methods.</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">missing_data_count=df.isnull().</span></code><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">sum</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">()</span></code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can handle missing values by either replacing the values in the column with 0 as follows:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">df[&lsquo;column_name&rsquo;].fillna(</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">0</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">)</span></code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Or by replacing it with the mean value of the column</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">df[&lsquo;column_name&rsquo;] = df[&lsquo;column_name&rsquo;].fillna((df[&lsquo;column_name&rsquo;].mean()))</span></code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">120) What do you understand by reindexing in pandas?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Reindexing is the process of conforming a dataframe to a new index with optional filling logic. If the values are missing in the previous index, then NaN/NA is placed in the location. A new object is returned unless a new index is produced that is equivalent to the current one. The copy value is set to False. This is also used for changing the index of rows and columns in the dataframe.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">121) How to add new column to pandas dataframe?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A new column can be added to a pandas dataframe as follows:</span></p>\r\n<pre class=\"language-python\"><code>import pandas as pd      \r\ndata_info = {'first' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),    \r\n       'second' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}    \r\n  \r\ndf = pd.DataFrame(data_info)    \r\n#To add new column third\r\ndf['third']=pd.Series([10,20,30],index=['a','b','c'])    \r\nprint (df)    \r\n#To add new column fourth\r\ndf['fourth']=df['first']+info['third']    \r\nprint (df)    \r\n</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\">122) how will you delete indices, rows and columns from a dataframe?</span></strong></p>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To delete an Index:</span></strong></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l7 level1 lfo138; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Execute&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">del df.index.name</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;for removing the index by name.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l7 level1 lfo138; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Alternatively, the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">df.index.name</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;can be assigned to None.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l7 level1 lfo138; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For example, if you have the below dataframe:</span></p>\r\n<pre class=\"language-python\"><code>            Column 1\r\n   Names             \r\n   John               1\r\n   Jack               2\r\n   Judy               3\r\n   Jim                4</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l36 level1 lfo139; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To drop the index name &ldquo;Names&rdquo;:</span></p>\r\n<pre class=\"language-python\"><code>df.index.name = None\r\n# Or run the below:\r\n# del df.index.name\r\nprint(df)\r\n        Column 1\r\nJohn          1\r\nJack          2\r\nJudy          3\r\nJim           4\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><br /><code></code><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To delete row/column from dataframe:</span></strong></pre>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l36 level1 lfo139; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">drop()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method is used to delete row/column from dataframe.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l36 level1 lfo139; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The axis argument is passed to the drop method where if the value is 0, it indicates to drop/delete a row and if 1 it has to drop the column.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l36 level1 lfo139; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Additionally, we can try to delete the rows/columns in place by setting the value of inplace to True. This makes sure that the job is done without the need for reassignment.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l36 level1 lfo139; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The duplicate values from the row/column can be deleted by using the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">drop_duplicates()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method.</span></p>\r\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">123) Can you get items of series A that are not available in another series B?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be achieved by using the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">~</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;(not/negation symbol) and&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">isin()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method as shown below.</span></p>\r\n<pre class=\"language-python\"><code>import pandas as pd\r\ndf1 = pd.Series([2, 4, 8, 10, 12])\r\ndf2 = pd.Series([8, 12, 10, 15, 16])\r\ndf1=df1[~df1.isin(df2)]\r\nprint(df1)\r\n\"\"\"\r\nOutput:\r\n0    2\r\n1    4\r\ndtype: int64\r\n\"\"\"\r\n</code></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\">124). How will you get the items that are not common to both the given series A and B?</span></strong></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can achieve this by first performing the union of both series, then taking the intersection of both series. Then we follow the approach of getting items of union that are not there in the list of the intersection.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The following code demonstrates this:</span></p>\r\n<pre class=\"language-python\"><code>import pandas as pd\r\nimport numpy as np\r\ndf1 = pd.Series([2, 4, 5, 8, 10])\r\ndf2 = pd.Series([8, 10, 13, 15, 17])\r\np_union = pd.Series(np.union1d(df1, df2))  # union of series\r\np_intersect = pd.Series(np.intersect1d(df1, df2))  # intersection of series\r\nunique_elements = p_union[~p_union.isin(p_intersect)]\r\nprint(unique_elements)\r\n\"\"\"\r\nOutput:\r\n0     2\r\n1     4\r\n2     5\r\n5    13\r\n6    15\r\n7    17\r\ndtype: int64\r\n\"\"\"\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\"><br /><strong>125) while importing data from different sources, can the pandas library recognize dates?</strong></span></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Yes, they can, but with some bit of help. We need to add the parse dates argument while we are reading data from the sources. Consider an example where we read data from a CSV file, we may encounter different date-time formats that are not readable by the pandas library. In this case, pandas provide flexibility to build our custom date parser with the help of lambda functions as shown below:</span></p>\r\n<pre class=\"language-python\"><code>import pandas as pd\r\nfrom datetime import datetime\r\ndateparser = lambda date_val: datetime.strptime(date_val, '%Y-%m-%d %H:%M:%S')\r\ndf = pd.read_csv(\"some_file.csv\", parse_dates=['datetime_column'], date_parser=dateparser)\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"color: windowtext; font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\"><br /><strong>Numpy Interview Questions</strong></span></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">126) what do you understand by NumPy?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">NumPy is one of the most popular, easy-to-use, versatile, open-source, python-based, general-purpose package that is used for processing arrays. NumPy is short for Numerical Python. This is very famous for its highly optimized tools that result in high performance and powerful N-Dimensional array processing feature that is designed explicitly to work on complex arrays. Due to its popularity and powerful performance and its flexibility to perform various operations like trigonometric operations, algebraic and statistical computations, it is most commonly used in performing scientific computations and various broadcasting functions. The following image shows the applications of NumPy:</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">127) how are NumPy arrays advantageous over python lists?</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l136 level1 lfo153; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The list data structure of python is very highly efficient and is capable of performing various functions. But, they have severe limitations when it comes to the computation of vectored operations which deals with element-wise multiplication and addition. The python lists also require the information regarding the type of every element which results in overhead as type dispatching code gets executes every time any operation is performed on any element. This is where the NumPy arrays come into the picture as all the limitations of python lists are handled in NumPy arrays.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l136 level1 lfo153; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Additionally, as the size of the NumPy arrays increases, NumPy becomes around 30x times faster than the Python List. This is because the Numpy arrays are densely packed in the memory due to their homogenous nature. This ensures the memory free up is also faster.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">128) what are the steps to create 1D, 2D and 3D arrays?</span></h3>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">1D array creation:</span></strong></p>\r\n<pre class=\"language-python\"><code>import numpy as np\r\none_dimensional_list = [1,2,4]\r\none_dimensional_arr = np.array(one_dimensional_list)\r\nprint(\"1D array is : \",one_dimensional_arr) </code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">2D array creation:</span></strong></p>\r\n<pre class=\"language-python\"><code>import numpy as np\r\ntwo_dimensional_list=[[1,2,3],[4,5,6]]\r\ntwo_dimensional_arr = np.array(two_dimensional_list)\r\nprint(\"2D array is : \",two_dimensional_arr)</code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">3D array creation:</span></strong></p>\r\n<pre class=\"language-python\"><code>import numpy as np\r\nthree_dimensional_list=[[[1,2,3],[4,5,6],[7,8,9]]]\r\nthree_dimensional_arr = np.array(three_dimensional_list)\r\nprint(\"3D array is : \",three_dimensional_arr) </code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">ND array creation:&nbsp;</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be achieved by giving the ndmin attribute. The below example demonstrates the creation of a 6D array:</span></p>\r\n<pre class=\"language-java\"><code>import numpy as np\r\nndArray = np.array([1, 2, 3, 4], ndmin=6)\r\nprint(ndArray)\r\nprint('Dimensions of array:', ndArray.ndim)\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\"><br /><strong>129) you are given a numpy array and a new column as inputs. How will you delete the second column and replace the column with a new column value?</strong></span></pre>\r\n<p style=\"background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Example:</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />Given array:</span></p>\r\n<pre class=\"language-python\"><code>[[35 53 63]\r\n[72 12 22]\r\n[43 84 56]]\r\nNew Column values:\r\n\r\n[  \r\n   20 \r\n   30 \r\n   40\r\n]\r\nSolution:\r\n\r\nimport numpy as np\r\n#inputs\r\ninputArray = np.array([[35,53,63],[72,12,22],[43,84,56]])\r\nnew_col = np.array([[20,30,40]])\r\n# delete 2nd column\r\narr = np.delete(inputArray , 1, axis = 1)\r\n#insert new_col to array\r\narr = np.insert(arr , 1, new_col, axis = 1)\r\nprint (arr) \r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\">130) how will you efficiently load data from a text file?</span></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the method&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">numpy.loadtxt()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;which can automatically read the file&rsquo;s header and footer lines and the comments if any.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This method is highly efficient and even if this method feels less efficient, then the data should be represented in a more efficient format such as CSV etc. Various alternatives can be considered depending on the version of NumPy used.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Following are the file formats that are supported:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Text files: These files are generally very slow, huge but portable and are human-readable.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Raw binary: This file does not have any metadata and is not portable. But they are fast.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Pickle: These are borderline slow and portable but depends on the NumPy versions.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">HDF5: This is known as the High-Powered Kitchen Sink format which supports both PyTables and h5py format.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l131 level1 lfo154; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">.npy: This is NumPy's native binary data format which is extremely simple, efficient and portable.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">131) how will you read CSV data into an array in NumPy?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be achieved by using the genfromtxt() method by setting the delimiter as a comma.</span></p>\r\n<pre class=\"language-python\"><code>from numpy import genfromtxt\r\ncsv_data = genfromtxt('sample_file.csv', delimiter=',')</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">132) how will you sort the array based on the Nth column?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For example, consider an array arr.</span></p>\r\n<pre class=\"language-python\"><code>arr = np.array([[8, 3, 2],\r\n          [3, 6, 5],\r\n          [6, 1, 4]])\r\nLet us try to sort the rows by the 2nd column so that we get:\r\n\r\n[[6, 1, 4],\r\n[8, 3, 2],\r\n[3, 6, 5]]\r\n</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-color: white;\">We can do this by using the sort() method in numpy as:</span></p>\r\n<pre class=\"language-python\"><code>import numpy as np\r\narr = np.array([[8, 3, 2],\r\n          [3, 6, 5],\r\n          [6, 1, 4]])\r\n#sort the array using np.sort\r\narr = np.sort(arr.view('i8,i8,i8'),\r\n       order=['f1'],\r\n       axis=0).view(np.int)\r\n</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-color: white;\">We can also perform sorting and that too inplace sorting by doing:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">arr.view(</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'i8,i8,i8'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">).sort(order=[</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'f1'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">], axis=</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">0</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">)</span></code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">133) How will you find the nearest value in a given numpy array?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the argmin() method of numpy as shown below:</span></p>\r\n<pre class=\"language-python\"><code>import numpy as np\r\ndef find_nearest_value(arr, value):\r\n   arr = np.asarray(arr)\r\n   idx = (np.abs(arr - value)).argmin()\r\n   return arr[idx]\r\n#Driver code\r\narr = np.array([ 0.21169,  0.61391, 0.6341, 0.0131, 0.16541,  0.5645,  0.5742])\r\nvalue = 0.52\r\nprint(find_nearest_value(arr, value)) # Prints 0.5645\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\"><br /><strong>134) how will you reverse the numpy array using one line of code?</strong></span></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be done as shown in the following:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">reversed_array = arr[::-</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">1</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">]</span></code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Where&nbsp;</span><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">arr</span></strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;= original given array, reverse array is the resultant after reversing all elements in the input.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">135) how will you find the shape of any given NumPy array?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the shape attribute of the numpy array to find the shape. It returns the shape of the array in terms of row count and column count of the array.</span></p>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"color: windowtext; font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\">Python Libraries Interview Questions<br /></span></pre>\r\n<pre class=\"language-java\"><code>import numpy as np\r\narr_two_dim = np.array([(\"x1\",\"x2\", \"x3\",\"x4\"),\r\n             (\"x5\",\"x6\", \"x7\",\"x8\" )])\r\narr_one_dim = np.array([3,2,4,5,6])\r\n# find and print shape\r\nprint(\"2-D Array Shape: \", arr_two_dim.shape)\r\nprint(\"1-D Array Shape: \", arr_one_dim.shape)\r\n\"\"\"\r\nOutput:\r\n2-D Array Shape:  (2, 4)\r\n1-D Array Shape:  (5,)\r\n\"\"\"\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\">&nbsp;</pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">136) Differentiate between a package and a module in python.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The module is a single python file. A module can import other modules (other python files) as objects. Whereas, a package is the folder/directory where different sub-packages and the modules reside.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A python module is created by saving a file with the extension of&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">.py</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">. This file will have classes and functions that are reusable in the code as well as across modules.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A python package is created by following the below steps:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l42 level1 lfo155; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Create a directory and give a valid name that represents its operation.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l42 level1 lfo155; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Place modules of one kind in this directory.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l42 level1 lfo155; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Create&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">__init__.py</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;file in this directory. This lets python know the directory we created is a package. The contents of this package can be imported across different modules in other packages to reuse the functionality.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">137) what are some of the most commonly used built-in modules in Python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python modules are the files having python code which can be functions, variables or classes. These go by .py extension. The most commonly available built-in modules are:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">os</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">math</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">sys</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">random</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">re</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">datetime</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l86 level1 lfo156; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">JSON</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">138) &nbsp;how can you generate random numbers?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Python provides a module called random using which we can generate random numbers.</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l38 level1 lfo143; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We have to import a random module and call the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">random()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method as shown below:</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l38 level1 lfo143; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The random() method generates float values lying between 0 and 1 randomly.</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">&nbsp;</span></code><span class=\"hljs-keyword\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">import</span></strong></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> random</span></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> </span></code><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">print</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(random.random())</span></code></pre>\r\n<p class=\"MsoListParagraph\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; letter-spacing: .1pt;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">To generate customised random numbers between specified ranges, we can use the&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">randrange()</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method<br />Syntax:&nbsp;</span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; letter-spacing: .1pt;\">randrange(be.g.inning, end, step)</span></code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\"><br />For example:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-keyword\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">import</span></strong></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> random</span></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">print</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(random.randrange(</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">5</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">,</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">100</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">,</span></code><span class=\"hljs-number\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">2</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">))</span></code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">139) &nbsp;Can you easily check if all characters in the given string is alphanumeric?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be easily done by making use of the isalnum() method that returns true in case the string has only alphanumeric characters.</span></p>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">For Example -</span></p>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">\"abdc1321\"</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">.isalnum() </span></code><span class=\"hljs-comment\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">#Output: True</span></span><code></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">\"xyz@123$\"</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">.isalnum() </span></code><span class=\"hljs-comment\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">#Output: False</span></span></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Another way is to use&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">match()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;method from the re (re.g.ex) module as shown:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-keyword\"><strong><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">import</span></strong></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\"> re</span></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">print</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(</span></code><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">bool</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(re.match(</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'[A-Za-z0-9]+$'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">,</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'abdc1321'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">))) </span></code><span class=\"hljs-comment\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"># Output: True</span></span><code></code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">print</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(</span></code><span class=\"hljs-builtin\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">bool</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">(re.match(</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'[A-Za-z0-9]+$'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">,</span></code><span class=\"hljs-string\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">'xyz@123$'</span></span><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">))) </span></code><span class=\"hljs-comment\"><span style=\"font-size: 12pt; font-family: 'Arial Narrow', 'sans-serif'; letter-spacing: 0.1pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"># Output: False</span></span></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">140). Define PYTHONPATH.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">It is an environment variable used for incorporating additional directories during the import of a module or a package. PYTHONPATH is used for checking if the imported packages or modules are available in the existing directories. Not just that, the interpreter uses this environment variable to identify which module needs to be loaded.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">141) &nbsp;Define PIP.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">PIP stands for Python Installer Package. As the name indicates, it is used for installing different python modules. It is a command-line tool providing a seamless interface for installing different python modules. It searches over the internet for the package and installs them into the working directory without the need for any interaction with the user. The syntax for this is:</span></p>\r\n<pre style=\"background: #F5F8FF;\"><code><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt; background: #F5F8FF;\">pip install &lt;package_name&gt;</span></code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">142) are there any tools for identifying bugs and performing static analysis in python?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">Yes, there are tools like PyChecker and Pylint which are used as static analysis and linting tools respectively. PyChecker helps find bugs in python source code files and raises alerts for code issues and their complexity. Pylint checks for the module&rsquo;s coding standards and supports different plugins to enable custom features to meet</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">143) what is main function in python? How do you invoke it?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">In the world of programming languages, the main is considered as an entry point of execution for a program. But in python, it is known that the interpreter serially interprets the file line-by-line. This means that python does not provide&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">main()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;function explicitly. But this doesn't mean that we cannot simulate the execution of main. This can be done by defining user-defined&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">main()</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;function and by using the&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">__name__</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;property of python file. This&nbsp;</span><code><span style=\"mso-ansi-font-size: 12.0pt; mso-bidi-font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; letter-spacing: .1pt;\">__name__</span></code><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">&nbsp;variable is a special built-in variable that points to the name of the current module. This can be done as shown below:</span></p>\r\n<pre class=\"language-python\"><code>def main():\r\n   print(\"Hi W3code!\")\r\nif __name__==\"__main__\":\r\n   main()</code></pre>\r\n<h2 style=\"background: white;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; color: windowtext; letter-spacing: .1pt;\">Python Programming Examples</span></h2>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">144) Write python function which takes a variable number of arguments.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">A function that takes variable arguments is called a function prototype. Syntax:</span></p>\r\n<pre class=\"language-ruby\"><code>def function_name(*arg_list)\r\nFor example:\r\n\r\ndef func(*var):\r\n   for i in var:\r\n       print(i)\r\nfunc(1)\r\nfunc(20,1,6)</code></pre>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The * in the function argument represents variable arguments in the function.</span></p>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">145) WAP (Write a program) which takes a sequence of numbers and check if all numbers are unique.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">You can do this by converting the list to set by using set() method and comparing the length of this set with the length of the original list. If found equal, return True.</span></p>\r\n<pre class=\"language-php\"><code>def check_distinct(data_list):\r\n if len(data_list) == len(set(data_list)):\r\n   return True\r\n else:\r\n   return False;\r\nprint(check_distinct([1,6,5,8]))     #Prints True\r\nprint(check_distinct([2,2,5,5,7,8])) #Prints False</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">146). Write a program for counting the number of every character of a given text file.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">The idea is to use collections and pprint module as shown below:</span></p>\r\n<pre class=\"language-python\"><code>import collections\r\nimport pprint\r\nwith open(\"sample_file.txt\", 'r') as data:\r\n count_data = collections.Counter(data.read().upper())\r\n count_value = pprint.pformat(count_data)\r\nprint(count_value)</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">147) write a program to check and return the pairs of a given array A whose sum value is equal to a target value N.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">This can be done easily by using the phenomenon of hashing. We can use a hash map to check for the current value of the array, x. If the map has the value of (N-x), then there is our pair.</span></p>\r\n<pre class=\"language-python\"><code>def print_pairs(arr, N):\r\n   # hash set\r\n   hash_set = set()\r\n    \r\n   for i in range(0, len(arr)):\r\n       val = N-arr[i]\r\n       if (val in hash_set):    #check if N-x is there in set, print the pair\r\n           print(\"Pairs \" + str(arr[i]) + \", \" + str(val))\r\n       hash_set.add(arr[i])\r\n \r\n# driver code\r\narr = [1, 2, 40, 3, 9, 4]\r\nN = 3\r\nprint_pairs(arr, N)\r\n148) Write a Program to add two integers &gt;0 without using the plus operator.\r\nWe can use bitwise operators to achieve this.\r\n\r\ndef add_nums(num1, num2):\r\n   while num2 != 0:\r\n       data = num1 &amp; num2\r\n       num1 = num1 ^ num2\r\n       num2 = data &lt;&lt; 1\r\n   return num1\r\nprint(add_nums(2, 10))\r\n</code></pre>\r\n<pre style=\"background: #F5F8FF;\"><span style=\"font-family: 'Arial Narrow', 'sans-serif'; font-size: 12pt; letter-spacing: 0.1pt; background-color: white;\"><br /><strong>149) Write a Program to solve the given equation assuming that a,b,c,m,n,o are constants:</strong></span></pre>\r\n<pre class=\"language-python\"><code>ax + by = c\r\nmx + ny = o\r\nBy solving the equation, we get:\r\n\r\na, b, c, m, n, o = 5, 9, 4, 7, 9, 4\r\ntemp = a*n - b*m\r\nif n != 0:\r\n   x = (c*n - b*o) / temp\r\n   y = (a*o - m*c) / temp\r\n   print(str(x), str(y))</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">150) write a Program to match a string that has the letter &lsquo;a &rsquo;followed by 4 to 8&rsquo; bs.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the re module of python to perform re.g.ex pattern comparison here.</span></p>\r\n<pre class=\"language-python\"><code>import re\r\ndef match_text(txt_data):\r\n       pattern = 'ab{4,8}'\r\n       if re.search(pattern,  txt_data):    #search for pattern in txt_data\r\n           return 'Match found'\r\n       else:\r\n           return('Match not found')\r\nprint(match_text(\"abc\"))         #prints Match not found\r\nprint(match_text(\"aabbbbbc\"))    #prints Match found</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">151) write a Program to convert date from yyyy-mm-dd format to dd-mm-yyyy format.</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can again use the re module to convert the date string as shown below:</span></p>\r\n<pre class=\"language-java\"><code>import re\r\ndef transform_date_format(date):\r\n   return re.sub(r'(\\d{4})-(\\d{1,2})-(\\d{1,2})', '\\\\3-\\\\2-\\\\1', date)\r\ndate_input = \"2021-08-01\"\r\nprint(transform_date_format(date_input))\r\nYou can also use the datetime module as shown below:\r\n\r\nfrom datetime import datetime\r\nnew_date = datetime.strptime(\"2021-08-01\", \"%Y-%m-%d\").strftime(\"%d:%m:%Y\")\r\nprint(new_data)</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">152) find the same keys, you can add the values of these same keys. Output the new dictionary</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the Counter method from the collections module</span></p>\r\n<pre class=\"language-python\"><code>from collections import Counter\r\nd1 = {'key1': 50, 'key2': 100, 'key3':200}\r\nd2 = {'key1': 200, 'key2': 100, 'key4':300}\r\nnew_dict = Counter(d1) + Counter(d2)\r\nprint(new_dict)</code></pre>\r\n<h3 style=\"background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">153) &nbsp;how will you access the dataset of a publicly shared spread sheet in CSV format stored in Google Drive?</span></h3>\r\n<p style=\"background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: 'Segoe UI'; letter-spacing: .1pt;\">We can use the stringio module from the io module to read from the Google Drive link and then we can use the pandas library using the obtained data source.</span></p>\r\n<pre class=\"language-ruby\"><code>from io import StringIO\r\nimport pandas\r\ncsv_link = \"https://docs.google.com/spreadsheets/d/...\"\r\ndata_source = StringIO.StringIO(requests.get(csv_link).content))\r\ndataframe = pd.read_csv(data_source)\r\nprint(dataframe.head())</code></pre>\r\n<h2 style=\"margin-top: 0cm; background: white;\">&nbsp;</h2>\r\n<h2 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; color: windowtext;\">Python Libraries &ndash; Python Interview Questions</span></strong></h2>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">154) &nbsp;Explain what Flask is and its benefits?</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Flask is a web micro framework for Python based on &ldquo;Werkzeug, Jinja2 and good intentions&rdquo; BSD license. Werkzeug and Jinja2 are two of their dependencies. This means it will have little to no dependencies on external libraries.&nbsp; It makes the framework light while there is a little dependency to update and fewer security bugs.</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">A session basically allows you to remember information from one request to another. In a flask, a session uses a signed cookie so the user can look at the session contents and modify them. The user can modify the session if only it has the secret key Flask.secret_key.</span></p>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">155) Is Django better than Flask?</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django and Flask map the URL&rsquo;s or addresses typed in the web browsers to functions in Python.&nbsp;</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Flask is much simpler compared to Django but, Flask does not do a lot for you meaning you will need to specify the details, whereas Django does a lot for you wherein you would not need to do much work.&nbsp;Django&nbsp;consists of prewritten code, which the user will need to analyze whereas Flask gives the users to create their own code, therefore, making it simpler to understand the code. Technically both are equally good and both contain their own pros and cons.</span></p>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">156) mention the differences between Django, Pyramid and Flask.</span></strong></h3>\r\n<ul style=\"font-size: medium; font-weight: 400;\" type=\"disc\">\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l27 level1 lfo65; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Flask is a &ldquo;micro framework&rdquo; primarily builds for a small application with simpler requirements. In flask, you have to use external libraries. Flask is ready to use.</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l27 level1 lfo65; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Pyramid is built for larger applications. It provides flexibility and lets the developer use the right tools for their project. The developer can choose the database, URL structure, templating style and more. Pyramid is heavy configurable.</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l27 level1 lfo65; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django can also be used for larger applications just like Pyramid. It includes an ORM.</span></li>\r\n</ul>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">157) Discuss Django architecture.</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django MVT Pattern:</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\">&nbsp;</p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The developer provides the Model, the view and the template then just maps it to a URL and Django does the magic to serve it to the user.</span></p>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">158) Explain how you can set up the Database in Django.</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">You can use the command edit mysite/setting.py, it is a normal python module with module level representing Django settings.</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django uses SQLite by default; it is easy for Django users as such it won&rsquo;t require any other type of installation. In the case your database choice is different that you have to the following keys in the&nbsp;DATABASE &lsquo;default&rsquo;&nbsp;item to match your database connection settings.</span></p>\r\n<ul style=\"font-size: medium; font-weight: 400;\" type=\"disc\">\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l74 level1 lfo66; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Engines</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">: you can change the database by using &lsquo;django.db.backends.sqlite3&rsquo; , &lsquo;django.db.backeneds.mysql&rsquo;, &lsquo;django.db.backends.postgresql_psycopg2&rsquo;, &lsquo;django.db.backends.oracle&rsquo; and so on</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l74 level1 lfo66; tab-stops: list 36.0pt; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Name</span></strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">: The name of your database. In the case if you are using SQLite as your database, in that case, database will be a file on your computer, Name should be a full absolute path, including the file name of that file.</span></li>\r\n<li class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; line-height: normal; mso-list: l74 level1 lfo66; tab-stops: list 36.0pt; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">If you are not choosing SQLite as your database then settings like Password, Host, User, etc. must be added.</span></li>\r\n</ul>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django uses SQLite as a default database, it stores data as a single file in the filesystem. If you do have a database server&mdash;PostgreSQL, MySQL, Oracle, MSSQL&mdash;and want to use it rather than SQLite, then use your database&rsquo;s administration tools to create a new database for your Django project. Either way, with your (empty) database in place, all that remains is to tell Django how to use it. This is where your project&rsquo;s settings.py file comes in.</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">We will add the following lines of code to the&nbsp;<em>setting.py</em>&nbsp;file:</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;</span></p>\r\n<pre class=\"language-python\"><code>DATABASES = {\r\n\r\n     'default': {\r\n\r\n          'ENGINE' : 'django.db.backends.sqlite3',\r\n\r\n          'NAME' : os.path.join(BASE_DIR, 'db.sqlite3'),\r\n\r\n     }\r\n\r\n}</code></pre>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">159) Give an example how you can write a VIEW in Django?</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">This is how we can use write a view in Django:</span></p>\r\n<pre class=\"language-ruby\"><code>from django.http import HttpResponse\r\n\r\nimport datetime\r\n\r\n \r\n\r\ndef Current_datetime(request):\r\n\r\n     now = datetime.datetime.now()\r\n\r\n     html = \"It is now %s/body/html % now\r\n\r\n     return HttpResponse(html)</code></pre>\r\n<p style=\"margin-top: 0cm; background: white;\"><em><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Returns the current date and time, as an HTML document</span></em></p>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">160) Mention what the Django templates consist of.</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">The template is a simple text file.&nbsp; It can create any text-based format like XML, CSV, HTML, etc.&nbsp; A template contains variables that get replaced with values when the template is evaluated and tags (% tag %) that control the logic of the template.</span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\"><br /></span></p>\r\n<h3 style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">161) explain the use of session in Django framework?</span></strong></h3>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Django provides a session that lets you store and retrieve data on a per-site-visitor basis. Django abstracts the process of sending and receiving cookies, by placing a session ID cookie on the client side, and storing all the related data on the server side.</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">So the data itself is not stored client side. This is nice from a security perspective.</span></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><strong><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: major-fareast; mso-bidi-font-family: Arial;\">162)&nbsp;&nbsp;List out the inheritance styles in Django.</span></strong></p>\r\n<p style=\"margin-top: 0cm; background: white;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">In Django, there are three possible inheritance styles:</span></p>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l127 level1 lfo145; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow';\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Abstract Base Classes: This style is used when you only want parent&rsquo;s class to hold information that you don&rsquo;t want to type out for each child model.</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l127 level1 lfo145; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow';\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Multi-table Inheritance: This style is used If you are sub-classing an existing model and need each model to have its own database table.</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; margin-left: 54.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l127 level1 lfo145; background: white;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-fareast-font-family: 'Arial Narrow'; mso-bidi-font-family: 'Arial Narrow';\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Proxy models:&nbsp;You can use this model, If you only want to modify the Python level behavior of the model, without changing the model&rsquo;s fields.</span></p>\r\n<h2 style=\"background: white; margin: 48.0pt 0cm 24.0pt 0cm;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; color: windowtext;\">Things You Need to Master in Python</span></h2>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Frameworks</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">You should start working on a framework. Django, Flask, and CherryPy are three of Python's most powerful frameworks. Start using Django, a robust framework that adheres to the DRY (Don't Repeat Yourself) concept. It simplifies your work and takes care of the little details.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">ORM Libraries</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">ORM denotes Object Relational Mapping. This is a way to manipulate data from a database through an object-oriented paradigm. You can learn to operate ORM libraries such as Django ORM and SQLAlchemy. It is easier and faster as compared to writing&nbsp;</span><span style=\"font-family: 'Arial Narrow','sans-serif';\"><a title=\"SQL.\" href=\"https://www.simplilearn.com/tutorials/sql-tutorial/what-is-sql\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">SQL.</span></a></span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Front End Technologies</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Learning technologies and languages such as&nbsp;</span><span style=\"font-family: 'Arial Narrow','sans-serif';\"><a title=\"Javascript\" href=\"https://www.simplilearn.com/tutorials/javascript-tutorial/introduction-to-javascript\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">JavaScript</span></a></span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">, query,&nbsp;</span><span style=\"font-family: 'Arial Narrow','sans-serif';\"><a title=\"CSS3\" href=\"https://www.simplilearn.com/css3-resources-ultimate-list-article\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">CSS3</span></a></span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">, and&nbsp;</span><span style=\"font-family: 'Arial Narrow','sans-serif';\"><a title=\"HTML5\" href=\"https://www.simplilearn.com/tutorials/html-tutorial/html-vs-html5\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">HTML5</span></a></span><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">&nbsp;are not required to become a Python Developer. However, if you can try to have a basic understanding of these, you will come to know how things work. You may need to work with the front-end team as a Python Developer.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Version Control</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Multiple people making changes to a code can eventually break it. If you wish to use version control, you should learn GitHub and its basic terminology such as pull, push, fork, and commit.</span></p>\r\n<h2 style=\"background: white; margin: 48.0pt 0cm 24.0pt 0cm;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; color: windowtext;\">Python Development Trends in 2022</span></h2>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python is progressing consistently and is used in various industries and purposes such as data science, web application development, GUI and much more. The progress of the programming language is shaped by the dynamic needs of businesses. Any Python programming business in India can succeed if it keeps up with current developments and responds to market demands.</span></p>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Now let us have a look at the top Python development trends in the year 2022:</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Artificial Intelligence</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Artificial Intelligence&nbsp;will most likely be the paramount trend for Python in 2022. Python is great for creating a variety of AI systems that require a lot of data. It is the ideal platform for AI since it allows Developers to work with both structured and unstructured data.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Framework Upgrades</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Organizations hire Python Developers to match the pace of change and frameworks in Python and the upgraded technologies. Thus, companies would have to keep an eye on the latest upgrades that these frameworks receive over a period of time. TurboGears, Django, Pyramid and CherryPy are some of the top Python frameworks which will witness major updates in the coming year.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Web App Development</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Despite the fact that Python web development services are at the top of the charts everywhere, 2022 will witness massive growth in this sector. Python is a strong programming language that can be used to create high-quality applications in a variety of frameworks.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Academic Growth</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python is becoming the most popular and widely taught programming language in colle.g.es and universities. There are certain Python classes that are very popular all over the world. Python courses will become more popular in 2022 as schools focus on teaching the language to pupils in order to improve their job prospects.</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Cloud Computing</span></h3>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Python is becoming the most popular programming language in colle.g.es and universities. Python courses will become more popular in 2022, with schools focusing on teaching the language to pupils in order to improve their job prospects. These days many cloud computing providers like DigitalOcean, Google Cloud and AWS use Python to develop and manage their platforms.</span></p>\r\n<h2 style=\"background: white; margin: 48.0pt 0cm 24.0pt 0cm;\"><span style=\"font-size: 12.0pt; line-height: 115%; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial; color: windowtext;\">Job Opportunities in Python</span></h2>\r\n<p style=\"background: white; margin: 0cm 0cm 19.5pt 0cm;\"><span style=\"font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">If you have Python on your resume, you may end with the following positions in leading companies:</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\"><a title=\"Software Engineer\" href=\"https://www.simplilearn.com/how-to-become-a-software-engineer-article\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">Software Engineer</span></a></span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Write and test codes</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Study user needs</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Write operational documentation</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Communicate with clients and collaborate with the team</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Build existing programs</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Senior Software Engineer</span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Build strong software architecture</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Automate tasks through scripting or other tools</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Debug codes</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Conduct validation and verification testing</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Implementing version control</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Design patterns</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\"><a title=\"Data Scientist\" href=\"https://www.simplilearn.com/tutorials/data-science-tutorial/how-to-become-a-data-scientist\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">Data Scientist</span></a></span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Identify data sources</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Automate the collection</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Pre-process data</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Analyse data to invent trends</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Design predictive models</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Conduct data visualization</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Propose solutions by overcoming business challenges</span></p>\r\n<h3 style=\"background: white; margin: 24.0pt 0cm 18.0pt 0cm;\"><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif';\"><a title=\"DevOps Engineer\" href=\"https://www.simplilearn.com/devops-engineer-job-description-article\" target=\"_blank\" rel=\"noopener\"><span style=\"mso-bidi-font-family: Arial; color: windowtext;\">DevOps Engineer</span></a></span></h3>\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Deploy fixes and updates</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Analyse and solve technical glitches</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Design processes for maintenance and troubleshooting</span></p>\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Create scripts for automating visualization</span></p>\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"mso-margin-top-alt: auto; margin-bottom: 10.5pt; margin-left: 18.0pt; mso-add-space: auto; text-indent: -18.0pt; line-height: normal; mso-list: l133 level1 lfo144; background: white;\"><span style=\"font-size: 12.0pt; font-family: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol;\">&middot;<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size: 12.0pt; font-family: 'Arial Narrow','sans-serif'; mso-bidi-font-family: Arial;\">Deliver Level 2 technical support</span></p>", "viewcounter": 17, "parent": 54}}, {"model": "PreparationApp.companyquestion", "pk": 1, "fields": {"author": 1, "title": "Company interview questions and Procedure", "slug": "company-interview-questions-and-procedure", "timestamp": "2022-08-25T08:42:22.818", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 29, "parent": 53}}]