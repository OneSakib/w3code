[{"model": "PythonApp.djangoparent", "pk": 95, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 148, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 149, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 150, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 151, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 152, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 153, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 154, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 155, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 156, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 157, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 158, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 159, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 160, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 161, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 162, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 163, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 164, "fields": {}}, {"model": "PythonApp.djangoparent", "pk": 167, "fields": {}}, {"model": "PythonApp.restapiparent", "pk": 107, "fields": {}}, {"model": "PythonApp.flaskparent", "pk": 96, "fields": {}}, {"model": "PythonApp.machinelearningparent", "pk": 99, "fields": {}}, {"model": "PythonApp.numpysparent", "pk": 101, "fields": {}}, {"model": "PythonApp.tkintersparent", "pk": 111, "fields": {}}, {"model": "PythonApp.pytorchsparent", "pk": 106, "fields": {}}, {"model": "PythonApp.pygamesparent", "pk": 105, "fields": {}}, {"model": "PythonApp.scipysparent", "pk": 108, "fields": {}}, {"model": "PythonApp.pandassparent", "pk": 103, "fields": {}}, {"model": "PythonApp.opencvsparent", "pk": 102, "fields": {}}, {"model": "PythonApp.matplotlibsparent", "pk": 100, "fields": {}}, {"model": "PythonApp.seleniumsparent", "pk": 109, "fields": {}}, {"model": "PythonApp.kivysparent", "pk": 98, "fields": {}}, {"model": "PythonApp.jupytersparent", "pk": 97, "fields": {}}, {"model": "PythonApp.datascienceparent", "pk": 93, "fields": {}}, {"model": "PythonApp.deeplearningparent", "pk": 94, "fields": {}}, {"model": "PythonApp.pillowsparent", "pk": 104, "fields": {}}, {"model": "PythonApp.tensorflowsparent", "pk": 110, "fields": {}}, {"model": "PythonApp.dspythonparent", "pk": 92, "fields": {}}, {"model": "PythonApp.django", "pk": 1, "fields": {"author": 1, "title": "OVERVIEW", "slug": "overview", "timestamp": "2022-08-25T17:09:16.953", "content": "<h4 style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; vertical-align: baseline; clear: both; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff; text-align: center;\"><span style=\"font-size: 24pt;\">What is Django</span></h4>\r\n<p><span style=\"font-size: 14pt;\">Django is a Python-based web framework which allows you to quickly create web application without all of the installation or dependency problems that you normally will find with other frameworks. When you&rsquo;re building a website, you always need a similar set of components: a way to handle user authentication (signing up, signing in, signing out), a management panel for your website, forms, a way to upload files, etc. Django gives you ready-made components to use.</span></p>\r\n<p>&nbsp;</p>\r\n<h4 style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; vertical-align: baseline; clear: both; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Why Django</span></h4>\r\n<ul>\r\n<li><span style=\"font-size: 14pt;\">It&rsquo;s very easy to switch database in Django framework.</span></li>\r\n<li><span style=\"font-size: 14pt;\"> It has built-in admin interface which makes easy to work with it. </span></li>\r\n<li><span style=\"font-size: 14pt;\">Django is fully functional framework that requires nothing else.</span></li>\r\n<li><span style=\"font-size: 14pt;\"> It has thousands of additional packages available. </span></li>\r\n<li><span style=\"font-size: 14pt;\">It is very scalable.</span></li>\r\n</ul>\r\n<p>&nbsp;</p>\r\n<h4 style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; vertical-align: baseline; clear: both; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Popularity of Django</span></h4>\r\n<p><span style=\"font-size: 14pt;\">Django is used in many popular sites like as: Disqus, Instagram, Knight Foundation, MacArthur Foundation, Mozilla, National Geographic etc. There are more than 5k online sites based on the Django framework. ( Source )</span></p>\r\n<p><span style=\"font-size: 14pt;\"> Sites like Hot Frameworks assess the popularity of a framework by counting the number of GitHub projects and StackOverflow questions for each platform, here Django is in 6th position. Web frameworks often refer to themselves as &ldquo;opinionated&rdquo; or &ldquo;un-opinionated&rdquo; based on opinions about the right way to handle any particular task. Django is somewhat opinionated, hence delivers the in both worlds( opinionated &amp; un-opinionated ).</span></p>\r\n<h4 style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; vertical-align: baseline; clear: both; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Features of Django:-</span></h4>\r\n<p><span style=\"font-size: 14pt;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">Versatility of Django</strong></span></p>\r\n<p><span style=\"font-size: 14pt;\">Django can build almost any type of website. It can also work with any client-side framework and can deliver content in any format such as HTML, JSON, XML etc. Some sites which can be built using Django are wikis, social networks, new sites etc.</span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; letter-spacing: 0.162px;\">Security</strong></strong></span></p>\r\n<p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 14pt; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">Since Django framework is made for making web development easy, it has been engineered in such a way that it automatically do the right things to protect the website. For example, In the Django framework instead of putting a password in cookies, the hashed password is stored in it so that it can&rsquo;t be fetched easily by hackers.</span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">Scalability</strong></span></p>\r\n<p><span style=\"background-color: #ffffff; color: #273239; font-family: urw-din, sans-serif; font-size: 14pt; letter-spacing: 0.162px;\">Django web nodes have no stored state, they scale horizontally &ndash; just fire up more of them when you need them. Being able to do this is the essence of good scalability. Instagram and Disqus are two Django based products that have millions of active users, this is taken as an example of the scalability of Django.</span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">Portability</strong></span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: urw-din, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><span style=\"font-weight: 400; letter-spacing: 0.162px;\">All the codes of the Django framework are written in Python, which runs on many platforms. Which leads to run Django too in many platforms such as Linux, Windows and Mac OS.</span></strong></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>", "viewcounter": 50, "parent": 95}}, {"model": "PythonApp.django", "pk": 2, "fields": {"author": 1, "title": "CUSTOM USER", "slug": "custom-user", "timestamp": "2022-08-26T09:22:44.938", "content": "<h1 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; line-height: 1.2; font-size: 3rem; color: #343a40; max-width: none; order: 1; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; text-align: center; background-color: #ffffff;\"><strong><span style=\"font-size: 24pt;\">Creating a Custom User Model in Django</span></strong></h1>\r\n<h2 id=\"abstractuser-vs-abstractbaseuser\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">AbstractUser vs AbstractBaseUser</span></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">The default User model in Django uses a username to uniquely identify a user during authentication. If you'd rather use an email address, you'll need to create a custom User model by either subclassing&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractUser</code>&nbsp;or&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractBaseUser</code>.</span></p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Options:</span></p>\r\n<ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">\r\n<li style=\"box-sizing: border-box;\"><span style=\"font-size: 14pt;\"><code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractUser</code>: Use this option if you are happy with the existing fields on the User model and just want to remove the username field.</span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\"><code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractBaseUser</code>: Use this option if you want to start from scratch by creating your own, completely new User model.</span></li>\r\n</ol>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">The steps are the same for each:</span></p>\r\n<p>&nbsp;</p>\r\n<ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">\r\n<li style=\"box-sizing: border-box;\"><span style=\"font-size: 14pt;\">Create a custom User model and Manager</span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Update&nbsp;<em style=\"box-sizing: border-box;\">settings.py</em></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Customize the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">UserCreationForm</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">UserChangeForm</code>&nbsp;forms</span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Update the admin</span></li>\r\n</ol>\r\n<h2 id=\"project-setup\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><strong><span style=\"font-size: 14pt;\">Project Setup</span></strong></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Start by creating a new Django project along with a users app:</span></p>\r\n<pre class=\"language-python\"><code>Ubtuntu:\r\n\r\n$ mkdir CustomUser &amp;&amp; cd CustomUser\r\n$ python3 -m venv venv\r\n$ source venv/bin/activate\r\n\r\n(env)$ pip install Django\r\n(env)$ django-admin startproject CustomUser .\r\n(env)$ python manage.py startapp App\r\n\r\nWindows:\r\n&gt;&gt; mkdir CustomUser \r\n&gt;&gt; cd CustomUser\\\r\n&gt;&gt;pip install virtualenv\r\n&gt;&gt;virtualenv venv\r\n&gt;&gt;cd venv\\Script\r\n&gt;&gt;activate\r\nNote: in console you see the virtual environment name to satisfy that is activate or not\r\n&gt;&gt;pip insall django\r\n&gt;&gt;django-admin startproject CustomUser .\r\n&gt;&gt;python manage.py startapp App\r\n\r\n\r\n</code></pre>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">&nbsp;</p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"color: #e03e2d; font-size: 14pt;\"><code>DO NOT apply the migrations. Remember: You must create the custom User model&nbsp;<em style=\"box-sizing: border-box;\">before</em>&nbsp;you apply your first migration.</code></span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Add the new app to the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">INSTALLED_APPS</code>&nbsp;list in&nbsp;<em style=\"box-sizing: border-box;\">settings.py</em>:</span></p>\r\n<pre class=\"language-python\"><code># Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'App'\r\n]</code></pre>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">&nbsp;</p>\r\n<h2 id=\"tests\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><strong>Tests(Optional)</strong></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">Let's take a test-first approach:</p>\r\n<pre class=\"language-python\"><code>from django.contrib.auth import get_user_model\r\nfrom django.test import TestCase\r\n\r\n\r\nclass UsersManagersTests(TestCase):\r\n\r\n    def test_create_user(self):\r\n        User = get_user_model()\r\n        user = User.objects.create_user(email='normal@user.com', password='foo')\r\n        self.assertEqual(user.email, 'normal@user.com')\r\n        self.assertTrue(user.is_active)\r\n        self.assertFalse(user.is_staff)\r\n        self.assertFalse(user.is_superuser)\r\n        try:\r\n            # username is None for the AbstractUser option\r\n            # username does not exist for the AbstractBaseUser option\r\n            self.assertIsNone(user.username)\r\n        except AttributeError:\r\n            pass\r\n        with self.assertRaises(TypeError):\r\n            User.objects.create_user()\r\n        with self.assertRaises(TypeError):\r\n            User.objects.create_user(email='')\r\n        with self.assertRaises(ValueError):\r\n            User.objects.create_user(email='', password=\"foo\")\r\n\r\n    def test_create_superuser(self):\r\n        User = get_user_model()\r\n        admin_user = User.objects.create_superuser(email='super@user.com', password='foo')\r\n        self.assertEqual(admin_user.email, 'super@user.com')\r\n        self.assertTrue(admin_user.is_active)\r\n        self.assertTrue(admin_user.is_staff)\r\n        self.assertTrue(admin_user.is_superuser)\r\n        try:\r\n            # username is None for the AbstractUser option\r\n            # username does not exist for the AbstractBaseUser option\r\n            self.assertIsNone(admin_user.username)\r\n        except AttributeError:\r\n            pass\r\n        with self.assertRaises(ValueError):\r\n            User.objects.create_superuser(\r\n                email='super@user.com', password='foo', is_superuser=False)</code></pre>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Add the specs to&nbsp;<em style=\"box-sizing: border-box;\">users/tests.py</em>, and then make sure the tests fail. it give some error but you don't scare about it. let's continue...</span></p>\r\n<h2 id=\"model-manager\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><strong><span style=\"font-size: 14pt;\">Model Manager</span></strong></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">First, we need to add a custom&nbsp;<a style=\"box-sizing: border-box; color: #1972d1; text-decoration-line: none; background-color: transparent;\" href=\"https://docs.djangoproject.com/en/3.2/topics/db/managers/\">Manager</a>, by subclassing&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">BaseUserManager</code>, that uses an email as the unique identifier instead of a username.</span></p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Create a&nbsp;<em style=\"box-sizing: border-box;\">managers.py</em> file in the \"App\" directory:</span></p>\r\n<pre class=\"language-python\"><code>from django.contrib.auth.base_user import BaseUserManager\r\nfrom django.utils.translation import gettext_lazy as _\r\n\r\n\r\n# Create your models here.\r\nclass CustomUserManager(BaseUserManager):\r\n    \"\"\"\r\n        Custom user model manager where email is the unique identifiers\r\n        for authentication instead of usernames.\r\n        \"\"\"\r\n\r\n    def create_user(self, email, password, **kwargs):\r\n        \"\"\"\r\n               Create and save a User with the given email and password.\r\n               \"\"\"\r\n        if not email:\r\n            raise ValueError(_(\"The Email must be set\"))\r\n        email = self.normalize_email(email)\r\n        user = self.model(email=email, **kwargs)\r\n        user.set_password(password)\r\n        user.save()\r\n        return user\r\n\r\n    def create_superuser(self, email, password, **kwargs):\r\n        \"\"\"\r\n        careat and save super user\r\n        \"\"\"\r\n        kwargs.setdefault('is_staff', True)\r\n        kwargs.setdefault('is_superuser', True)\r\n        kwargs.setdefault('is_active', True)\r\n        if kwargs.get('is_staff') is not True:\r\n            raise ValueError(_(\"Super user must have define the is_staff True\"))\r\n        if kwargs.get('is_superuser') is not True:\r\n            raise ValueError(\"Super user must have define ethe is_superuser True\")\r\n        return self.create_user(email, password, **kwargs)\r\n</code></pre>\r\n<h2 id=\"user-model\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><strong><span style=\"font-size: 14pt;\">User Model</span></strong></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Decide which option you'd like to use: subclassing&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractUser</code>&nbsp;or&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractBaseUser</code>.</span></p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">AbstractUser</span></p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Update&nbsp;<em style=\"box-sizing: border-box;\"><span style=\"font-size: 18.6667px; font-style: normal;\">App</span>/models.py</em>:</span></p>\r\n<pre class=\"language-python\"><code>#Using Abstract User\r\nclass CustomUser(AbstractUser):\r\n    username = None\r\n    email = models.EmailField(_(\"Email Address\"), unique=True)\r\n    USERNAME_FIELD = 'email'\r\n    REQUIRED_FIELDS = []\r\n\r\n    objects = CustomUserManager()\r\n\r\n    def __str__(self):\r\n        return self.email\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Here, we:</span></p>\r\n<ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">\r\n<li style=\"box-sizing: border-box;\"><span style=\"font-size: 14pt;\">Created a new class called&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">CustomUser</code>&nbsp;that subclasses&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractUser</code></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Removed the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">username</code>&nbsp;field</span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Made the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">email</code>&nbsp;field required and unique</span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Set the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">USERNAME_FIELD</code>&nbsp;-- which defines the unique identifier for the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">User</code>&nbsp;model -- to&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">email</code></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Specified that all objects for the class come from the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">CustomUserManager</code></span></li>\r\n</ol>\r\n<h3 id=\"abstractbaseuser\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 1.45rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">AbstractBaseUser</span></h3>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Update&nbsp;<em style=\"box-sizing: border-box;\"><span style=\"font-size: 18.6667px; font-style: normal;\">App</span>/models.py</em>:</span></p>\r\n<pre class=\"language-python\"><code>#     Using Base user class\r\nclass CustomUser(AbstractBaseUser, PermissionsMixin):\r\n    email = models.EmailField(_(\"Email Address\"), unique=True)\r\n    is_staff = models.BooleanField(default=False)\r\n    is_active = models.BooleanField(default=False)\r\n    date_joined = models.DateTimeField(auto_now=True)\r\n    is_verified = models.BooleanField(default=False)\r\n    USERNAME_FIELD = 'email'\r\n    REQUIRED_FIELDS = []\r\n\r\n    objects = CustomUserManager()\r\n\r\n    def __str__(self):\r\n        return self.email\r\n</code></pre>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Here, we:</span></p>\r\n<ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\">\r\n<li style=\"box-sizing: border-box;\"><span style=\"font-size: 14pt;\">Created a new class called&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">CustomUser</code>&nbsp;that subclasses&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">AbstractBaseUser</code></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Added fields for&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">email</code>,&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">is_staff</code>,&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">is_active</code>, and&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">date_joined</code></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Set the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">USERNAME_FIELD</code>&nbsp;-- which defines the unique identifier for the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">User</code>&nbsp;model -- to&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">email</code></span></li>\r\n<li style=\"box-sizing: border-box; margin-top: 0.5rem;\"><span style=\"font-size: 14pt;\">Specified that all objects for the class come from the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">CustomUserManager</code></span></li>\r\n</ol>\r\n<h2 id=\"settings\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Settings</span></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Add the following line to the&nbsp;<em style=\"box-sizing: border-box;\">settings.py</em>&nbsp;file so that Django knows to use the new User class:</span></p>\r\n<pre class=\"language-python\"><code># Custom User\r\nAUTH_USER_MODEL = 'App.CustomUser'</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><span style=\"color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\">Now, you can create and apply the migrations, which will create a new database that uses the custom User model. Before we do that, let's look at what the migration will actually look like&nbsp;</span><em style=\"box-sizing: border-box; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\">without</em><span style=\"color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\">&nbsp;creating the migration file, with the&nbsp;</span><a style=\"box-sizing: border-box; color: #1972d1; text-decoration-line: none; background-color: #ffffff; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\" href=\"https://docs.djangoproject.com/en/3.2/ref/django-admin/#cmdoption-makemigrations-dry-run\">--dry-run</a><span style=\"color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\">&nbsp;flag:</span></span></p>\r\n<pre class=\"language-python\"><code>Ubtuntu:\r\n\r\n(env)$ python manage.py makemigrations --dry-run --verbosity 3\r\n\r\nWindows:\r\n\r\n&gt;&gt; python manage.py makemigrations --dry-run --verbosity 3</code></pre>\r\n<p>Output:</p>\r\n<pre class=\"language-python\"><code>No changes detected\r\n</code></pre>\r\n<p>If it give some error then you can check the syntax you do any mistake, if it show no change detected the continue.......</p>\r\n<pre class=\"language-python\"><code>Ubuntu..\r\n\r\n(env)$ python manage.py makemigrations\r\n(env)$ python manage.py migrate\r\n\r\nWindows:\r\n&gt;&gt; python manage.py makemigrations\r\n&gt;&gt; python manage.py migrate</code></pre>\r\n<p><span style=\"color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 14pt; background-color: #ffffff;\">Also, when you create a superuser, you should be prompted to enter an email rather than a username:</span></p>\r\n<pre class=\"language-python\"><code>Ubuntu:\r\n\r\n(env)$ python manage.py createsuperuser\r\n\r\nEmail address: test@test.com\r\nPassword:\r\nPassword (again):\r\nSuperuser created successfully.\r\n\r\nWindows:\r\n&gt;&gt; python manage.py createsuperuser\r\n\r\nEmail address: test@test.com\r\nPassword:\r\nPassword (again):\r\nSuperuser created successfully.</code></pre>\r\n<p>&nbsp;</p>\r\n<p><strong><span style=\"color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 14pt; background-color: #ffffff;\">Make sure the tests pass:</span></strong></p>\r\n<p>&nbsp;</p>\r\n<pre class=\"language-python\"><code>Ubtuntu:\r\n\r\n\r\n(env)$ python manage.py test\r\n\r\nCreating test database for alias 'default'...\r\nSystem check identified no issues (0 silenced).\r\n..\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.282s\r\n\r\nOK\r\nDestroying test database for alias 'default'...\r\n\r\nWindows:\r\n\r\n\r\n&gt;&gt; python manage.py test\r\n\r\nCreating test database for alias 'default'...\r\nSystem check identified no issues (0 silenced).\r\n..\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.282s\r\n\r\nOK\r\nDestroying test database for alias 'default'...</code></pre>\r\n<h2 id=\"forms\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><strong><span style=\"font-size: 14pt;\">Forms</span></strong></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Next, let's subclass the&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">UserCreationForm</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">UserChangeForm</code>&nbsp;forms so that they use the new&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">CustomUser</code>&nbsp;model.</span></p>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Create a new file in \"App\" called <em style=\"box-sizing: border-box;\">forms.py</em>:</span></p>\r\n<pre class=\"language-python\"><code>from django import forms\r\nfrom django.contrib.auth.forms import UserChangeForm, UserCreationForm\r\nfrom .models import CustomUser\r\n\r\n\r\nclass CustomUserCreationForm(UserCreationForm):\r\n    class Meta:\r\n        model = CustomUser\r\n        fields = ('email',)\r\n\r\nclass CustomUserChangeForm(UserChangeForm):\r\n    class Meta:\r\n        model=CustomUser\r\n        fields=('email',)\r\n</code></pre>\r\n<h2 id=\"admin\" style=\"box-sizing: border-box; margin: 2.4rem 0px 15px; font-weight: 500; line-height: 1.2; font-size: 2rem; color: #333333; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Admin</span></h2>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">Tell the admin to use these forms by subclassing&nbsp;<code style=\"box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', DotumChe, monospace; color: #d44950; overflow-wrap: break-word; border: 1px solid #e8e8e8; border-radius: 0px; background-color: whitesmoke; padding: 1px 5px;\">UserAdmin</code>&nbsp;in&nbsp;<em style=\"box-sizing: border-box;\">App/admin.py</em>:</span></p>\r\n<pre class=\"language-python\"><code>from django.contrib import admin\r\nfrom .models import CustomUser\r\nfrom .forms import CustomUserChangeForm, CustomUserCreationForm\r\nfrom django.contrib.auth.admin import UserAdmin\r\n\r\n\r\n# Register your models here.\r\n\r\n@admin.register(CustomUser)\r\nclass CustomUserAdmin(UserAdmin):\r\n    add_form = CustomUserCreationForm\r\n    form = CustomUserChangeForm\r\n    model = CustomUser\r\n    list_display = ('email', 'is_staff', 'is_active')\r\n    list_filter = ('email', 'is_staff', 'is_active')\r\n    fieldsets = (\r\n        (None, {'fields': ('email', 'password')}),\r\n        ('Permissions', {'fields': ('is_staff', 'is_active')})\r\n    )\r\n    add_fieldsets = (\r\n        (None, {\r\n            'classes': ('wide',),\r\n            'fields': ('email', 'password1', 'password2', 'is_staff', 'is_active', 'is_verified')\r\n        }),\r\n    )\r\n    search_fields = ('email',)\r\n    ordering = ('email',)\r\n</code></pre>\r\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #212529; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 17px; background-color: #ffffff;\"><span style=\"font-size: 14pt;\">That's it. Run the server and log in to the admin site. You should be able to add and change users like normal.</span></p>\r\n<p><img src=\"../../../../../media/tinymce/Screenshot (1).png\" alt=\"\" width=\"100%\" height=\"50%\" /></p>\r\n<p>&nbsp;</p>\r\n<h3>Git Repo: <a title=\"Git Repo Custom User\" href=\"https://github.com/OneSakib/Custom-User-Django.git\" target=\"_blank\" rel=\"noopener\">https://github.com/OneSakib/Custom-User-Django.git</a></h3>", "viewcounter": 33, "parent": 163}}, {"model": "PythonApp.django", "pk": 3, "fields": {"author": 1, "title": "Django with Razorpay", "slug": "django-with-razorpay", "timestamp": "2022-08-26T10:03:54.570", "content": "<p>&nbsp;</p>\r\n<p class=\"MsoNormal\" style=\"text-align: center;\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><span style=\"font-size: 24pt;\"><strong>Integrate Razorpay With Django</strong></span></span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14.0pt; line-height: 115%; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-font-kerning: 18.0pt; mso-fareast-language: EN-AU;\"><strong>Introduction to Razorpay</strong></span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14.0pt; line-height: 115%; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-fareast-language: EN-AU;\">Know all about Razorpay and the various products we offer to accept and make payments.</span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14.0pt; line-height: 115%; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\">Razorpay offers solutions to power your finance and help you grow.</span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><span style=\"line-height: 115%;\">RA</span><span style=\"line-height: 115%;\">zorpay offers a range of solutions for all your payment and finance needs.</span></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p class=\"MsoNormal\" style=\"text-align: center;\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><span style=\"font-size: 18pt;\"><strong>Integrate Razorpay with Python</strong></span></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Get Client and Secret Key:</strong></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Step 1: Register and login</strong> </span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><a href=\"https://razorpay.com/\">https://razorpay.com/</a></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Step2: Complete KYC details like bank details and other like aadhar card detail fill up</strong> </span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Step 3: Get Client Key and Secret Key</strong></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">Go to Setttings (Bottom of left side bar ) &gt; Make sure Test mode is On(To on test mode click to test mode open at the top button )</span></p>\r\n<p class=\"MsoNormal\">&nbsp;</p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"../../../../../media/tinymce/Screenshot (11).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"../../../../../media/tinymce/Screenshot (12).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"../../../../../media/tinymce/Screenshot (13).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"../../../../../media/tinymce/Screenshot (14).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></p>\r\n<p class=\"MsoNormal\" style=\"text-align: center;\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><span style=\"font-size: 18pt;\"><strong>Common Steps for Integration:</strong></span></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Step 1: create dir</strong></span></p>\r\n<pre class=\"language-markup\"><code>mkdir razorpay\r\ncd razorpay</code></pre>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>Step: 2<span style=\"mso-spacerun: yes;\">&nbsp; </span>Install</strong></span></p>\r\n<pre class=\"language-python\"><code>$ pip install razorpay</code></pre>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>step3: Create main.py file</strong></span></p>\r\n<pre class=\"language-python\"><code>import razorpay\r\n\r\nclient = razorpay.Client(auth=(\"YOUR_ID\", \"YOUR_SECRET\"))\r\n\r\ndata = { \"amount\": 500, \"currency\": \"INR\", \"receipt\": \"order_rcptid_11\" }\r\n\r\npayment = client.order.create(data=data)1)\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>step 4 run main.py</strong></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>py main.py</strong></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">Output:</span></p>\r\n<pre class=\"language-python\"><code>{\r\n\r\n  \"id\": \"order_DBJOWzybf0sJbb\",\r\n\r\n  \"entity\": \"order\",\r\n\r\n  \"amount\": 50000,\r\n\r\n  \"amount_paid\": 0,\r\n\r\n  \"amount_due\": 50000,\r\n\r\n  \"currency\": \"INR\",\r\n\r\n  \"receipt\": \"rcptid_11\",\r\n\r\n  \"status\": \"created\",\r\n\r\n  \"attempts\": 0,\r\n\r\n  \"notes\": [],\r\n\r\n  \"created_at\": 1566986570\r\n\r\n}</code></pre>\r\n<p class=\"MsoNormal\">&nbsp;</p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>step5: success Callback/output</strong></span></p>\r\n<pre class=\"language-python\"><code>{\r\n\r\n  \"razorpay_payment_id\": \"pay_29QQoUBi66xm2f\",\r\n\r\n  \"razorpay_order_id\": \"order_9A33XWu170gUtm\",\r\n\r\n  \"razorpay_signature\": \"9ef4dffbfd84f1318f6739a3ce19f9d85851857ae648f114332d8401e0949a3d\"\r\n\r\n}</code></pre>\r\n<p class=\"MsoNormal\">&nbsp;</p>\r\n<p class=\"MsoNormal\"><strong><span lang=\"EN-US\" style=\"font-size: 14pt;\">step: 6 Verify Signature Payment is Successful or not</span></strong></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>create verify.py</strong></span></p>\r\n<pre class=\"language-python\"><code>import razorpay\r\n\r\n \r\n\r\nclient = razorpay.Client(auth = ('[key_id]', '[key_secret]'))\r\n\r\nparams_dict = {\r\n\r\n    'razorpay_order_id': '12122',\r\n\r\n    'razorpay_payment_id': '332',\r\n\r\n    'razorpay_signature': '23233'\r\n\r\n}\r\n\r\nverify=client.utility.verify_payment_signature(params_dict)\r\n\r\nif verify:\r\n\r\n                print(&ldquo;Payment is Successful verified&rdquo;)\r\n\r\nelse:\r\n\r\n                print(&ldquo;Payment is not verified /Unsuccessful&rdquo;)\r\n\r\nNote: Signature verify is used to completely is payment successful because some time after the payment lack of network payment is not successful so its used to verify the signature.</code></pre>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p class=\"MsoNormal\">&nbsp;</p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\"><strong>github repo: <a href=\"https://github.com/OneSakib/Razorpay-with-Python/\">https://github.com/OneSakib/Razorpay-with-Python/</a></strong></span></p>\r\n<p class=\"MsoNormal\" style=\"text-align: center;\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\"><span style=\"font-size: 18pt;\">Integration with Django</span></span></strong></span></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">Step1. create <span style=\"mso-spacerun: yes;\">&nbsp;</span>Virtualenv </span></strong></span></p>\r\n<pre class=\"language-python\"><code>mkdir DjangoRazorpay\r\n\r\ncd DjangoRazorpay\r\n\r\nvirtualenv venv\r\n\r\nsource venv/bin/activate</code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">Step2. install requirements</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>pip install django,razorpay</code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">Step3. setup project</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>django-admin startproject DjangoRazorpay .\r\n\r\npython manage.py startapp RazorApp</code></pre>\r\n<pre class=\"language-python\"><code> INSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'RazorApp' #new\r\n]\r\n\r\n\r\n&hellip;&hellip;\r\n\r\n&hellip;&hellip;\r\n\r\n \r\n\r\n# Razor pay\r\n\r\nRAZORPAY_CLIENT_ID = \"&lt;Your Client Key&gt;\"\r\n\r\nRAZORPAY_SECRET_ID = \"&lt;Your Secret Key&gt;\"\r\n\r\n</code></pre>\r\n<p class=\"MsoNormal\"><strong style=\"font-size: 14pt;\"><span lang=\"EN-US\">Step 4. migrate</span></strong></p>\r\n<pre class=\"language-markup\"><code>python manage.py migrate</code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">Step 5. models.py</span></strong></span></p>\r\n<pre class=\"language-python\"><code>from django.db import models\r\n\r\n \r\n\r\n# Create your models here.\r\n\r\nclass Coffee(models.Model):\r\n\r\n    name = models.CharField(max_length=100, default='Rahul Kumar')\r\n\r\n    email = models.EmailField(default='rahulkumar123@example.com')\r\n\r\n    contact = models.IntegerField(default='9999999999')\r\n\r\n    address = models.TextField(default=\"House no 215 Saharanpur Uttar Pradesh India 247001\")\r\n\r\n    amount = models.IntegerField(default=0)\r\n\r\n    order_id = models.CharField(max_length=200, default='')\r\n\r\n    payment_id = models.CharField(max_length=200, default='')\r\n\r\n    signature_id = models.CharField(max_length=200, default='')\r\n\r\n    paid = models.BooleanField(default=False)\r\n\r\n \r\n\r\n    def __str__(self):\r\n\r\n        return self.name\r\n\r\n \r\n\r\n</code></pre>\r\n<p class=\"MsoNormal\"><strong style=\"font-size: 14pt;\"><span lang=\"EN-US\">admin.py</span></strong></p>\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<pre class=\"language-python\"><code>from django.contrib import admin\r\n\r\nfrom .models import Coffee\r\n\r\n \r\n\r\n \r\n\r\n# Register your models here.\r\n\r\n \r\n\r\n@admin.register(Coffee)\r\n\r\nclass CoffeeAdmin(admin.ModelAdmin):\r\n\r\n    list_display = ['name', 'amount', 'payment_id', 'paid']\r\n\r\n \r\n\r\nforms.py\r\n\r\nfrom django import forms\r\n\r\nfrom .models import Coffee\r\n\r\n \r\n\r\n \r\n\r\nclass CoffeeForm(forms.ModelForm):\r\n\r\n    class Meta:\r\n\r\n        model = Coffee\r\n\r\n        fields = ['name', 'email', 'contact', 'address', 'amount']\r\n\r\n        widgets = {\r\n\r\n            'name': forms.TextInput(attrs={'class': 'form-control'}),\r\n\r\n            'email': forms.EmailInput(attrs={'class': 'form-control'}),\r\n\r\n            'contact': forms.NumberInput(\r\n\r\n                attrs={'class': 'form-control', 'type': 'tel', 'pattern': '[0-9]{10}'}),\r\n\r\n            'address': forms.TextInput(attrs={'class': 'form-control'}),\r\n\r\n            'amount': forms.NumberInput(attrs={'class': 'form-control', 'min': 1, 'max': 10000}),\r\n\r\n        }</code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong>views.py</strong></span></p>\r\n<pre class=\"language-python\"><code>from django.shortcuts import render\r\n\r\nfrom django.views.generic import TemplateView, FormView, View\r\n\r\nfrom .forms import CoffeeForm, Coffee\r\n\r\nimport razorpay\r\n\r\nfrom django.conf import settings\r\n\r\n \r\n\r\n \r\n\r\n# Create your views here.\r\n\r\nclass IndexView(FormView):\r\n\r\n    template_name = 'RazorPay/index.html'\r\n\r\n    form_class = CoffeeForm\r\n\r\n    success_url = '/'\r\n\r\n \r\n\r\n    def form_valid(self, form):\r\n\r\n        name = form.cleaned_data['name']\r\n\r\n        email = form.cleaned_data['email']\r\n\r\n        contact = form.cleaned_data['contact']\r\n\r\n        address = form.cleaned_data['address']\r\n\r\n        amount = int(form.cleaned_data['amount']) * 100\r\n\r\n        # razorpay payment\r\n\r\n        # client_key = \"rzp_test_XB0DStFIyKrvv6\"\r\n\r\n        # secret_key = \"q7i7bsYmBEi0x6U49EKGtIRO\"\r\n\r\n        client_key = settings.RAZORPAY_CLIENT_ID\r\n\r\n        secret_key = settings.RAZORPAY_SECRET_ID\r\n\r\n \r\n\r\n        client = razorpay.Client(auth=(client_key, secret_key))\r\n\r\n        data = {\"amount\": amount, \"currency\": \"INR\", \"receipt\": \"order_rcptid_11\"}\r\n\r\n        payment = client.order.create(data=data)\r\n\r\n        form.instance.order_id = payment['id']\r\n\r\n        if form.is_valid():\r\n\r\n            context = {\r\n\r\n                'form': form,\r\n\r\n                'client_key': client_key,\r\n\r\n                'payment': payment,\r\n\r\n                'name': name,\r\n\r\n                'email': email,\r\n\r\n                'contact': contact,\r\n\r\n                'address': address\r\n\r\n            }\r\n\r\n            form.save()\r\n\r\n            return render(self.request, 'RazorPay/index.html', context)\r\n\r\n        return super(IndexView, self).form_valid(form)\r\n\r\n \r\n\r\n \r\n\r\nclass SuccessView(View):\r\n\r\n    def get(self, request):\r\n\r\n        razorpay_payment_id = request.GET.get('razorpay_payment_id')\r\n\r\n        razorpay_signature = request.GET.get('razorpay_signature')\r\n\r\n        razorpay_order_id = request.GET.get('razorpay_order_id')\r\n\r\n        try:\r\n\r\n            obj = Coffee.objects.get(order_id__exact=razorpay_order_id)\r\n\r\n            obj.payment_id = razorpay_payment_id\r\n\r\n            obj.signature_id = razorpay_signature\r\n\r\n            client = razorpay.Client(auth=(settings.RAZORPAY_CLIENT_ID, settings.RAZORPAY_SECRET_ID))\r\n\r\n            params_dict = {\r\n\r\n                'razorpay_order_id': razorpay_order_id,\r\n\r\n                'razorpay_payment_id': razorpay_payment_id,\r\n\r\n                'razorpay_signature': razorpay_signature\r\n\r\n            }\r\n\r\n            check = client.utility.verify_payment_signature(params_dict)\r\n\r\n            if check:\r\n\r\n                obj.paid = True\r\n\r\n                obj.save()\r\n\r\n            else:\r\n\r\n                raise ValueError\r\n\r\n            context = {\r\n\r\n                'obj': obj\r\n\r\n            }\r\n\r\n            return render(request, 'RazorPay/success.html', context)\r\n\r\n        except Exception as e:\r\n\r\n            code = request.GET.get('code')\r\n\r\n            description = request.GET.get('description')\r\n\r\n            source = request.GET.get('source')\r\n\r\n            step = request.GET.get('step')\r\n\r\n            reason = request.GET.get('reason')\r\n\r\n            order_id = request.GET.get('order_id')\r\n\r\n            payment_id = request.GET.get('payment_id')\r\n\r\n            context = {\r\n\r\n                'obj': e,\r\n\r\n                'code': code,\r\n\r\n                'description': description,\r\n\r\n                'source': source,\r\n\r\n                'step': step,\r\n\r\n                'reason': reason,\r\n\r\n                'order_id': order_id,\r\n\r\n                'payment_id': payment_id\r\n\r\n            }\r\n\r\n            return render(request, 'RazorPay/pay_error.html', context)\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">urls.py</span></strong></span></p>\r\n<pre class=\"language-python\"><code>from django.urls import path\r\n\r\nfrom . import views\r\n\r\n \r\n\r\napp_name = 'RazorPay'\r\n\r\nurlpatterns = [\r\n\r\n    path('', views.IndexView.as_view(), name='index'),\r\n\r\n    path('success/', views.SuccessView.as_view(), name='success')\r\n\r\n]\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">base.html</span></strong></span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">&nbsp;</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>&lt;!doctype html&gt;\r\n\r\n&lt;html lang=\"en\"&gt;\r\n\r\n&lt;head&gt;\r\n\r\n    &lt;!--load static files--&gt;\r\n\r\n    {% load static %}\r\n\r\n    &lt;!--Google search console meta --&gt;\r\n\r\n    &lt;meta name=\"google-site-verification\" content=\"O637b8VrKweSEsTgXfEogQQIqpF67zo6eWEC5MhFaA0\"/&gt;\r\n\r\n \r\n\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n\r\n    &lt;meta name=\"title\" content=\"{% if object.title %} {{ object.title }} {% else %}Welcome to w3code{% endif %}\"&gt;\r\n\r\n    &lt;meta name=\"Keywords\"\r\n\r\n          content=\"HTML, Python, CSS, SQL, JavaScript, How to, PHP, Java, C, C++, C#, jQuery, Bootstrap, Colors, XML, MySQL, Icons, NodeJS, React, Graphics, Angular, R, AI, Git, Data Science, Code Game, Tutorials, Programming, Web Development, Training, Learning, Quiz, Exercises, Courses, Lessons, References, Examples, Learn to code, Source code, Demos, Tips, Website\"&gt;\r\n\r\n    &lt;meta name=\"Description\"\r\n\r\n          content=\"Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.\"&gt;\r\n\r\n    &lt;meta name=\"robots\" content=\"index, follow\"&gt;\r\n\r\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\r\n\r\n    &lt;meta name=\"language\" content=\"English\"&gt;\r\n\r\n    &lt;meta name=\"revisit-after\" content=\"days\"&gt;\r\n\r\n    &lt;meta name=\"author\" content=\"Sakib Malik\"&gt;\r\n\r\n    &lt;!--Og properties--&gt;\r\n\r\n \r\n\r\n    &lt;meta property=\"og:title\"\r\n\r\n          content=\"{% if object.title %} {{ object.title }} {% else %}Welcome to w3code{% endif %}\"/&gt;\r\n\r\n    &lt;meta property=\"og:image\" content=\"{{ host_name }}/static/logo.ico\"&gt;\r\n\r\n    &lt;meta property=\"og:image:type\" content=\"image/ico\"&gt;\r\n\r\n    &lt;meta property=\"og:image:width\" content=\"50\"&gt;\r\n\r\n    &lt;meta property=\"og:image:height\" content=\"50\"&gt;\r\n\r\n    &lt;meta property=\"og:description\"\r\n\r\n          content=\"W3Code offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.\"&gt;\r\n\r\n    &lt;meta property=\"og:locale\" content=\"en_US\"/&gt;\r\n\r\n    &lt;meta property=\"og:type\" content=\"website\"/&gt;\r\n\r\n    &lt;meta name=\"theme-color\" content=\"#4CAF50\"/&gt;\r\n\r\n    &lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"&gt;\r\n\r\n    &lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"&gt;\r\n\r\n    &lt;!--Twitter Meta --&gt;\r\n\r\n    &lt;meta name=\"twitter:description\" property=\"og:description\"\r\n\r\n          content=\"Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.\"/&gt;\r\n\r\n    &lt;meta name=\"twitter:title\" property=\"og:title\"\r\n\r\n          content=\"{% if object.title %} {{ object.title }} {% else %}Welcome to w3code{% endif %}\"/&gt;\r\n\r\n    &lt;meta property=\"og:url\" content=\"{{ host_name }}\"/&gt;\r\n\r\n    &lt;meta property=\"og:site_name\" content=\"w3code.tech\"/&gt;\r\n\r\n    &lt;meta name=\"twitter:card\" content=\"summary\"/&gt;\r\n\r\n    &lt;meta name=\"twitter:site\" content=\"@pagew3code.tech\"/&gt;\r\n\r\n    &lt;meta name=\"twitter:domain\" content=\"w3code.tech\"/&gt;\r\n\r\n    &lt;meta name=\"twitter:creator\" content=\"@pagew3code.tech\"/&gt;\r\n\r\n    &lt;title&gt;{% block title %}Welcome to Razor Pay Integration{% endblock %}&lt;/title&gt;\r\n\r\n    &lt;!-- Bootstrap CSS --&gt;\r\n\r\n    &lt;link href=\"{% static 'Bootstrap/css/bootstrap.min.css' %}\" rel=\"stylesheet\" crossorigin=\"anonymous\"&gt;\r\n\r\n    &lt;!--Icon for the title bar--&gt;\r\n\r\n    &lt;link rel=\"icon\" href=\"{% static 'logo.ico' %}\" type=\"image/x-icon\"&gt;\r\n\r\n \r\n\r\n    &lt;!--Font awesome kit cdn--&gt;\r\n\r\n    &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\"\r\n\r\n          integrity=\"sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==\"\r\n\r\n          crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/&gt;\r\n\r\n    &lt;!--CSS BLock--&gt;\r\n\r\n    {% block css %}\r\n\r\n    {% endblock %}\r\n\r\n    &lt;style&gt;\r\n\r\n        @font-face {\r\n\r\n            font-family: sofia-pro;\r\n\r\n            src: local('sofia-pro'), url(\"{% static 'Fonts/sofiapro-light.otf' %}\") format(\"truetype\");\r\n\r\n        }\r\n\r\n \r\n\r\n        #btn-back-to-top {\r\n\r\n            position: fixed;\r\n\r\n            bottom: 20px;\r\n\r\n            right: 20px;\r\n\r\n            display: none;\r\n\r\n        }\r\n\r\n    &lt;/style&gt;\r\n\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n\r\n&lt;!--Body content Block--&gt;\r\n\r\n{% include 'commonnavbar.html' %}\r\n\r\n&lt;div class=\"container-fluid\"&gt;\r\n\r\n    {% if messages %}\r\n\r\n        {% for message in messages %}\r\n\r\n            &lt;div class=\"alert alert-{{ message.tags }} mt-1 mb-1\" role=\"alert\" id=\"alert-message\"&gt;\r\n\r\n                &lt;button type=\"button\" class=\"btn-close float-end\" data-bs-dismiss=\"alert\"\r\n\r\n                        aria-label=\"Close\"&gt;&lt;/button&gt;\r\n\r\n                &lt;strong&gt;Message:&lt;/strong&gt;{{ message }}\r\n\r\n            &lt;/div&gt;\r\n\r\n        {% endfor %}\r\n\r\n    {% endif %}\r\n\r\n&lt;/div&gt;\r\n\r\n{% block content %}\r\n\r\n{% endblock %}\r\n\r\n&lt;!-- Back to top button --&gt;\r\n\r\n&lt;button type=\"button\" class=\"btn btn-primary btn-floating btn-lg\" id=\"btn-back-to-top\"&gt;\r\n\r\n    &lt;i class=\"fas fa-arrow-up\"&gt;&lt;/i&gt;\r\n\r\n&lt;/button&gt;\r\n\r\n \r\n\r\n&lt;!--Footer--&gt;\r\n\r\n{% include 'footer.html' %}\r\n\r\n&lt;/body&gt;\r\n\r\n&lt;!-- Option 1: Bootstrap Bundle with Popper --&gt;\r\n\r\n&lt;script src=\"{% static 'Bootstrap/js/bootstrap.bundle.min.js' %}\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\r\n\r\n&lt;script src=\"{% static 'Bootstrap/jquery/jquery-3.6.0.js' %}\"&gt;&lt;/script&gt;\r\n\r\n{% block js %}\r\n\r\n{% endblock %}\r\n\r\n&lt;script&gt;\r\n\r\n    //Get the button\r\n\r\n    let mybutton = document.getElementById(\"btn-back-to-top\");\r\n\r\n \r\n\r\n    // When the user scrolls down 20px from the top of the document, show the button\r\n\r\n    window.onscroll = function () {\r\n\r\n        scrollFunction();\r\n\r\n    };\r\n\r\n \r\n\r\n    function scrollFunction() {\r\n\r\n        if (document.body.scrollTop &gt; 100 || document.documentElement.scrollTop &gt; 100) {\r\n\r\n            mybutton.style.display = \"block\";\r\n\r\n        } else {\r\n\r\n            mybutton.style.display = \"none\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n \r\n\r\n    // When the user clicks on the button, scroll to the top of the document\r\n\r\n    mybutton.addEventListener(\"click\", backToTop);\r\n\r\n \r\n\r\n    function backToTop() {\r\n\r\n        document.body.scrollTop = 0;\r\n\r\n        document.documentElement.scrollTop = 0;\r\n\r\n    }\r\n\r\n&lt;/script&gt;\r\n\r\n&lt;/html&gt;\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">commonnavbar.html</span></strong></span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">&nbsp;</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>{% load static %}\r\n\r\n&lt;style&gt;\r\n\r\n    .navbar a, .navbar button {\r\n\r\n        color: white !important;\r\n\r\n    }\r\n\r\n&lt;/style&gt;\r\n\r\n \r\n\r\n&lt;nav class=\"navbar navbar-expand-lg bg-secondary\"&gt;\r\n\r\n    &lt;div class=\"container-fluid\"&gt;\r\n\r\n        &lt;a class=\"navbar-brand\" href=\"#\"&gt;\r\n\r\n            &lt;img src=\"{% static 'logo.png' %}\" alt=\"logo not load\" class=\"logo-image\"&gt;\r\n\r\n        &lt;/a&gt;\r\n\r\n        &lt;button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n\r\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"&gt;\r\n\r\n            &lt;span class=\"navbar-toggler-icon\"&gt;&lt;/span&gt;\r\n\r\n        &lt;/button&gt;\r\n\r\n        &lt;div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"&gt;\r\n\r\n            &lt;ul class=\"navbar-nav me-auto mb-2  mb-lg-0\"&gt;\r\n\r\n                &lt;li class=\"nav-item\"&gt;\r\n\r\n                    &lt;a class=\"nav-link active \" aria-current=\"page\" href=\"#\"&gt;Home&lt;/a&gt;\r\n\r\n                &lt;/li&gt;\r\n\r\n                &lt;li class=\"nav-item\"&gt;\r\n\r\n                    &lt;a class=\"nav-link active \" aria-current=\"page\" href=\"#\"&gt;Tutorial&lt;/a&gt;\r\n\r\n                &lt;/li&gt;\r\n\r\n                &lt;li class=\"nav-item\"&gt;\r\n\r\n                    &lt;a class=\"nav-link active\" href=\"#\"&gt;Blog&lt;/a&gt;\r\n\r\n                &lt;/li&gt;\r\n\r\n            &lt;/ul&gt;\r\n\r\n        &lt;/div&gt;\r\n\r\n    &lt;/div&gt;\r\n\r\n&lt;/nav&gt;\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">footer.html</span></strong></span></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">&nbsp;</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>{% load static %}\r\n\r\n&lt;!--Footer--&gt;\r\n\r\n&lt;div class=\"container\"&gt;\r\n\r\n    &lt;footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top row\"&gt;\r\n\r\n        &lt;div class=\"col-1\"&gt;\r\n\r\n            &lt;a href=\"#\" class=\"mb-3 me-md-1 mb-md-0 text-muted text-decoration-none\"&gt;\r\n\r\n                &lt;img src=\"{% static 'logo.png' %}\" alt=\"image not load\" class=\"logo-image\"&gt;\r\n\r\n            &lt;/a&gt;\r\n\r\n        &lt;/div&gt;\r\n\r\n        &lt;div class=\"col-sm-8 ms-1\"&gt;\r\n\r\n            &lt;span class=\"mb-3 mb-md-0 me-md-2 text-muted text-center\"&gt;&copy; 2022 W3code, Inc&lt;/span&gt; ||\r\n\r\n            &lt;span class=\"mb-3 mb-md-0 me-md-2 text-muted text-center\"&gt;This Website is Developed by Sakib Malik&lt;/span&gt; ||\r\n\r\n            &lt;span class=\"me-md-2\"&gt;&lt;a href=\"#\"\r\n\r\n                                     class=\"text-decoration-none\"&gt;Contact Us&lt;/a&gt;&lt;/span&gt;||\r\n\r\n            &lt;span class=\"me-md-2\"&gt;&lt;a href=\"#\" class=\"text-decoration-none\"&gt;About Us&lt;/a&gt;&lt;/span&gt;||\r\n\r\n        &lt;/div&gt;\r\n\r\n        &lt;div class=\"col-sm-2\"&gt;\r\n\r\n            &lt;ul class=\"nav \"&gt;\r\n\r\n                &lt;li class=\"ms-3\"&gt;&lt;a class=\"text-muted\" href=\"#\"&gt;\r\n\r\n                    &lt;i class=\"fa-brands fa-instagram\"&gt;&lt;/i&gt;\r\n\r\n                &lt;/a&gt;&lt;/li&gt;\r\n\r\n                &lt;li class=\"ms-3\"&gt;&lt;a class=\"text-muted\" href=\"#\"&gt;\r\n\r\n                    &lt;i class=\"fa-brands fa-twitter\"&gt;&lt;/i&gt;\r\n\r\n                &lt;/a&gt;&lt;/li&gt;\r\n\r\n                &lt;li class=\"ms-3\"&gt;&lt;a class=\"text-muted\" href=\"#\"&gt;\r\n\r\n                    &lt;i class=\"fa-brands fa-facebook\"&gt;&lt;/i&gt;\r\n\r\n                &lt;/a&gt;&lt;/li&gt;\r\n\r\n            &lt;/ul&gt;\r\n\r\n        &lt;/div&gt;\r\n\r\n    &lt;/footer&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n </code></pre>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">index.html</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>{% extends 'base.html' %}\r\n\r\n{% block css %}\r\n\r\n    &lt;style&gt;\r\n\r\n        .form-div {\r\n\r\n            width: 50%;\r\n\r\n            margin: auto;\r\n\r\n        }\r\n\r\n \r\n\r\n        @media screen and (max-width: 700px) {\r\n\r\n            .form-div {\r\n\r\n                width: 90%;\r\n\r\n                margin: auto;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    &lt;/style&gt;\r\n\r\n{% endblock %}\r\n\r\n{% load static %}\r\n\r\n{% block content %}\r\n\r\n    &lt;div class=\"container mt-3\"&gt;\r\n\r\n        &lt;div class=\"text-center\"&gt;\r\n\r\n            &lt;h2 class=\"text-center\"&gt;Buy Me Coffee&lt;/h2&gt;\r\n\r\n            &lt;img src=\"{% static 'coffee.png' %}\" alt=\"Imgage is not load\" style=\"width: 200px;\"&gt;\r\n\r\n        &lt;/div&gt;\r\n\r\n        &lt;div class=\"form-div\"&gt;\r\n\r\n            &lt;form method=\"post\"&gt;\r\n\r\n                {% csrf_token %}\r\n\r\n                {{ form }}\r\n\r\n                &lt;button class=\"btn btn-success mt-2 w-100\" type=\"submit\"&gt;Buy Me Coffee&lt;/button&gt;\r\n\r\n            &lt;/form&gt;\r\n\r\n            {% if client_key %}\r\n\r\n                &lt;button id=\"rzp-button1\" class=\"btn btn-primary mt-5\"&gt;Now Click here to Pay&lt;/button&gt;\r\n\r\n            {% endif %}\r\n\r\n        &lt;/div&gt;\r\n\r\n    &lt;/div&gt;\r\n\r\n    {% if client_key %}\r\n\r\n        &lt;script src=\"https://checkout.razorpay.com/v1/checkout.js\"&gt;&lt;/script&gt;\r\n\r\n        &lt;script&gt;\r\n\r\n            var options = {\r\n\r\n                \"key\": \"{{ client_key }}\", // Enter the Key ID generated from the Dashboard\r\n\r\n                \"amount\": \"{{ payment.amount }}\",// Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n\r\n                \"currency\": \"INR\",\r\n\r\n                \"name\": \"W3code.tech Corp\",\r\n\r\n                \"description\": \"Test Transaction\",\r\n\r\n                \"image\": \"https://w3code.tech/static/logo.png\",\r\n\r\n                \"order_id\": \"{{ payment.id }}\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n\r\n                \"handler\": function (response) {\r\n\r\n                    window.location.href = `{% url \"RazorPay:success\" %}?razorpay_payment_id=${response.razorpay_payment_id}&amp;razorpay_order_id=${response.razorpay_order_id}&amp;razorpay_signature=${response.razorpay_signature}`\r\n\r\n                    console.log(\r\n\r\n                        {\r\n\r\n                            'razorpay_payment_id': response.razorpay_payment_id,\r\n\r\n                            'razorpay_order_id': response.razorpay_order_id,\r\n\r\n                            'razorpay_signature': response.razorpay_signature\r\n\r\n                        }\r\n\r\n                    )\r\n\r\n                },\r\n\r\n                \"prefill\": {\"name\": \"{{ name }}\", \"email\": \"{{ email }}\", \"contact\": \"{{ contact }}\"},\r\n\r\n                \"notes\": {\"address\": \"{{ address }}\"},\r\n\r\n                \"theme\": {\"color\": \"#3399cc\"}\r\n\r\n            };\r\n\r\n            var rzp1 = new Razorpay(options);\r\n\r\n            rzp1.on('payment.failed', function (response) {\r\n\r\n                /*\r\n\r\n                alert(response.error.code);\r\n\r\n                alert(response.error.description);\r\n\r\n                alert(response.error.source);\r\n\r\n                alert(response.error.step);\r\n\r\n                alert(response.error.reason);\r\n\r\n                alert(response.error.metadata.order_id);\r\n\r\n                alert(response.error.metadata.payment_id);\r\n\r\n \r\n\r\n                 */\r\n\r\n                window.location.href = `{% url \"RazorPay:success\" %}?reason=${response.error.reason}&amp;code=${response.error.code}&amp;description=${response.error.description}&amp;source=${response.error.source}&amp;step=${response.error.step}&amp;order_id=${response.error.metadata.order_id}&amp;payment_id=${response.error.metadata.payment_id}`\r\n\r\n            });\r\n\r\n            document.getElementById('rzp-button1').onclick = function (e) {\r\n\r\n                rzp1.open();\r\n\r\n                e.preventDefault();\r\n\r\n            }\r\n\r\n \r\n\r\n            function fun() {\r\n\r\n                alert(\"Call\");\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        &lt;/script&gt;\r\n\r\n    {% endif %}\r\n\r\n{% endblock %}\r\n\r\n \r\n\r\n</code></pre>\r\n<p class=\"MsoNormal\"><strong style=\"font-size: 14pt;\"><span lang=\"EN-US\">pay_error.html</span></strong></p>\r\n<p class=\"MsoNormal\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">&nbsp;</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>{% extends 'base.html' %}\r\n\r\n{% load  static %}\r\n\r\n{% block content %}\r\n\r\n    &lt;div class=\"container\"&gt;\r\n\r\n        &lt;h4 class=\"text-center\"&gt;Payment Error&lt;/h4&gt;\r\n\r\n        &lt;img src=\"{% static 'error.jpg' %}\" style=\"width: 250px;\" alt=\"error image is not load\" class=\"d-block m-auto\"&gt;\r\n\r\n        &lt;button class=\"btn btn-success  float-end\" onclick=\"printreceipt()\"&gt;Print Receipt&lt;/button&gt;\r\n\r\n        &lt;table class=\"table w-50 m-auto mt-3\"&gt;\r\n\r\n            &lt;tbody&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Error is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Code is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ code }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Description is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ description }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Source is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ source }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Step is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ step }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Reason is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ reason }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Order Id is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ order_id }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th&gt;Payment Id is :&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ payment_id }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;/tbody&gt;\r\n\r\n        &lt;/table&gt;\r\n\r\n        &lt;a href=\"{% url 'RazorPay:index' %}\" class=\"btn btn-danger d-block w-25 m-auto mt-5\"&gt;Pay Again&lt;/a&gt;\r\n\r\n    &lt;/div&gt;\r\n\r\n    &lt;script&gt;\r\n\r\n        function printreceipt() {\r\n\r\n            $('.navbar').addClass('d-none')\r\n\r\n            $('footer').addClass('d-none');\r\n\r\n            $('button').addClass('d-none');\r\n\r\n            $('a').addClass('d-none')\r\n\r\n            window.print()\r\n\r\n        }\r\n\r\n \r\n\r\n        window.onafterprint = function () {\r\n\r\n            $('.navbar').removeClass('d-none')\r\n\r\n            $('footer').removeClass('d-none');\r\n\r\n            $('button').removeClass('d-none');\r\n\r\n            $('a').removeClass('d-none')\r\n\r\n        }\r\n\r\n    &lt;/script&gt;\r\n\r\n{% endblock %}\r\n\r\nsuccess.html\r\n\r\n{% extends 'base.html' %}\r\n\r\n{% block css %}\r\n\r\n{% endblock %}\r\n\r\n{% load static %}\r\n\r\n{% block content %}\r\n\r\n    &lt;div class=\"container mt-3 text-center\"&gt;\r\n\r\n        &lt;img src=\"{% static 'success_payment.png' %}\" alt=\"Image is not load\" style=\"width: 200px;\"\r\n\r\n             class=\"d-block m-auto mb-3 \"&gt;\r\n\r\n        &lt;h5&gt;Thanks Your Payment has been received &lt;/h5&gt;\r\n\r\n        &lt;h4&gt;Payment Details&lt;/h4&gt;\r\n\r\n        &lt;button class=\"btn btn-success float-end\" onclick=\"printreceipt()\"&gt;Print&lt;/button&gt;\r\n\r\n        &lt;table class=\"table text-start w-50 m-auto\"&gt;\r\n\r\n            &lt;tbody&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Payment Id&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.payment_id }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Name&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.name }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Email&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.email }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Contact&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.contact }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Address&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.address }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;tr&gt;\r\n\r\n                &lt;th scope=\"row\"&gt;Amount(Rs.)&lt;/th&gt;\r\n\r\n                &lt;td&gt;{{ obj.amount }}&lt;/td&gt;\r\n\r\n            &lt;/tr&gt;\r\n\r\n            &lt;/tbody&gt;\r\n\r\n        &lt;/table&gt;\r\n\r\n        &lt;a href=\"{% url 'RazorPay:index' %}\" class=\"text-decoration-none fs-3 btn btn-outline-success mt-2\"&gt;Go to Home&lt;/a&gt;\r\n\r\n    &lt;/div&gt;\r\n\r\n{% endblock %}\r\n\r\n{% block js %}\r\n\r\n    &lt;script&gt;\r\n\r\n        function printreceipt() {\r\n\r\n            $('.navbar').addClass('d-none')\r\n\r\n            $('footer').addClass('d-none');\r\n\r\n            $('button').addClass('d-none');\r\n\r\n            $('a').addClass('d-none')\r\n\r\n            window.print()\r\n\r\n        }\r\n\r\n \r\n\r\n        window.onafterprint = function () {\r\n\r\n            $('.navbar').removeClass('d-none')\r\n\r\n            $('footer').removeClass('d-none');\r\n\r\n            $('button').removeClass('d-none');\r\n\r\n            $('a').removeClass('d-none')\r\n\r\n        }\r\n\r\n    &lt;/script&gt;\r\n\r\n{% endblock %}\r\n\r\n \r\n\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p style=\"text-align: center;\"><strong><span style=\"font-size: 24pt;\"><img src=\"../../../../../media/tinymce/Screenshot (6).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></strong></p>\r\n<p style=\"text-align: center;\"><strong><span style=\"font-size: 24pt;\"><img src=\"../../../../../media/tinymce/Screenshot (7).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></strong></p>\r\n<p style=\"text-align: center;\"><strong><span style=\"font-size: 24pt;\"><img src=\"../../../../../media/tinymce/Screenshot (8).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></strong></p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\"><strong><span style=\"font-size: 24pt;\"><img src=\"../../../../../media/tinymce/Screenshot (10).png\" alt=\"\" width=\"50%\" height=\"25%\" /></span></strong></p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\"><strong><span style=\"font-size: 24pt;\">Run Django Project</span></strong></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">Add Localhost Custom Domain Name(Windows):</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">open notepad as admin mode&nbsp;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">from notepad menu click open button</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">Location is:</span></p>\r\n<pre class=\"language-markup\"><code>C:\\Windows\\System32\\drivers\\etc</code></pre>\r\n<p>here host file click open (make sure all file select in notepad open window )</p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"../../../../../media/tinymce/Screenshot (15).png\" alt=\"\" width=\"50%\" height=\"25%\" /></p>\r\n<p><strong>add&nbsp;</strong></p>\r\n<pre class=\"language-markup\"><code># Copyright (c) 1993-2009 Microsoft Corp.\r\n#\r\n# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.\r\n#\r\n# This file contains the mappings of IP addresses to host names. Each\r\n# entry should be kept on an individual line. The IP address should\r\n# be placed in the first column followed by the corresponding host name.\r\n# The IP address and the host name should be separated by at least one\r\n# space.\r\n#\r\n# Additionally, comments (such as these) may be inserted on individual\r\n# lines or following the machine name denoted by a '#' symbol.\r\n#\r\n# For example:\r\n#\r\n#      102.54.94.97     rhino.acme.com          # source server\r\n#       38.25.63.10     x.acme.com              # x client host\r\n\r\n# localhost name resolution is handled within DNS itself.\r\n#\t127.0.0.1       localhost\r\n#\t::1             localhost\r\n\t127.0.0.1       mysite.com\r\n</code></pre>\r\n<p><strong>now open settings.py of django</strong></p>\r\n<p>and add Domain Name</p>\r\n<pre class=\"language-python\"><code>ALLOWED_HOSTS = [\"mysite.com\", \"127.0.0.1\"]</code></pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Now open Browser Type url</strong></p>\r\n<pre class=\"language-markup\"><code>http://mysite.com:8000/</code></pre>\r\n<p>Github Repo: <a href=\"https://github.com/OneSakib/RazorPay-Integrate-with-Django\">https://github.com/OneSakib/RazorPay-Integrate-with-Django</a></p>\r\n<p><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\" style=\"mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin; mso-ansi-language: EN-US;\">Conslusion:</span></strong></span></p>\r\n<p>This is the all Configuration of Razorpay with python and Django by the API key, if any help you can conatact me <a title=\"Contact Us\" href=\"../../../../contactus/\" target=\"_blank\" rel=\"noopener\">https://w3code.tech/contactus/</a></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>", "viewcounter": 21, "parent": 167}}, {"model": "PythonApp.restapi", "pk": 1, "fields": {"author": 1, "title": "Intro", "slug": "intro", "timestamp": "2022-08-27T09:33:01.456", "content": "<p style=\"text-align: center;\"><strong><span style=\"font-size: 18pt; color: #3598db;\">Django Rest API Framework</span></strong></p>\r\n<p><span style=\"font-size: 14pt;\"><strong>What is a API?</strong></span></p>\r\n<p><em><span style=\"font-size: 14pt;\"><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://ares.decipherzone.com/blog-manager/uploads/banner_webp_cdb52858-33df-4649-9261-895cb5142a0f.webp\" alt=\"\" width=\"100%\" height=\"100%\" /></strong></span></em></p>\r\n<p style=\"text-align: center;\"><span style=\"font-size: 8pt;\">&gt; Image source from ares.decipherzone.com</span></p>\r\n<p><span style=\"font-size: 14pt;\">In computer programming, an application programming interface (API) is a set of routines, protocols, and tools for building software applications. An API expresses a software component in terms of its operations, inputs, outputs, and underlying types. An API defines functionalities that are independent of their respective implementations, which allows definitions and implementations to vary without compromising the interface. A good API makes it easier to develop a program by providing all the building blocks. A programmer then puts the blocks together.</span></p>\r\n<p><span style=\"font-size: 14pt;\">In addition to accessing databases or computer hardware, such as hard disk drives or video cards, an API can ease the work of programming GUI components. For example, an API can facilitate integration of new features into existing applications (a so-called &ldquo;plug-in API&rdquo;). An API can also assist otherwise distinct applications with sharing data, which can help to integrate and enhance the functionalities of the applications.</span></p>\r\n<p><span style=\"font-size: 14pt;\">APIs often come in the form of a library that includes specifications for routines, data structures, object classes, and variables. In other cases, notably SOAP and REST services, an API is simply a specification of remote calls exposed to the API consumers.</span></p>\r\n<p><span style=\"font-size: 14pt;\">An API specification can take many forms, including an International Standard, such as POSIX, vendor documentation, such as the Microsoft Windows API, or the libraries of a programming language, e.g., the Standard Template Library in C++ or the Java APIs. An API differs from an application binary interface (ABI) in that an API is source code-based while an ABI is a binary interface. For instance POSIX is an API, while the Linux Standard Base provides an ABI.</span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong>What is a web API?</strong></span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://csharpcorner-mindcrackerinc.netdna-ssl.com/article/asp-net-core-5-0-web-api/Images/Asp.Net%20Core%205.0%20Web%20API1.png\" alt=\"\" width=\"100%\" height=\"100%\" /></strong></span></p>\r\n<p style=\"text-align: center;\">&gt;<span style=\"font-size: 8pt;\"> image Source from&nbsp;csharpcorner-mindcrackerinc.netdna-ssl.com</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">A web API is the pattern of HTTP requests and responses that is used to access a website that is specialized for access by arbitrary computer programs, rather than (or as well as) web browsers used by humans.</span></p>\r\n<p style=\"text-align: left;\"><strong><span style=\"font-size: 14pt;\">What is REST?</span></strong></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">REST is the name that has been given to the architectural style of HTTP itself, described by one of the leading authors of the HTTP specifications. HTTP is the reality&mdash;REST is a set of design ideas that shaped it. From a practical point of view, we can focus our attention on HTTP and how we use it to develop APIs. The importance of REST is that it helps us understand how to think about HTTP and its use.&nbsp;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\"><strong>Designing Representations&nbsp;</strong></span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">Many discussions of API design begin with an extensive discussion of URL design. In a data-oriented model like REST, we think it is better to start with the representation design. We discuss URLs in the section called Designing URLs.</span></p>\r\n<p style=\"text-align: left;\"><strong><span style=\"font-size: 14pt;\">Use JSON</span></strong></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">The dominant media type for resource representations in web APIs is JavaScript Object Notation (JSON). The primary reasons for JSON&rsquo;s success are probably that it is simple to understand, and it is easy to map to the programming data structures of JavaScript and other popular programming languages (Python, Ruby, Java, and so on). It is now the de facto standard for web APIs, and you should use it.&nbsp;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">While JSON is very good and very popular, it is not perfect for our purposes. One limitation is that JSON can only represent a small number of data types (Null, Boolean, Number, String). The most common types we have come across in web API design that are not supported by JSON are dates and times and URLs.&nbsp;</span></p>\r\n<p style=\"text-align: left;\"><strong><span style=\"font-size: 14pt;\">Keep your JSON simple</span></strong></p>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">When JSON is used well, it is simple, intuitive, and largely self-explanatory. If your JSON doesn&rsquo;t look as straightforward as the example below, you may be doing something wrong.</span></p>\r\n<pre class=\"language-javascript\"><code>{ \r\n&ldquo;kind&rdquo;: &ldquo;Dog&rdquo;\r\n&ldquo;name&rdquo;: &ldquo;Lassie&rdquo;, \r\n&ldquo;furColor&rdquo;: &ldquo;brown&rdquo;,\r\n... \r\n}\r\n</code></pre>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\">Here is an example from the Facebook graph API that shows what JSON looks like when it doesn&rsquo;t follow this advice:</span></p>\r\n<pre class=\"language-javascript\"><code>{ \r\n&ldquo;{user-id-a}&rdquo;: { \r\n&ldquo;data&rdquo;: [\r\n {\r\n &ldquo;id&rdquo;: &ldquo;12345&rdquo;, \r\n &ldquo;picture&rdquo;: &ldquo;{photo-url}&rdquo;, \r\n &ldquo;created_time&rdquo;: &ldquo;2014-07-15T15:11:25+0000&rdquo;\r\n }\r\n ... // More photos\r\n ]\r\n},\r\n&ldquo;{user-id-b}&rdquo;: { \r\n &ldquo;data&rdquo;: [\r\n {\r\n&hellip;\r\n</code></pre>\r\n<p>&nbsp;</p>\r\n<p>Reference from the Google API DOCS</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>", "viewcounter": 87, "parent": 107}}, {"model": "PythonApp.restapi", "pk": 2, "fields": {"author": 1, "title": "Quickstart First API", "slug": "quickstart-first-api", "timestamp": "2022-08-27T01:41:00.043", "content": "<p><span style=\"font-size: 18pt;\">QuickStart</span></p>\r\n<p><span style=\"font-size: 14pt;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">We're going to create a simple API to allow admin users to view and edit the users and groups in the system.</span></span></p>\r\n<p><span style=\"font-size: 18pt;\">Project Setup</span></p>\r\n<p><span style=\"font-size: 14pt;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Create a new Django project named&nbsp;</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">, then start a new app called&nbsp; <code>App</code></span><span style=\"color: #e03e2d;\"><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">.</span></span></span></p>\r\n<p><strong><span style=\"font-size: 14pt;\"><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Setup 1. </span></span><span style=\"font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; font-size: 14pt;\">Create the project directory</span></strong></p>\r\n<pre class=\"language-markup\"><code>mkdir BASE\r\ncd BASE\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Setup 2.&nbsp;</span><span style=\"font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif;\"> Create a virtual environment to isolate our package dependencies locally</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>python3 -m venv env\r\nsource env/bin/activate  # On Windows use `env\\Scripts\\activate`</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 3.&nbsp;<span style=\"font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif;\">Install Django and Django REST framework into the virtual environment</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>pip install django\r\npip install djangorestframework\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 4.&nbsp;<span style=\"font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif;\"> Set up a new project with a single application</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>django-admin startproject BASE.  # Note the trailing '.' character\r\ncd BASE\r\ndjango-admin startapp APP\r\ncd ..</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">The project layout should look like:</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>$ pwd\r\n&lt;some path&gt;/BASE\r\n$ find .\r\n.\r\n./manage.py\r\n./BASE\r\n./BASE/__init__.py\r\n./BASE/App\r\n./BASE/quickstart/__init__.py\r\n./BASE/quickstart/admin.py\r\n./BASE/quickstart/apps.py\r\n./BASE/quickstart/migrations\r\n./BASE/quickstart/migrations/__init__.py\r\n./BASE/quickstart/models.py\r\n./BASE/quickstart/tests.py\r\n./BASE/quickstart/views.py\r\n./BASE/asgi.py\r\n./BASE/settings.py\r\n./BASE/urls.py\r\n./BASE/wsgi.py</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 5.&nbsp;<span style=\"background-color: #ffffff; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">Now sync your database for the first time:</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>python manage.py migrate\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 6 (Optional). <span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">We'll also create an initial user named&nbsp;</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">admin</code><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">&nbsp;with a password of&nbsp;</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">password123</code><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">. We'll authenticate as that user later in our example.&nbsp;</span></strong></span></p>\r\n<pre class=\"language-markup\"><code>python manage.py createsuperuser --email admin@example.com --username admin</code></pre>\r\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14pt; background-color: #ffffff;\">Once you've set up a database and the initial user is created and ready to go, open up the app's directory and we'll get coding...</span></p>\r\n<p><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14pt; background-color: #ffffff;\">Step 7. settings.py</span></strong></p>\r\n<p><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Let's modify </span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/settings.py</code></p>\r\n<pre class=\"language-python\"><code>.......\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'App', # our app\r\n    'rest_framework' #rest Framewrok\r\n]\r\n...............</code></pre>\r\n<p>&nbsp;</p>\r\n<p><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14pt; background-color: #ffffff;\">Step 7. models.py</span></strong></p>\r\n<p><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Let's modify</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/models.py</code></p>\r\n<pre class=\"language-python\"><code>from django.db import models\r\n\r\n\r\n# Create your models here.\r\nclass Student(models.Model):\r\n    name = models.CharField(max_length=100)\r\n    course = models.CharField(max_length=100)\r\n    year = models.IntegerField(default=0)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n</code></pre>\r\n<p><strong><span style=\"font-size: 14pt;\"><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Step 8. admin.py</span></span></strong></p>\r\n<p><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Let's modify</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/admin.py</code></p>\r\n<pre class=\"language-python\"><code>from django.contrib import admin\r\nfrom .models import Student\r\n\r\n\r\n# Register your models here.\r\n@admin.register(Student)\r\nclass StudentAdmin(admin.ModelAdmin):\r\n    list_display = ['name', 'course', 'year']\r\n</code></pre>\r\n<p><strong><span style=\"font-size: 14pt;\"><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">step 9. </span>Serializers serializers.py</span></strong></p>\r\n<p><span style=\"font-size: 14pt;\"><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Let's create a new module named </span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/App/serializers.py</code><span style=\"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">&nbsp;that we'll use for our data representations.</span></span></p>\r\n<pre class=\"language-python\"><code>from rest_framework import serializers\r\nfrom .models import Student\r\n\r\n\r\nclass Student_serializer(serializers.HyperlinkedModelSerializer):\r\n    class Meta:\r\n        model = Student\r\n        fields = '__all__'\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 10. views.py</strong></span></p>\r\n<p><span style=\"font-size: 14pt;\"><strong>&nbsp;</strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Right, we'd better write some views then. Open&nbsp;</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/App/views.py</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"> and get typing.</span></span></p>\r\n<pre class=\"language-python\"><code>from rest_framework import generics\r\nfrom .models import Student\r\nfrom .serializations import Student_serializer\r\n\r\n\r\n# Create your views here.\r\nclass APICLASSVIEW(generics.ListCreateAPIView):\r\n    serializer_class = Student_serializer\r\n    queryset = Student.objects.all()\r\n\r\n\r\nclass APICLASSDDetailVIEW(generics.RetrieveUpdateAPIView, generics.RetrieveUpdateDestroyAPIView):\r\n    serializer_class = Student_serializer\r\n    queryset = Student.objects.all()\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 11. Urls.py</strong></span></p>\r\n<p><span style=\"font-size: 14pt;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Okay, now let's wire up the API URLs. On to&nbsp;</span><code style=\"padding: 2px 4px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif; color: #dd1144; background-color: #f7f7f9; border: 1px solid #e1e1e8;\">BASE/urls.py</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">...</span></span></p>\r\n<pre class=\"language-python\"><code>from django.urls import path\r\nfrom . import views\r\nfrom django.conf.urls import static\r\nfrom django.conf import settings\r\n\r\nurlpatterns = [\r\n    path('api/', views.APICLASSVIEW.as_view(), name='post'),\r\n    path('api/&lt;pk&gt;/', views.APICLASSDDetailVIEW.as_view(), name='student-detail'),\r\n]\r\n</code></pre>\r\n<p><strong><span style=\"font-size: 14pt;\">Step 12 .&nbsp; create migrations</span></strong></p>\r\n<pre class=\"language-python\"><code>python manage.py makemigrations\r\npython manage.py migrate\r\n</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong>Step 13. runserver</strong></span></p>\r\n<pre class=\"language-python\"><code>python manage.py runserver</code></pre>\r\n<p><span style=\"font-size: 14pt;\"><strong><a href=\"../../../../../api/\">http://127.0.0.1:8000/api/</a> type in browser</strong></span></p>\r\n<p><img src=\"https://i.ibb.co/wc4pW6g/Screenshot-3.png\" alt=\"\" width=\"100%\" height=\"50%\" /></p>\r\n<p><strong><span style=\"font-size: 14pt;\">Click on the give links to show detail view</span></strong></p>\r\n<p><img src=\"https://i.ibb.co/VLWJtDd/Screenshot-2.png\" alt=\"not load\" width=\"100%\" height=\"50%\" /></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>", "viewcounter": 20, "parent": 107}}, {"model": "PythonApp.flask", "pk": 1, "fields": {"author": 1, "title": "Python | Introduction to Web development using Flask", "slug": "python-introduction-to-web-development-using-flask", "timestamp": "2022-08-25T18:28:30.973", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 28, "parent": 96}}, {"model": "PythonApp.machinelearning", "pk": 1, "fields": {"author": 1, "title": "An Introduction to Machine Learning", "slug": "an-introduction-to-machine-learning", "timestamp": "2022-08-26T08:44:03.173", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 19, "parent": 99}}, {"model": "PythonApp.numpys", "pk": 1, "fields": {"author": 1, "title": "NumPy Introduction", "slug": "numpy-introduction", "timestamp": "2022-08-25T18:37:25.262", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 28, "parent": 101}}, {"model": "PythonApp.tkinters", "pk": 1, "fields": {"author": 1, "title": "Introduction to Tkinter", "slug": "introduction-to-tkinter", "timestamp": "2022-08-27T02:41:03.466", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 26, "parent": 111}}, {"model": "PythonApp.pytorchs", "pk": 1, "fields": {"author": 1, "title": "INTRODUCTION TO PYTORCH", "slug": "introduction-to-pytorch", "timestamp": "2022-08-25T21:54:27.811", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 27, "parent": 106}}, {"model": "PythonApp.pygames", "pk": 1, "fields": {"author": 1, "title": "Introduction to Pygame", "slug": "introduction-to-pygame", "timestamp": "2022-08-26T05:36:15.202", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 35, "parent": 105}}, {"model": "PythonApp.scipys", "pk": 1, "fields": {"author": 1, "title": "Introduction", "slug": "introduction", "timestamp": "2022-08-25T16:11:43.893", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 28, "parent": 108}}, {"model": "PythonApp.pandass", "pk": 1, "fields": {"author": 1, "title": "Pandas Introduction", "slug": "pandas-introduction", "timestamp": "2022-08-25T10:07:14.358", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 33, "parent": 103}}, {"model": "PythonApp.opencvs", "pk": 1, "fields": {"author": 1, "title": "Introduction to OpenCV", "slug": "introduction-to-opencv", "timestamp": "2022-08-25T18:46:33.374", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 24, "parent": 102}}, {"model": "PythonApp.matplotlibs", "pk": 1, "fields": {"author": 1, "title": "Python | Introduction to Matplotlib", "slug": "python-introduction-to-matplotlib", "timestamp": "2022-08-25T19:14:53.427", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 38, "parent": 100}}, {"model": "PythonApp.seleniums", "pk": 1, "fields": {"author": 1, "title": "What is Selenium? Introduction to Selenium Automation Testing", "slug": "what-is-selenium-introduction-to-selenium-automation-testing", "timestamp": "2022-08-25T18:02:55.123", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 23, "parent": 109}}, {"model": "PythonApp.kivys", "pk": 1, "fields": {"author": 1, "title": "Introduction to Kivy ; A Cross-platform Python Framework", "slug": "introduction-to-kivy-a-cross-platform-python-framework", "timestamp": "2022-08-18T12:37:29.546", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 1, "parent": 98}}, {"model": "PythonApp.jupyters", "pk": 1, "fields": {"author": 1, "title": "Jupyter Notebook: An Introduction", "slug": "jupyter-notebook-an-introduction", "timestamp": "2022-08-26T06:18:12.713", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 33, "parent": 97}}, {"model": "PythonApp.datascience", "pk": 1, "fields": {"author": 1, "title": "Introduction to Data Science", "slug": "introduction-to-data-science", "timestamp": "2022-08-27T04:45:05.633", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 36, "parent": 93}}, {"model": "PythonApp.deeplearning", "pk": 1, "fields": {"author": 1, "title": "Introduction to Deep Learning", "slug": "introduction-to-deep-learning", "timestamp": "2022-08-26T01:49:57.373", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 28, "parent": 94}}, {"model": "PythonApp.pillows", "pk": 1, "fields": {"author": 1, "title": "Pillow Introduction", "slug": "pillow-introduction", "timestamp": "2022-08-26T21:19:13.793", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 27, "parent": 104}}, {"model": "PythonApp.tensorflows", "pk": 1, "fields": {"author": 1, "title": "TensorFlow - Introduction", "slug": "tensorflow-introduction", "timestamp": "2022-08-25T05:11:15.929", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 20, "parent": 110}}, {"model": "PythonApp.dspython", "pk": 1, "fields": {"author": 1, "title": "intro", "slug": "intro", "timestamp": "2022-08-26T23:54:59.797", "content": "<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt; color: #169179;\">w3code.tech</span></h1>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<p style=\"text-align: center;\">&nbsp;</p>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Hiii Everyone,</span></h1>\r\n<h1 style=\"text-align: center;\"><span style=\"font-size: 36pt;\">Sorry this page is not created yet... we soon create</span></h1>\r\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\r\n<p>&nbsp;</p>", "viewcounter": 34, "parent": 92}}, {"model": "PythonApp.djangolike", "pk": 1, "fields": {"user": 1, "post": 1}}, {"model": "PythonApp.djangolike", "pk": 2, "fields": {"user": 1, "post": 2}}, {"model": "PythonApp.restapilike", "pk": 1, "fields": {"user": 1, "post": 1}}, {"model": "PythonApp.restapilike", "pk": 3, "fields": {"user": 1, "post": 2}}]