# Generated by Django 4.0.5 on 2022-06-26 01:14

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('MainApp', '0010_alter_tutlist_link'),
    ]

    operations = [
        migrations.CreateModel(
            name='A2Hosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'A2Hosting',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AWS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'AWS',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BlueHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'BlueHost',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DigitalOcean',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'DigitalOcean',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GithubHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'GithubHost',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GoDaddy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'GoDaddy',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GreenGeeks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'GreenGeeks',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='HerokuApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'HerokuApp',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='HostGator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'HostGator',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Hostinger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Hostinger',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InMotionHosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'InMotionHosting',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MSAzure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'MSAzure',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PythonAnywhere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', tinymce.models.HTMLField()),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'PythonAnywhere',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PythonAnywhereComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PythonAnywhereComments', to='HostingApp.pythonanywhere')),
            ],
            options={
                'verbose_name_plural': 'PythonAnywhereComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='MSAzureComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MSAzureCom', to='HostingApp.msazure')),
            ],
            options={
                'verbose_name_plural': 'MSAzureComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='InMotionHostingComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InMotionHostingComments', to='HostingApp.inmotionhosting')),
            ],
            options={
                'verbose_name_plural': 'InMotionHostingComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='HostingerComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='HostingerComments', to='HostingApp.hostinger')),
            ],
            options={
                'verbose_name_plural': 'HostingerComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='HostGatorComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='HostGatorComments', to='HostingApp.hostgator')),
            ],
            options={
                'verbose_name_plural': 'HostGatorComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='HerokuAppComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='HerokuAppComments', to='HostingApp.herokuapp')),
            ],
            options={
                'verbose_name_plural': 'HerokuAppComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='GreenGeeksComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='GreenGeeksComments', to='HostingApp.greengeeks')),
            ],
            options={
                'verbose_name_plural': 'GreenGeeksComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='GoDaddyComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='GoDaddyComments', to='HostingApp.godaddy')),
            ],
            options={
                'verbose_name_plural': 'GoDaddyComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='GithubHostComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='GithubHostComments', to='HostingApp.githubhost')),
            ],
            options={
                'verbose_name_plural': 'GithubHostComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='DigitalOceanComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DigitalOceancomments', to='HostingApp.digitalocean')),
            ],
            options={
                'verbose_name_plural': 'DigitalOceanComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='BlueHostComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BlueHostComments', to='HostingApp.bluehost')),
            ],
            options={
                'verbose_name_plural': 'BlueHostComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='AWSComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AWSComments', to='HostingApp.aws')),
            ],
            options={
                'verbose_name_plural': 'AWSComments',
            },
            bases=('MainApp.comments',),
        ),
        migrations.CreateModel(
            name='A2HostingComments',
            fields=[
                ('comments_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='MainApp.comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='A2HostingComments', to='HostingApp.a2hosting')),
            ],
            options={
                'verbose_name_plural': 'A2HostingComments',
            },
            bases=('MainApp.comments',),
        ),
    ]
