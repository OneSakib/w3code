# Generated by Django 4.0.5 on 2022-06-23 02:18

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'CExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CPlusExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'CPlusExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CSharpExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'CSharpExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DotNetExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'DotNetExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='JavaExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'JavaExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='JavaScriptExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'JavaScriptExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='KotlinExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'KotlinExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PHPExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'PHPExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PythonExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'PythonExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswerCommon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', tinymce.models.HTMLField(default='')),
                ('answer', tinymce.models.HTMLField(default='')),
            ],
            options={
                'verbose_name_plural': 'Question and Answer',
            },
        ),
        migrations.CreateModel(
            name='RExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'RExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SwiftExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('viewcounter', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'SwiftExercise',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SwiftQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.swiftexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='RQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.rexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='PythonQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.pythonexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='PHPQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.phpexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='KotlinQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.kotlinexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='JavaQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.javaexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='DotNetQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.dotnetexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='CSharpQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.csharpexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='CQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.cexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
        migrations.CreateModel(
            name='CplusQuestionAnswer',
            fields=[
                ('questionanswercommon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercise.questionanswercommon')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exercise.cplusexercise')),
            ],
            bases=('Exercise.questionanswercommon',),
        ),
    ]
